[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NASA-TLX",
    "section": "",
    "text": "Description here"
  },
  {
    "objectID": "preprocess.html",
    "href": "preprocess.html",
    "title": "NASA-TLX",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\n\n\n\n\n\nmr_preproc <- function(d) {\n\n  require(tidyverse)\n  \n  d |> select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      \"id\" = \"Индивидуальный_код\",\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -> MR_easy # ready to use\n  \n  \n  d |> select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |>  # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -> MR_medium # ready to use\n  \n  \n  \n  d |> select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -> MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -> MR\n  \n  return(MR)\n  \n}\n\n\nms_preproc <- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count <- function(df) {\n    df |> select(matches(\"^noun\")) |> as.matrix() -> s\n    df |> select(matches(\"^resp\")) |> as.matrix() -> r\n    a <- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] <- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |> select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"easy\") |>\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"id\" = \"Индивидуальный_код\",\n        \"rt\" = \"mouse_MSe.time\"\n      ) |>\n      select(-c(paste0(\"noun\", 4:7))) -> MS_easy\n    \n    d |> select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"medium\") |> \n      rename(\"id\" = \"Индивидуальный_код\",\n             \"rt\" = \"mouse_MSm.time\") |>\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |> \n      select(-noun6, -noun7) -> MS_medium\n    \n    \n    d |> select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"hard\") |>\n      rename(\"id\" = \"Индивидуальный_код\",\n             \"rt\" = \"mouse_MSh.time\") |> \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -> MS_hard\n    \n  } else {\n    \n    d |> select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |>\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"id\" = \"Индивидуальный_код\"\n      ) |>\n      select(-c(paste0(\"noun\", 4:7))) -> MS_easy\n    \n    d |> select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"MSm.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |>\n      rename(\"id\" = \"Индивидуальный_код\") |>\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |> \n      select(-noun6, -noun7) -> MS_medium\n    \n    \n    d |> select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"MSh.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |>\n      rename(\"id\" = \"Индивидуальный_код\") |> \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -> MS_hard\n  }\n  \n  tibble(\n    id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |>\n    pivot_longer(cols = -c(\"id\", \"trials\"), values_to = \"value\") |>\n    separate(name, c(\"task\", \"level\", \"name\")) |>\n    pivot_wider(values_from = value, names_from = name) |>\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -> MS\n  \n  return(MS)\n  \n}\n\n\nst_preproc <- function(d) {\n\n  require(tidyverse)\n  \n  d |> select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -> ST_easy # ready to use\n  \n  d |> select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -> ST_medium # ready to use\n  \n  \n  d |> select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -> ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -> ST\n  \n  return(ST)\n\n}\n\n\nnasatlx_preproc <- function(d) {\n  d |> select(\"Индивидуальный_код\",\n              slider.response,\n              head,\n              task_type,\n              task_level) |>\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |>\n    rename(\"id\" = \"Индивидуальный_код\",\n           \"score\" = slider.response) |>\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |>\n    select(id, scale, score, task, level) -> NASATLX\n  \n  return(NASATLX)\n}\n\n\nsequence_preproc <- function(d) {\n  \n  d |> select(\n    E_rotation,\n    M_rotation,\n    H_rotation,\n    E_Sternberg,\n    M_Sternberg,\n    H_Sternberg,\n    E_span,\n    M_span,\n    H_span\n  ) |>\n    drop_na() |>\n    sapply(function(x) which(x == 1)) -> v \n    \n  tibble(name = names(v),\n           order = v,\n           id = d[[\"Индивидуальный_код\"]][1]) |>\n    arrange(order) |>\n    separate(name, c(\"level\", \"task\"), \"_\") |>\n    mutate(\n      task = recode(\n        task,\n        \"rotation\" = \"MR\",\n        \"Sternberg\" = \"ST\",\n        \"span\" = \"MS\"\n      ),\n      level = recode(\n        level,\n        \"E\" = \"easy\",\n        \"M\" = \"medium\",\n        \"H\" = \"hard\"\n      )\n    ) -> SEQUENCE\n  \n  return(SEQUENCE)\n  \n}\n\n\n\n\n\nfiles <- paste0(\"../data-firstbanch/\", dir(\"../data-firstbanch\"))\nlength(files)\n\n[1] 78\n\n\n\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\nSEQUENCE_data <- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  SEQUENCE_data |> bind_rows(sequence_preproc(d) |> mutate(file = files[i])) -> SEQUENCE_data\n\n}\n\n[1] \"../data-firstbanch/001SSMS_entire_exp_2022-05-31_18h24.17.csv\"\n[1] \"../data-firstbanch/003SSKS_entire_exp_2022-06-16_20h02.35.389.csv\"\n[1] \"../data-firstbanch/004SSDR_entire_exp_2022-06-02_21h35.09.567.csv\"\n[1] \"../data-firstbanch/005SSDR_entire_exp_2022-05-31_20h43.50.910.csv\"\n[1] \"../data-firstbanch/006SSEE_entire_exp_2022-06-02_22h14.18.092.csv\"\n[1] \"../data-firstbanch/007SSJM_entire_exp_2022-06-01_15h12.27.341.csv\"\n[1] \"../data-firstbanch/008SSEP_entire_exp_2022-09-15_21h36.55.631.csv\"\n[1] \"../data-firstbanch/009SSAP_entire_exp_2022-06-04_15h48.30.436.csv\"\n[1] \"../data-firstbanch/010SSEA_entire_exp_2022-06-07_24h08.05.064.csv\"\n[1] \"../data-firstbanch/011SSAB_entire_exp_2022-06-01_14h54.48.csv\"\n[1] \"../data-firstbanch/012EROP_entire_exp_2022-07-14_20h26.20.219.csv\"\n[1] \"../data-firstbanch/013ERVB_entire_exp_2022-06-23_15h53.22.750.csv\"\n[1] \"../data-firstbanch/014ERAI_entire_exp_2022-06-16_13h57.46.683.csv\"\n[1] \"../data-firstbanch/015ERIG_entire_exp_2022-08-17_23h56.01.csv\"\n[1] \"../data-firstbanch/016ERSA_entire_exp_2022-06-16_14h19.07.981.csv\"\n[1] \"../data-firstbanch/017ERVZ_entire_exp_2022-08-20_16h11.35.184.csv\"\n[1] \"../data-firstbanch/019ERSM_entire_exp_2022-06-18_21h43.19.372.csv\"\n[1] \"../data-firstbanch/021SSAZ_entire_exp_2022-07-15_03h19.45.491.csv\"\n[1] \"../data-firstbanch/022ERVS_entire_exp_2022-07-15_21h42.11.588.csv\"\n[1] \"../data-firstbanch/023ERRS_entire_exp_2022-07-11_18h59.41.csv\"\n[1] \"../data-firstbanch/024SSSV_entire_exp_2022-07-24_18h50.18.841.csv\"\n[1] \"../data-firstbanch/025ARAS_entire_exp_2023-05-02_19h18.58.479.csv\"\n[1] \"../data-firstbanch/026SSDM_entire_exp_2022-07-16_12h26.44.968.csv\"\n[1] \"../data-firstbanch/027ARDB_entire_exp_2022-07-18_10h37.13.819.csv\"\n[1] \"../data-firstbanch/029SSDL_entire_exp_2022-07-16_09h09.20.517.csv\"\n[1] \"../data-firstbanch/030SSPM_entire_exp_2022-08-17_21h31.18.058.csv\"\n[1] \"../data-firstbanch/031SSAS_entire_exp_2022-07-16_08h00.03.221.csv\"\n[1] \"../data-firstbanch/032SSAP_entire_exp_2022-07-17_13h28.21.518.csv\"\n[1] \"../data-firstbanch/033SSML_entire_exp_2022-07-26_18h52.18.365.csv\"\n[1] \"../data-firstbanch/035SSDD_entire_exp_2022-08-14_12h43.23.036.csv\"\n[1] \"../data-firstbanch/037ARDL_entire_exp_2022-07-16_22h20.51.764.csv\"\n[1] \"../data-firstbanch/038AREN_entire_exp_2022-07-19_11h25.52.006.csv\"\n[1] \"../data-firstbanch/039ARVP_entire_exp_2022-08-08_15h15.43.173.csv\"\n[1] \"../data-firstbanch/040ARKK_entire_exp_2023-04-23_17h12.22.533.csv\"\n[1] \"../data-firstbanch/042SSAA_entire_exp_2022-08-17_14h03.26.713.csv\"\n[1] \"../data-firstbanch/045SSEM_entire_exp_2022-08-17_14h07.54.819.csv\"\n[1] \"../data-firstbanch/046SSVS_entire_exp_2022-08-20_13h21.07.492.csv\"\n[1] \"../data-firstbanch/047SSAK_entire_exp_2022-08-20_23h14.23.266.csv\"\n[1] \"../data-firstbanch/048SSAG_entire_exp_2022-08-18_20h28.36.828.csv\"\n[1] \"../data-firstbanch/050SSAA_entire_exp_2023-04-21_13h38.45.765.csv\"\n[1] \"../data-firstbanch/052SSME_entire_exp_2022-08-26_10h32.55.991.csv\"\n[1] \"../data-firstbanch/053SSAF_entire_exp_2022-08-25_21h56.58.660.csv\"\n[1] \"../data-firstbanch/054SSEB_entire_exp_2022-08-25_18h20.01.028.csv\"\n[1] \"../data-firstbanch/055SSNS_entire_exp_2022-08-27_10h54.17.951.csv\"\n[1] \"../data-firstbanch/056SSKA_entire_exp_2022-08-26_10h55.02.575.csv\"\n[1] \"../data-firstbanch/058SSAB_entire_exp_2022-09-01_19h07.29.229.csv\"\n[1] \"../data-firstbanch/059SSAS_entire_exp_2022-08-28_11h50.43.886.csv\"\n[1] \"../data-firstbanch/062SSON_entire_exp_2022-09-03_18h24.04.978.csv\"\n[1] \"../data-firstbanch/063SSMP_entire_exp_2022-08-31_09h41.09.233.csv\"\n[1] \"../data-firstbanch/064SSAB_entire_exp_2022-09-09_24h56.58.121.csv\"\n[1] \"../data-firstbanch/065SSTM_entire_exp_2022-09-08_13h04.21.029.csv\"\n[1] \"../data-firstbanch/066SSKA_entire_exp_2023-04-20_19h55.36.813.csv\"\n[1] \"../data-firstbanch/067SSDA_entire_exp_2022-09-08_15h14.26.648.csv\"\n[1] \"../data-firstbanch/068SSMT_entire_exp_2022-09-08_14h02.24.512.csv\"\n[1] \"../data-firstbanch/069SSMV_entire_exp_2022-09-09_15h05.56.561.csv\"\n[1] \"../data-firstbanch/070SSAK_entire_exp_2022-09-08_15h22.31.854.csv\"\n[1] \"../data-firstbanch/071SSEB_entire_exp_2022-09-13_13h34.34.403.csv\"\n[1] \"../data-firstbanch/073SSMS_entire_exp_2022-09-17_12h41.16.219.csv\"\n[1] \"../data-firstbanch/074SSKS_entire_exp_2022-09-09_08h40.26.331.csv\"\n[1] \"../data-firstbanch/076SSRK_entire_exp_2022-09-10_24h29.10.709.csv\"\n[1] \"../data-firstbanch/077SSKK_entire_exp_2022-09-09_18h47.59.035.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2022-09-18_20h01.24.482.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2023-04-23_12h12.09.879.csv\"\n[1] \"../data-firstbanch/080SSAF_entire_exp_2022-09-09_18h48.13.239.csv\"\n[1] \"../data-firstbanch/083SSAN_entire_exp_2022-09-10_09h01.25.268.csv\"\n[1] \"../data-firstbanch/086SSAI_entire_exp_2022-09-09_19h50.26.340.csv\"\n[1] \"../data-firstbanch/087SSVC_entire_exp_2022-09-17_17h38.47.991.csv\"\n[1] \"../data-firstbanch/088SSDR_entire_exp_2022-09-16_17h28.38.834.csv\"\n[1] \"../data-firstbanch/089SSDM_entire_exp_2023-04-25_14h12.30.529.csv\"\n[1] \"../data-firstbanch/091SSJP_entire_exp_2022-09-14_23h28.30.070.csv\"\n[1] \"../data-firstbanch/092SSAG_entire_exp_2022-09-10_16h20.00.504.csv\"\n[1] \"../data-firstbanch/093SSEG_entire_exp_2022-09-14_17h20.12.899.csv\"\n[1] \"../data-firstbanch/095SSVH_entire_exp_2022-09-15_24h16.25.521.csv\"\n[1] \"../data-firstbanch/096SSMR_entire_exp_2023-05-06_17h41.53.790.csv\"\n[1] \"../data-firstbanch/098SSDM_entire_exp_2023-04-23_16h09.02.953.csv\"\n[1] \"../data-firstbanch/099SSDA_entire_exp_04-20-2023_18h41.33.261.csv\"\n[1] \"../data-firstbanch/100SSNT_entire_exp_2023-04-25_13h53.44.583.csv\"\n[1] \"../data-firstbanch/101SSOK_entire_exp_2023-04-25_15h56.39.280.csv\"\n\n\n\nunique(MR_data$file) |> length()\n\n[1] 78\n\nunique(ST_data$file) |> length()\n\n[1] 78\n\nunique(MS_data$file) |> length()\n\n[1] 78\n\nunique(NASATLX_data$file) |> length()\n\n[1] 78\n\nunique(SEQUENCE_data$file) |> length()\n\n[1] 78\n\n\n\n\n\n\nexptime <- tibble()\n\nfor (j in 1:length(files)) {\n  \n  print(files[j])\n  \n  tibble(file = files[j],\n         start = files[j] |> \n           str_extract(\"\\\\d{4}-\\\\d{2}-\\\\d{2}_\\\\d+h\\\\d+\\\\.\\\\d+\") |> \n           str_replace(\"h\", \":\") |> \n           str_replace(\"\\\\.\", \":\") |> \n           str_replace(\"_\", \" \") |> \n           as_datetime(tz = \"Etc/GMT-3\"),\n         end = file.info(files[j])$mtime |> \n           as_datetime(tz = \"UTC\")\n  ) |> \n    bind_rows(exptime) -> exptime\n  \n}\n\n[1] \"../data-firstbanch/001SSMS_entire_exp_2022-05-31_18h24.17.csv\"\n[1] \"../data-firstbanch/003SSKS_entire_exp_2022-06-16_20h02.35.389.csv\"\n[1] \"../data-firstbanch/004SSDR_entire_exp_2022-06-02_21h35.09.567.csv\"\n[1] \"../data-firstbanch/005SSDR_entire_exp_2022-05-31_20h43.50.910.csv\"\n[1] \"../data-firstbanch/006SSEE_entire_exp_2022-06-02_22h14.18.092.csv\"\n[1] \"../data-firstbanch/007SSJM_entire_exp_2022-06-01_15h12.27.341.csv\"\n[1] \"../data-firstbanch/008SSEP_entire_exp_2022-09-15_21h36.55.631.csv\"\n[1] \"../data-firstbanch/009SSAP_entire_exp_2022-06-04_15h48.30.436.csv\"\n[1] \"../data-firstbanch/010SSEA_entire_exp_2022-06-07_24h08.05.064.csv\"\n[1] \"../data-firstbanch/011SSAB_entire_exp_2022-06-01_14h54.48.csv\"\n[1] \"../data-firstbanch/012EROP_entire_exp_2022-07-14_20h26.20.219.csv\"\n[1] \"../data-firstbanch/013ERVB_entire_exp_2022-06-23_15h53.22.750.csv\"\n[1] \"../data-firstbanch/014ERAI_entire_exp_2022-06-16_13h57.46.683.csv\"\n[1] \"../data-firstbanch/015ERIG_entire_exp_2022-08-17_23h56.01.csv\"\n[1] \"../data-firstbanch/016ERSA_entire_exp_2022-06-16_14h19.07.981.csv\"\n[1] \"../data-firstbanch/017ERVZ_entire_exp_2022-08-20_16h11.35.184.csv\"\n[1] \"../data-firstbanch/019ERSM_entire_exp_2022-06-18_21h43.19.372.csv\"\n[1] \"../data-firstbanch/021SSAZ_entire_exp_2022-07-15_03h19.45.491.csv\"\n[1] \"../data-firstbanch/022ERVS_entire_exp_2022-07-15_21h42.11.588.csv\"\n[1] \"../data-firstbanch/023ERRS_entire_exp_2022-07-11_18h59.41.csv\"\n[1] \"../data-firstbanch/024SSSV_entire_exp_2022-07-24_18h50.18.841.csv\"\n[1] \"../data-firstbanch/025ARAS_entire_exp_2023-05-02_19h18.58.479.csv\"\n[1] \"../data-firstbanch/026SSDM_entire_exp_2022-07-16_12h26.44.968.csv\"\n[1] \"../data-firstbanch/027ARDB_entire_exp_2022-07-18_10h37.13.819.csv\"\n[1] \"../data-firstbanch/029SSDL_entire_exp_2022-07-16_09h09.20.517.csv\"\n[1] \"../data-firstbanch/030SSPM_entire_exp_2022-08-17_21h31.18.058.csv\"\n[1] \"../data-firstbanch/031SSAS_entire_exp_2022-07-16_08h00.03.221.csv\"\n[1] \"../data-firstbanch/032SSAP_entire_exp_2022-07-17_13h28.21.518.csv\"\n[1] \"../data-firstbanch/033SSML_entire_exp_2022-07-26_18h52.18.365.csv\"\n[1] \"../data-firstbanch/035SSDD_entire_exp_2022-08-14_12h43.23.036.csv\"\n[1] \"../data-firstbanch/037ARDL_entire_exp_2022-07-16_22h20.51.764.csv\"\n[1] \"../data-firstbanch/038AREN_entire_exp_2022-07-19_11h25.52.006.csv\"\n[1] \"../data-firstbanch/039ARVP_entire_exp_2022-08-08_15h15.43.173.csv\"\n[1] \"../data-firstbanch/040ARKK_entire_exp_2023-04-23_17h12.22.533.csv\"\n[1] \"../data-firstbanch/042SSAA_entire_exp_2022-08-17_14h03.26.713.csv\"\n[1] \"../data-firstbanch/045SSEM_entire_exp_2022-08-17_14h07.54.819.csv\"\n[1] \"../data-firstbanch/046SSVS_entire_exp_2022-08-20_13h21.07.492.csv\"\n[1] \"../data-firstbanch/047SSAK_entire_exp_2022-08-20_23h14.23.266.csv\"\n[1] \"../data-firstbanch/048SSAG_entire_exp_2022-08-18_20h28.36.828.csv\"\n[1] \"../data-firstbanch/050SSAA_entire_exp_2023-04-21_13h38.45.765.csv\"\n[1] \"../data-firstbanch/052SSME_entire_exp_2022-08-26_10h32.55.991.csv\"\n[1] \"../data-firstbanch/053SSAF_entire_exp_2022-08-25_21h56.58.660.csv\"\n[1] \"../data-firstbanch/054SSEB_entire_exp_2022-08-25_18h20.01.028.csv\"\n[1] \"../data-firstbanch/055SSNS_entire_exp_2022-08-27_10h54.17.951.csv\"\n[1] \"../data-firstbanch/056SSKA_entire_exp_2022-08-26_10h55.02.575.csv\"\n[1] \"../data-firstbanch/058SSAB_entire_exp_2022-09-01_19h07.29.229.csv\"\n[1] \"../data-firstbanch/059SSAS_entire_exp_2022-08-28_11h50.43.886.csv\"\n[1] \"../data-firstbanch/062SSON_entire_exp_2022-09-03_18h24.04.978.csv\"\n[1] \"../data-firstbanch/063SSMP_entire_exp_2022-08-31_09h41.09.233.csv\"\n[1] \"../data-firstbanch/064SSAB_entire_exp_2022-09-09_24h56.58.121.csv\"\n[1] \"../data-firstbanch/065SSTM_entire_exp_2022-09-08_13h04.21.029.csv\"\n[1] \"../data-firstbanch/066SSKA_entire_exp_2023-04-20_19h55.36.813.csv\"\n[1] \"../data-firstbanch/067SSDA_entire_exp_2022-09-08_15h14.26.648.csv\"\n[1] \"../data-firstbanch/068SSMT_entire_exp_2022-09-08_14h02.24.512.csv\"\n[1] \"../data-firstbanch/069SSMV_entire_exp_2022-09-09_15h05.56.561.csv\"\n[1] \"../data-firstbanch/070SSAK_entire_exp_2022-09-08_15h22.31.854.csv\"\n[1] \"../data-firstbanch/071SSEB_entire_exp_2022-09-13_13h34.34.403.csv\"\n[1] \"../data-firstbanch/073SSMS_entire_exp_2022-09-17_12h41.16.219.csv\"\n[1] \"../data-firstbanch/074SSKS_entire_exp_2022-09-09_08h40.26.331.csv\"\n[1] \"../data-firstbanch/076SSRK_entire_exp_2022-09-10_24h29.10.709.csv\"\n[1] \"../data-firstbanch/077SSKK_entire_exp_2022-09-09_18h47.59.035.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2022-09-18_20h01.24.482.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2023-04-23_12h12.09.879.csv\"\n[1] \"../data-firstbanch/080SSAF_entire_exp_2022-09-09_18h48.13.239.csv\"\n[1] \"../data-firstbanch/083SSAN_entire_exp_2022-09-10_09h01.25.268.csv\"\n[1] \"../data-firstbanch/086SSAI_entire_exp_2022-09-09_19h50.26.340.csv\"\n[1] \"../data-firstbanch/087SSVC_entire_exp_2022-09-17_17h38.47.991.csv\"\n[1] \"../data-firstbanch/088SSDR_entire_exp_2022-09-16_17h28.38.834.csv\"\n[1] \"../data-firstbanch/089SSDM_entire_exp_2023-04-25_14h12.30.529.csv\"\n[1] \"../data-firstbanch/091SSJP_entire_exp_2022-09-14_23h28.30.070.csv\"\n[1] \"../data-firstbanch/092SSAG_entire_exp_2022-09-10_16h20.00.504.csv\"\n[1] \"../data-firstbanch/093SSEG_entire_exp_2022-09-14_17h20.12.899.csv\"\n[1] \"../data-firstbanch/095SSVH_entire_exp_2022-09-15_24h16.25.521.csv\"\n[1] \"../data-firstbanch/096SSMR_entire_exp_2023-05-06_17h41.53.790.csv\"\n[1] \"../data-firstbanch/098SSDM_entire_exp_2023-04-23_16h09.02.953.csv\"\n[1] \"../data-firstbanch/099SSDA_entire_exp_04-20-2023_18h41.33.261.csv\"\n[1] \"../data-firstbanch/100SSNT_entire_exp_2023-04-25_13h53.44.583.csv\"\n[1] \"../data-firstbanch/101SSOK_entire_exp_2023-04-25_15h56.39.280.csv\"\n\n\n\nexptime |> \n  mutate(dur = abs(start - end)) -> exptime\n\n\n\n\n\nset.seed(123)\ntibble(\n  file = exptime$file,\n  id = stringi::stri_rand_strings(length(exptime$file), 10)) -> IDS\n\n\nMR_data |> select(-id) |> full_join(IDS, by = \"file\") -> MR_data\nST_data |> select(-id) |> full_join(IDS, by = \"file\") -> ST_data\nMS_data |> select(-id) |> full_join(IDS, by = \"file\") -> MS_data\nNASATLX_data |> select(-id) |> full_join(IDS, by = \"file\") -> NASATLX_data\nSEQUENCE_data |> select(-id) |> full_join(IDS, by = \"file\") -> SEQUENCE_data\nexptime |> full_join(IDS, by = \"file\") -> exptime\n\n\n\n\n\nMR_data |> select(-file) |> write_csv(\"MR_firstbanch_data.csv\")\nST_data |> select(-file) |> write_csv(\"ST_firstbanch_data.csv\")\nMS_data |> select(-file) |> write_csv(\"MS_firstbanch_data.csv\")\nNASATLX_data |> select(-file) |> write_csv(\"NASATLX_firstbanch_data.csv\")\nSEQUENCE_data |> select(-file) |> write_csv(\"SEQ_firstbanch_data.csv\")\nexptime |> select(-file) |> write_csv(\"EXPTIME_firstbanch_data.csv\")\nIDS |> write_csv(\"IDS_firstbanch_data.csv\")"
  },
  {
    "objectID": "preprocess.html#packages",
    "href": "preprocess.html#packages",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "preprocess.html#custom-preprocess-functions",
    "href": "preprocess.html#custom-preprocess-functions",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "mr_preproc &lt;- function(d) {\n\n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      \"id\" = \"Индивидуальный_код\",\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -&gt; MR_easy # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt;  # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -&gt; MR_medium # ready to use\n  \n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -&gt; MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -&gt; MR\n  \n  return(MR)\n  \n}\n\n\nms_preproc &lt;- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count &lt;- function(df) {\n    df |&gt; select(matches(\"^noun\")) |&gt; as.matrix() -&gt; s\n    df |&gt; select(matches(\"^resp\")) |&gt; as.matrix() -&gt; r\n    a &lt;- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] &lt;- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\") |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"id\" = \"Индивидуальный_код\",\n        \"rt\" = \"mouse_MSe.time\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\") |&gt; \n      rename(\"id\" = \"Индивидуальный_код\",\n             \"rt\" = \"mouse_MSm.time\") |&gt;\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\") |&gt;\n      rename(\"id\" = \"Индивидуальный_код\",\n             \"rt\" = \"mouse_MSh.time\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -&gt; MS_hard\n    \n  } else {\n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"id\" = \"Индивидуальный_код\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"MSm.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |&gt;\n      rename(\"id\" = \"Индивидуальный_код\") |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"MSh.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |&gt;\n      rename(\"id\" = \"Индивидуальный_код\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -&gt; MS_hard\n  }\n  \n  tibble(\n    id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |&gt;\n    pivot_longer(cols = -c(\"id\", \"trials\"), values_to = \"value\") |&gt;\n    separate(name, c(\"task\", \"level\", \"name\")) |&gt;\n    pivot_wider(values_from = value, names_from = name) |&gt;\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -&gt; MS\n  \n  return(MS)\n  \n}\n\n\nst_preproc &lt;- function(d) {\n\n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -&gt; ST_easy # ready to use\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -&gt; ST_medium # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -&gt; ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -&gt; ST\n  \n  return(ST)\n\n}\n\n\nnasatlx_preproc &lt;- function(d) {\n  d |&gt; select(\"Индивидуальный_код\",\n              slider.response,\n              head,\n              task_type,\n              task_level) |&gt;\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |&gt;\n    rename(\"id\" = \"Индивидуальный_код\",\n           \"score\" = slider.response) |&gt;\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |&gt;\n    select(id, scale, score, task, level) -&gt; NASATLX\n  \n  return(NASATLX)\n}\n\n\nsequence_preproc &lt;- function(d) {\n  \n  d |&gt; select(\n    E_rotation,\n    M_rotation,\n    H_rotation,\n    E_Sternberg,\n    M_Sternberg,\n    H_Sternberg,\n    E_span,\n    M_span,\n    H_span\n  ) |&gt;\n    drop_na() |&gt;\n    sapply(function(x) which(x == 1)) -&gt; v \n    \n  tibble(name = names(v),\n           order = v,\n           id = d[[\"Индивидуальный_код\"]][1]) |&gt;\n    arrange(order) |&gt;\n    separate(name, c(\"level\", \"task\"), \"_\") |&gt;\n    mutate(\n      task = recode(\n        task,\n        \"rotation\" = \"MR\",\n        \"Sternberg\" = \"ST\",\n        \"span\" = \"MS\"\n      ),\n      level = recode(\n        level,\n        \"E\" = \"easy\",\n        \"M\" = \"medium\",\n        \"H\" = \"hard\"\n      )\n    ) -&gt; SEQUENCE\n  \n  return(SEQUENCE)\n  \n}"
  },
  {
    "objectID": "preprocess.html#load-preprocess-data",
    "href": "preprocess.html#load-preprocess-data",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "files &lt;- paste0(\"../data-firstbanch/\", dir(\"../data-firstbanch\"))\nlength(files)\n\n[1] 78\n\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\nSEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  SEQUENCE_data |&gt; bind_rows(sequence_preproc(d) |&gt; mutate(file = files[i])) -&gt; SEQUENCE_data\n\n}\n\n[1] \"../data-firstbanch/001SSMS_entire_exp_2022-05-31_18h24.17.csv\"\n[1] \"../data-firstbanch/003SSKS_entire_exp_2022-06-16_20h02.35.389.csv\"\n[1] \"../data-firstbanch/004SSDR_entire_exp_2022-06-02_21h35.09.567.csv\"\n[1] \"../data-firstbanch/005SSDR_entire_exp_2022-05-31_20h43.50.910.csv\"\n[1] \"../data-firstbanch/006SSEE_entire_exp_2022-06-02_22h14.18.092.csv\"\n[1] \"../data-firstbanch/007SSJM_entire_exp_2022-06-01_15h12.27.341.csv\"\n[1] \"../data-firstbanch/008SSEP_entire_exp_2022-09-15_21h36.55.631.csv\"\n[1] \"../data-firstbanch/009SSAP_entire_exp_2022-06-04_15h48.30.436.csv\"\n[1] \"../data-firstbanch/010SSEA_entire_exp_2022-06-07_24h08.05.064.csv\"\n[1] \"../data-firstbanch/011SSAB_entire_exp_2022-06-01_14h54.48.csv\"\n[1] \"../data-firstbanch/012EROP_entire_exp_2022-07-14_20h26.20.219.csv\"\n[1] \"../data-firstbanch/013ERVB_entire_exp_2022-06-23_15h53.22.750.csv\"\n[1] \"../data-firstbanch/014ERAI_entire_exp_2022-06-16_13h57.46.683.csv\"\n[1] \"../data-firstbanch/015ERIG_entire_exp_2022-08-17_23h56.01.csv\"\n[1] \"../data-firstbanch/016ERSA_entire_exp_2022-06-16_14h19.07.981.csv\"\n[1] \"../data-firstbanch/017ERVZ_entire_exp_2022-08-20_16h11.35.184.csv\"\n[1] \"../data-firstbanch/019ERSM_entire_exp_2022-06-18_21h43.19.372.csv\"\n[1] \"../data-firstbanch/021SSAZ_entire_exp_2022-07-15_03h19.45.491.csv\"\n[1] \"../data-firstbanch/022ERVS_entire_exp_2022-07-15_21h42.11.588.csv\"\n[1] \"../data-firstbanch/023ERRS_entire_exp_2022-07-11_18h59.41.csv\"\n[1] \"../data-firstbanch/024SSSV_entire_exp_2022-07-24_18h50.18.841.csv\"\n[1] \"../data-firstbanch/025ARAS_entire_exp_2023-05-02_19h18.58.479.csv\"\n[1] \"../data-firstbanch/026SSDM_entire_exp_2022-07-16_12h26.44.968.csv\"\n[1] \"../data-firstbanch/027ARDB_entire_exp_2022-07-18_10h37.13.819.csv\"\n[1] \"../data-firstbanch/029SSDL_entire_exp_2022-07-16_09h09.20.517.csv\"\n[1] \"../data-firstbanch/030SSPM_entire_exp_2022-08-17_21h31.18.058.csv\"\n[1] \"../data-firstbanch/031SSAS_entire_exp_2022-07-16_08h00.03.221.csv\"\n[1] \"../data-firstbanch/032SSAP_entire_exp_2022-07-17_13h28.21.518.csv\"\n[1] \"../data-firstbanch/033SSML_entire_exp_2022-07-26_18h52.18.365.csv\"\n[1] \"../data-firstbanch/035SSDD_entire_exp_2022-08-14_12h43.23.036.csv\"\n[1] \"../data-firstbanch/037ARDL_entire_exp_2022-07-16_22h20.51.764.csv\"\n[1] \"../data-firstbanch/038AREN_entire_exp_2022-07-19_11h25.52.006.csv\"\n[1] \"../data-firstbanch/039ARVP_entire_exp_2022-08-08_15h15.43.173.csv\"\n[1] \"../data-firstbanch/040ARKK_entire_exp_2023-04-23_17h12.22.533.csv\"\n[1] \"../data-firstbanch/042SSAA_entire_exp_2022-08-17_14h03.26.713.csv\"\n[1] \"../data-firstbanch/045SSEM_entire_exp_2022-08-17_14h07.54.819.csv\"\n[1] \"../data-firstbanch/046SSVS_entire_exp_2022-08-20_13h21.07.492.csv\"\n[1] \"../data-firstbanch/047SSAK_entire_exp_2022-08-20_23h14.23.266.csv\"\n[1] \"../data-firstbanch/048SSAG_entire_exp_2022-08-18_20h28.36.828.csv\"\n[1] \"../data-firstbanch/050SSAA_entire_exp_2023-04-21_13h38.45.765.csv\"\n[1] \"../data-firstbanch/052SSME_entire_exp_2022-08-26_10h32.55.991.csv\"\n[1] \"../data-firstbanch/053SSAF_entire_exp_2022-08-25_21h56.58.660.csv\"\n[1] \"../data-firstbanch/054SSEB_entire_exp_2022-08-25_18h20.01.028.csv\"\n[1] \"../data-firstbanch/055SSNS_entire_exp_2022-08-27_10h54.17.951.csv\"\n[1] \"../data-firstbanch/056SSKA_entire_exp_2022-08-26_10h55.02.575.csv\"\n[1] \"../data-firstbanch/058SSAB_entire_exp_2022-09-01_19h07.29.229.csv\"\n[1] \"../data-firstbanch/059SSAS_entire_exp_2022-08-28_11h50.43.886.csv\"\n[1] \"../data-firstbanch/062SSON_entire_exp_2022-09-03_18h24.04.978.csv\"\n[1] \"../data-firstbanch/063SSMP_entire_exp_2022-08-31_09h41.09.233.csv\"\n[1] \"../data-firstbanch/064SSAB_entire_exp_2022-09-09_24h56.58.121.csv\"\n[1] \"../data-firstbanch/065SSTM_entire_exp_2022-09-08_13h04.21.029.csv\"\n[1] \"../data-firstbanch/066SSKA_entire_exp_2023-04-20_19h55.36.813.csv\"\n[1] \"../data-firstbanch/067SSDA_entire_exp_2022-09-08_15h14.26.648.csv\"\n[1] \"../data-firstbanch/068SSMT_entire_exp_2022-09-08_14h02.24.512.csv\"\n[1] \"../data-firstbanch/069SSMV_entire_exp_2022-09-09_15h05.56.561.csv\"\n[1] \"../data-firstbanch/070SSAK_entire_exp_2022-09-08_15h22.31.854.csv\"\n[1] \"../data-firstbanch/071SSEB_entire_exp_2022-09-13_13h34.34.403.csv\"\n[1] \"../data-firstbanch/073SSMS_entire_exp_2022-09-17_12h41.16.219.csv\"\n[1] \"../data-firstbanch/074SSKS_entire_exp_2022-09-09_08h40.26.331.csv\"\n[1] \"../data-firstbanch/076SSRK_entire_exp_2022-09-10_24h29.10.709.csv\"\n[1] \"../data-firstbanch/077SSKK_entire_exp_2022-09-09_18h47.59.035.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2022-09-18_20h01.24.482.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2023-04-23_12h12.09.879.csv\"\n[1] \"../data-firstbanch/080SSAF_entire_exp_2022-09-09_18h48.13.239.csv\"\n[1] \"../data-firstbanch/083SSAN_entire_exp_2022-09-10_09h01.25.268.csv\"\n[1] \"../data-firstbanch/086SSAI_entire_exp_2022-09-09_19h50.26.340.csv\"\n[1] \"../data-firstbanch/087SSVC_entire_exp_2022-09-17_17h38.47.991.csv\"\n[1] \"../data-firstbanch/088SSDR_entire_exp_2022-09-16_17h28.38.834.csv\"\n[1] \"../data-firstbanch/089SSDM_entire_exp_2023-04-25_14h12.30.529.csv\"\n[1] \"../data-firstbanch/091SSJP_entire_exp_2022-09-14_23h28.30.070.csv\"\n[1] \"../data-firstbanch/092SSAG_entire_exp_2022-09-10_16h20.00.504.csv\"\n[1] \"../data-firstbanch/093SSEG_entire_exp_2022-09-14_17h20.12.899.csv\"\n[1] \"../data-firstbanch/095SSVH_entire_exp_2022-09-15_24h16.25.521.csv\"\n[1] \"../data-firstbanch/096SSMR_entire_exp_2023-05-06_17h41.53.790.csv\"\n[1] \"../data-firstbanch/098SSDM_entire_exp_2023-04-23_16h09.02.953.csv\"\n[1] \"../data-firstbanch/099SSDA_entire_exp_04-20-2023_18h41.33.261.csv\"\n[1] \"../data-firstbanch/100SSNT_entire_exp_2023-04-25_13h53.44.583.csv\"\n[1] \"../data-firstbanch/101SSOK_entire_exp_2023-04-25_15h56.39.280.csv\"\n\n\n\nunique(MR_data$file) |&gt; length()\n\n[1] 78\n\nunique(ST_data$file) |&gt; length()\n\n[1] 78\n\nunique(MS_data$file) |&gt; length()\n\n[1] 78\n\nunique(NASATLX_data$file) |&gt; length()\n\n[1] 78\n\nunique(SEQUENCE_data$file) |&gt; length()\n\n[1] 78"
  },
  {
    "objectID": "preprocess.html#overall-experiment-time",
    "href": "preprocess.html#overall-experiment-time",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "exptime &lt;- tibble()\n\nfor (j in 1:length(files)) {\n  \n  print(files[j])\n  \n  tibble(file = files[j],\n         start = files[j] |&gt; \n           str_extract(\"\\\\d{4}-\\\\d{2}-\\\\d{2}_\\\\d+h\\\\d+\\\\.\\\\d+\") |&gt; \n           str_replace(\"h\", \":\") |&gt; \n           str_replace(\"\\\\.\", \":\") |&gt; \n           str_replace(\"_\", \" \") |&gt; \n           as_datetime(tz = \"Etc/GMT-3\"),\n         end = file.info(files[j])$mtime |&gt; \n           as_datetime(tz = \"UTC\")\n  ) |&gt; \n    bind_rows(exptime) -&gt; exptime\n  \n}\n\n[1] \"../data-firstbanch/001SSMS_entire_exp_2022-05-31_18h24.17.csv\"\n[1] \"../data-firstbanch/003SSKS_entire_exp_2022-06-16_20h02.35.389.csv\"\n[1] \"../data-firstbanch/004SSDR_entire_exp_2022-06-02_21h35.09.567.csv\"\n[1] \"../data-firstbanch/005SSDR_entire_exp_2022-05-31_20h43.50.910.csv\"\n[1] \"../data-firstbanch/006SSEE_entire_exp_2022-06-02_22h14.18.092.csv\"\n[1] \"../data-firstbanch/007SSJM_entire_exp_2022-06-01_15h12.27.341.csv\"\n[1] \"../data-firstbanch/008SSEP_entire_exp_2022-09-15_21h36.55.631.csv\"\n[1] \"../data-firstbanch/009SSAP_entire_exp_2022-06-04_15h48.30.436.csv\"\n[1] \"../data-firstbanch/010SSEA_entire_exp_2022-06-07_24h08.05.064.csv\"\n[1] \"../data-firstbanch/011SSAB_entire_exp_2022-06-01_14h54.48.csv\"\n[1] \"../data-firstbanch/012EROP_entire_exp_2022-07-14_20h26.20.219.csv\"\n[1] \"../data-firstbanch/013ERVB_entire_exp_2022-06-23_15h53.22.750.csv\"\n[1] \"../data-firstbanch/014ERAI_entire_exp_2022-06-16_13h57.46.683.csv\"\n[1] \"../data-firstbanch/015ERIG_entire_exp_2022-08-17_23h56.01.csv\"\n[1] \"../data-firstbanch/016ERSA_entire_exp_2022-06-16_14h19.07.981.csv\"\n[1] \"../data-firstbanch/017ERVZ_entire_exp_2022-08-20_16h11.35.184.csv\"\n[1] \"../data-firstbanch/019ERSM_entire_exp_2022-06-18_21h43.19.372.csv\"\n[1] \"../data-firstbanch/021SSAZ_entire_exp_2022-07-15_03h19.45.491.csv\"\n[1] \"../data-firstbanch/022ERVS_entire_exp_2022-07-15_21h42.11.588.csv\"\n[1] \"../data-firstbanch/023ERRS_entire_exp_2022-07-11_18h59.41.csv\"\n[1] \"../data-firstbanch/024SSSV_entire_exp_2022-07-24_18h50.18.841.csv\"\n[1] \"../data-firstbanch/025ARAS_entire_exp_2023-05-02_19h18.58.479.csv\"\n[1] \"../data-firstbanch/026SSDM_entire_exp_2022-07-16_12h26.44.968.csv\"\n[1] \"../data-firstbanch/027ARDB_entire_exp_2022-07-18_10h37.13.819.csv\"\n[1] \"../data-firstbanch/029SSDL_entire_exp_2022-07-16_09h09.20.517.csv\"\n[1] \"../data-firstbanch/030SSPM_entire_exp_2022-08-17_21h31.18.058.csv\"\n[1] \"../data-firstbanch/031SSAS_entire_exp_2022-07-16_08h00.03.221.csv\"\n[1] \"../data-firstbanch/032SSAP_entire_exp_2022-07-17_13h28.21.518.csv\"\n[1] \"../data-firstbanch/033SSML_entire_exp_2022-07-26_18h52.18.365.csv\"\n[1] \"../data-firstbanch/035SSDD_entire_exp_2022-08-14_12h43.23.036.csv\"\n[1] \"../data-firstbanch/037ARDL_entire_exp_2022-07-16_22h20.51.764.csv\"\n[1] \"../data-firstbanch/038AREN_entire_exp_2022-07-19_11h25.52.006.csv\"\n[1] \"../data-firstbanch/039ARVP_entire_exp_2022-08-08_15h15.43.173.csv\"\n[1] \"../data-firstbanch/040ARKK_entire_exp_2023-04-23_17h12.22.533.csv\"\n[1] \"../data-firstbanch/042SSAA_entire_exp_2022-08-17_14h03.26.713.csv\"\n[1] \"../data-firstbanch/045SSEM_entire_exp_2022-08-17_14h07.54.819.csv\"\n[1] \"../data-firstbanch/046SSVS_entire_exp_2022-08-20_13h21.07.492.csv\"\n[1] \"../data-firstbanch/047SSAK_entire_exp_2022-08-20_23h14.23.266.csv\"\n[1] \"../data-firstbanch/048SSAG_entire_exp_2022-08-18_20h28.36.828.csv\"\n[1] \"../data-firstbanch/050SSAA_entire_exp_2023-04-21_13h38.45.765.csv\"\n[1] \"../data-firstbanch/052SSME_entire_exp_2022-08-26_10h32.55.991.csv\"\n[1] \"../data-firstbanch/053SSAF_entire_exp_2022-08-25_21h56.58.660.csv\"\n[1] \"../data-firstbanch/054SSEB_entire_exp_2022-08-25_18h20.01.028.csv\"\n[1] \"../data-firstbanch/055SSNS_entire_exp_2022-08-27_10h54.17.951.csv\"\n[1] \"../data-firstbanch/056SSKA_entire_exp_2022-08-26_10h55.02.575.csv\"\n[1] \"../data-firstbanch/058SSAB_entire_exp_2022-09-01_19h07.29.229.csv\"\n[1] \"../data-firstbanch/059SSAS_entire_exp_2022-08-28_11h50.43.886.csv\"\n[1] \"../data-firstbanch/062SSON_entire_exp_2022-09-03_18h24.04.978.csv\"\n[1] \"../data-firstbanch/063SSMP_entire_exp_2022-08-31_09h41.09.233.csv\"\n[1] \"../data-firstbanch/064SSAB_entire_exp_2022-09-09_24h56.58.121.csv\"\n[1] \"../data-firstbanch/065SSTM_entire_exp_2022-09-08_13h04.21.029.csv\"\n[1] \"../data-firstbanch/066SSKA_entire_exp_2023-04-20_19h55.36.813.csv\"\n[1] \"../data-firstbanch/067SSDA_entire_exp_2022-09-08_15h14.26.648.csv\"\n[1] \"../data-firstbanch/068SSMT_entire_exp_2022-09-08_14h02.24.512.csv\"\n[1] \"../data-firstbanch/069SSMV_entire_exp_2022-09-09_15h05.56.561.csv\"\n[1] \"../data-firstbanch/070SSAK_entire_exp_2022-09-08_15h22.31.854.csv\"\n[1] \"../data-firstbanch/071SSEB_entire_exp_2022-09-13_13h34.34.403.csv\"\n[1] \"../data-firstbanch/073SSMS_entire_exp_2022-09-17_12h41.16.219.csv\"\n[1] \"../data-firstbanch/074SSKS_entire_exp_2022-09-09_08h40.26.331.csv\"\n[1] \"../data-firstbanch/076SSRK_entire_exp_2022-09-10_24h29.10.709.csv\"\n[1] \"../data-firstbanch/077SSKK_entire_exp_2022-09-09_18h47.59.035.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2022-09-18_20h01.24.482.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2023-04-23_12h12.09.879.csv\"\n[1] \"../data-firstbanch/080SSAF_entire_exp_2022-09-09_18h48.13.239.csv\"\n[1] \"../data-firstbanch/083SSAN_entire_exp_2022-09-10_09h01.25.268.csv\"\n[1] \"../data-firstbanch/086SSAI_entire_exp_2022-09-09_19h50.26.340.csv\"\n[1] \"../data-firstbanch/087SSVC_entire_exp_2022-09-17_17h38.47.991.csv\"\n[1] \"../data-firstbanch/088SSDR_entire_exp_2022-09-16_17h28.38.834.csv\"\n[1] \"../data-firstbanch/089SSDM_entire_exp_2023-04-25_14h12.30.529.csv\"\n[1] \"../data-firstbanch/091SSJP_entire_exp_2022-09-14_23h28.30.070.csv\"\n[1] \"../data-firstbanch/092SSAG_entire_exp_2022-09-10_16h20.00.504.csv\"\n[1] \"../data-firstbanch/093SSEG_entire_exp_2022-09-14_17h20.12.899.csv\"\n[1] \"../data-firstbanch/095SSVH_entire_exp_2022-09-15_24h16.25.521.csv\"\n[1] \"../data-firstbanch/096SSMR_entire_exp_2023-05-06_17h41.53.790.csv\"\n[1] \"../data-firstbanch/098SSDM_entire_exp_2023-04-23_16h09.02.953.csv\"\n[1] \"../data-firstbanch/099SSDA_entire_exp_04-20-2023_18h41.33.261.csv\"\n[1] \"../data-firstbanch/100SSNT_entire_exp_2023-04-25_13h53.44.583.csv\"\n[1] \"../data-firstbanch/101SSOK_entire_exp_2023-04-25_15h56.39.280.csv\"\n\n\n\nexptime |&gt; \n  mutate(dur = abs(start - end)) -&gt; exptime"
  },
  {
    "objectID": "preprocess.html#create-and-add-ids",
    "href": "preprocess.html#create-and-add-ids",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "set.seed(123)\ntibble(\n  file = exptime$file,\n  id = stringi::stri_rand_strings(length(exptime$file), 10)) -&gt; IDS\n\n\nMR_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; MR_data\nST_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; ST_data\nMS_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; MS_data\nNASATLX_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; NASATLX_data\nSEQUENCE_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; SEQUENCE_data\nexptime |&gt; full_join(IDS, by = \"file\") -&gt; exptime"
  },
  {
    "objectID": "preprocess.html#save-preprocessed-data",
    "href": "preprocess.html#save-preprocessed-data",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "MR_data |&gt; select(-file) |&gt; write_csv(\"MR_firstbanch_data.csv\")\nST_data |&gt; select(-file) |&gt; write_csv(\"ST_firstbanch_data.csv\")\nMS_data |&gt; select(-file) |&gt; write_csv(\"MS_firstbanch_data.csv\")\nNASATLX_data |&gt; select(-file) |&gt; write_csv(\"NASATLX_firstbanch_data.csv\")\nSEQUENCE_data |&gt; select(-file) |&gt; write_csv(\"SEQ_firstbanch_data.csv\")\nexptime |&gt; select(-file) |&gt; write_csv(\"EXPTIME_firstbanch_data.csv\")\nIDS |&gt; write_csv(\"IDS_firstbanch_data.csv\")"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "NASA-TLX",
    "section": "",
    "text": "knitr::opts_chunk$set(error = TRUE)\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\ntheme_set(theme_bw()) # set black and white theme\nlibrary(lavaan)\n\nThis is lavaan 0.6-15\nlavaan is FREE software! Please report any bugs.\n\nlibrary(tidySEM)\n\nLoading required package: OpenMx\nOpenMx may run faster if it is compiled to take advantage of multiple cores.\nRegistered S3 method overwritten by 'tidySEM':\n  method          from  \n  predict.MxModel OpenMx\n\nlibrary(semPower)\n\n\n### Welcome to semPower 1.2.0 ###\n\nSee https://github.com/moshagen/semPower for quick examples and a detailed manual.\n\nPlease cite as:\nMoshagen, M., & Erdfelder, E. (2016). A new strategy for testing structural equation models.\nStructural Equation Modeling, 23, 54-60. doi: 10.1080/10705511.2014.950896\n\nlibrary(lme4)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:OpenMx':\n\n    %&%, expm\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(lmerTest)\n\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(MuMIn)\n\nError in library(MuMIn): there is no package called 'MuMIn'\n\nlibrary(pwr)\n\nError in library(pwr): there is no package called 'pwr'\n\n\n\nrm(list = ls())\n\n\n\n\n\nMR_data <- read_csv(\"MR_firstbanch_data.csv\")\n\nRows: 3744 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): correctAns, base_pic, rotated_pic, key, task, level, id\ndbl (3): is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nST_data <- read_csv(\"ST_firstbanch_data.csv\")\n\nRows: 3744 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): key, task, level, id\ndbl (4): target_present, is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nMS_data <- read_csv(\"MS_firstbanch_data.csv\")\n\nRows: 3744 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (4): trials, n, rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nNASATLX_data <- read_csv(\"NASATLX_firstbanch_data.csv\")\n\nRows: 4212 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nSEQUENCE_data <- read_csv(\"SEQ_firstbanch_data.csv\")\n\nRows: 702 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): level, task, id\ndbl (1): order\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nEXPTIME <- read_csv(\"EXPTIME_firstbanch_data.csv\")\n\nRows: 78 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): id\ndbl  (1): dur\ndttm (2): start, end\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nEXPTIME |> ggplot(aes(dur)) +\n  geom_density()\n\nWarning: Removed 1 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\nEXPTIME |> \n  filter(dur < 250) |> \n  ggplot(aes(dur)) +\n  # geom_density() +\n  geom_histogram() +\n  geom_vline(xintercept = 70) +\n  geom_vline(xintercept = 75) +\n  geom_vline(xintercept = 100)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nEXPTIME |> \n  filter(dur < 250) |> \n  ggplot(aes(dur)) +\n  geom_boxplot() \n\n\n\n  #geom_vline(xintercept = 93, linetype = \"dashed\")\n\n\nEXPTIME$dur |> min(na.rm = TRUE)\n\n[1] 77.99356\n\nquantile(EXPTIME$dur[EXPTIME$dur<250], .75, na.rm = TRUE) + 1.5 * IQR(EXPTIME$dur[EXPTIME$dur<250], na.rm = TRUE)\n\n     75% \n94.32646 \n\n\n\n\n\n\n\n\nMR_data |> \n  group_by(id, level, task) |> \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -> MR_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMR_data_agg |> write_csv(\"MR_firstbanch_data_agg.csv\")\n\n\nMR_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   MR       78  7.11  4.56  1.43  25.5     6.10     8.12\n2 hard   MR       78 12.0  10.3   1.60  69.1     9.67    14.2 \n3 medium MR       78  8.79  5.88  1.10  37.1     7.49    10.1 \n\n\n\nMR_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   MR       78 0.850 0.174 0.312     1    0.812    0.889\n2 hard   MR       78 0.721 0.178 0.312     1    0.682    0.761\n3 medium MR       78 0.755 0.178 0.25      1    0.715    0.794\n\n\n\nMR_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\n\n\n\nMS_data |> \n  group_by(id, level, task) |> \n  summarise(rt = mean(rt),\n            acc = mean(acc)) -> MS_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMS_data_agg |> write_csv(\"MS_firstbanch_data_agg.csv\")\n\n\nMS_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(rt, na.rm = TRUE),\n            sd = sd(rt, na.rm = TRUE),\n            min = min(rt, na.rm = TRUE),\n            max = max(rt, na.rm = TRUE),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   MS       78  11.7  5.72  5.47  46.8     10.4     13.0\n2 hard   MS       78  22.7 11.8  11.2   91.0     20.1     25.4\n3 medium MS       78  19.1  5.79 10.1   39.9     17.8     20.4\n\n\n\nMS_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   MS       78 0.949 0.165     0 1        0.913    0.986\n2 hard   MS       78 0.635 0.168     0 0.973    0.597    0.672\n3 medium MS       78 0.878 0.172     0 1        0.839    0.916\n\n\n\nMS_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\n\n\n\n\n\n\n\nST_data |> \n  group_by(id, level, task) |> \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -> ST_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nST_data_agg |> write_csv(\"ST_firstbanch_data_agg.csv\")\n\n\nST_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   ST       78  1.12 0.325 0.627  2.47     1.05     1.19\n2 hard   ST       78  1.44 0.441 0.737  3.52     1.34     1.54\n3 medium ST       78  1.39 0.470 0.692  3.45     1.28     1.49\n\n\n\nST_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean     sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl>  <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   ST       78 0.979 0.0358 0.875 1        0.971    0.987\n2 hard   ST       78 0.686 0.127  0.312 0.875    0.658    0.714\n3 medium ST       78 0.836 0.114  0.562 1        0.811    0.861\n\n\n\nST_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nMR_data_agg |> \n  bind_rows(MS_data_agg, ST_data_agg) |>\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, rt)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Reaction Time\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMR_data_agg |> \n  bind_rows(MS_data_agg, ST_data_agg) |>\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, acc)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Accuracy\")\n\n\n\n\n\n\n\n\n\nNASATLX_data |> \n  # fix factor\n  mutate(\n    level = factor(\n      level,\n      levels = c(\"easy\", \"medium\", \"hard\"),\n      ordered = TRUE\n    ),\n    # modify vars to match with previously created encoding\n    scl = str_to_lower(scale),\n    tsk = str_to_lower(task),\n    lvl = str_sub(level, start = 1, end = 1) |> str_to_upper(),\n    score = score * 5\n  ) |>\n  # create a new var for CFA\n  unite(item, scl, tsk, lvl) -> NASATLX_data\n\n\nlevel_colors <- c(\"#4bd752\", \"#d7984b\", \"#d7524b\")\ntask_colors <- c(\"red4\", \"green4\", \"blue4\")\nback_histogram_color <- \"gray60\"\n\n\nNASATLX_data |>\n  ggplot(aes(scale, score, fill = level)) +\n  geom_boxplot() +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_fill_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\npd <- position_dodge(0.3)\nNASATLX_data |>\n  ggplot(aes(scale, score, color = level)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\",\n               position = pd, width = .3) +\n  stat_summary(fun = mean, geom = \"point\",\n               position = pd) +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_color_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`).\nRemoved 17 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\n\n\nNASATLX_data |> \n  select(-item) |> \n  # mutate(row_nubmer = row_number()) |> \n  pivot_wider(values_from = score, names_from = scale) -> nasa_tlx_wide\n# NASA_TLX |> group_by(task, level) |> summarise(n=n())\n# nasa_tlx_wide |> group_by(task, level) |> summarise(n=n())\n\n\nr2tof2 <- function(r2) r2 / (1 - r2)\n\n\n\n\nmix_ME <- lmer(ME ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ME)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: ME ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6090.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1846 -0.5810  0.0514  0.6403  3.1496 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 172.8    13.14   \n Residual             300.2    17.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          46.445      2.463 335.008  18.861  < 2e-16 ***\ntaskMS              -16.813      2.774 615.020  -6.060 2.37e-09 ***\ntaskST              -18.655      2.774 615.020  -6.724 4.05e-11 ***\nlevelmedium          10.951      2.774 615.020   3.947 8.82e-05 ***\nlevelhard            19.777      2.774 615.020   7.128 2.86e-12 ***\ntaskMS:levelmedium   20.000      3.924 615.020   5.097 4.59e-07 ***\ntaskST:levelmedium   14.677      3.924 615.020   3.741 0.000201 ***\ntaskMS:levelhard     27.488      3.924 615.020   7.006 6.47e-12 ***\ntaskST:levelhard     20.282      3.931 615.107   5.160 3.34e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.563                                                             \ntaskST      -0.563  0.500                                                      \nlevelmedium -0.563  0.500  0.500                                               \nlevelhard   -0.563  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.398 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.398 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.398 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.398 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_ME)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask         6703    3352     2 615.06  11.165 1.727e-05 ***\nlevel      152214   76107     2 615.06 253.516 < 2.2e-16 ***\ntask:level  16928    4232     4 615.06  14.097 5.168e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ME)[1]\n\nError in r.squaredGLMM(mix_ME): could not find function \"r.squaredGLMM\"\n\nr2tof2(r.squaredGLMM(mix_ME)[1])\n\nError in r.squaredGLMM(mix_ME): could not find function \"r.squaredGLMM\"\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_ME)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\nError in pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_ME)[1]), u = 7, sig.level = 0.05, : could not find function \"pwr.f2.test\"\n\n\n\n\n\n\nmix_PH <- lmer(PH ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PH)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PH ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 5661\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.5884 -0.5011 -0.0854  0.4111  5.0325 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 434.9    20.85   \n Residual             148.2    12.17   \nNumber of obs: 694, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)         17.0474     2.7392 127.9525   6.224 6.41e-09 ***\ntaskMS              -3.0090     1.9782 608.2281  -1.521  0.12875    \ntaskST              -5.6698     1.9562 608.0818  -2.898  0.00389 ** \nlevelmedium          0.8142     1.9562 608.0818   0.416  0.67740    \nlevelhard            5.5848     1.9562 608.0818   2.855  0.00445 ** \ntaskMS:levelmedium   8.9361     2.7821 608.1575   3.212  0.00139 ** \ntaskST:levelmedium   8.8358     2.7666 608.0868   3.194  0.00148 ** \ntaskMS:levelhard     7.8940     2.7860 608.1309   2.833  0.00476 ** \ntaskST:levelhard     7.7832     2.7615 608.0620   2.818  0.00498 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.356                                                             \ntaskST      -0.360  0.498                                                      \nlevelmedium -0.360  0.498  0.504                                               \nlevelhard   -0.360  0.498  0.504  0.504                                        \ntskMS:lvlmd  0.253 -0.711 -0.354 -0.703 -0.354                                 \ntskST:lvlmd  0.254 -0.352 -0.707 -0.707 -0.356  0.497                          \ntskMS:lvlhr  0.253 -0.709 -0.354 -0.354 -0.702  0.504      0.250               \ntskST:lvlhr  0.255 -0.353 -0.708 -0.357 -0.708  0.251      0.501      0.497    \n\nanova(mix_PH)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask        1087.1   543.6     2 608.13  3.6685  0.026080 *  \nlevel      13744.9  6872.5     2 608.10 46.3819 < 2.2e-16 ***\ntask:level  2422.0   605.5     4 608.12  4.0865  0.002816 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PH)[1]\n\nError in r.squaredGLMM(mix_PH): could not find function \"r.squaredGLMM\"\n\nr2tof2(r.squaredGLMM(mix_PH)[1])\n\nError in r.squaredGLMM(mix_PH): could not find function \"r.squaredGLMM\"\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PH)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\nError in pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PH)[1]), u = 7, sig.level = 0.05, : could not find function \"pwr.f2.test\"\n\n\n\n\n\n\nmix_TI <- lmer(TI ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_TI)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: TI ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6223.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0957 -0.5892 -0.0314  0.6288  2.8906 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 160.6    12.67   \n Residual             373.7    19.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)         15.5984     2.6173 401.8373   5.960 5.53e-09 ***\ntaskMS               3.5592     3.0955 614.9845   1.150 0.250661    \ntaskST              11.3673     3.0955 614.9845   3.672 0.000261 ***\nlevelmedium          0.7836     3.0955 614.9845   0.253 0.800248    \nlevelhard            4.1863     3.0955 614.9845   1.352 0.176739    \ntaskMS:levelmedium  32.1104     4.3776 614.9845   7.335 7.02e-13 ***\ntaskST:levelmedium  33.6197     4.3854 615.0938   7.666 6.94e-14 ***\ntaskMS:levelhard    51.4924     4.3776 614.9845  11.763  < 2e-16 ***\ntaskST:levelhard    50.8953     4.3776 614.9845  11.626  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.591                                                             \ntaskST      -0.591  0.500                                                      \nlevelmedium -0.591  0.500  0.500                                               \nlevelhard   -0.591  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.418 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.417 -0.353 -0.706 -0.706 -0.353  0.499                          \ntskMS:lvlhr  0.418 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.418 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_TI)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask       203830  101915     2 615.03 272.724 < 2.2e-16 ***\nlevel      173710   86855     2 615.03 232.424 < 2.2e-16 ***\ntask:level  70059   17515     4 615.03  46.869 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_TI)[1]\n\nError in r.squaredGLMM(mix_TI): could not find function \"r.squaredGLMM\"\n\nr2tof2(r.squaredGLMM(mix_TI)[1])\n\nError in r.squaredGLMM(mix_TI): could not find function \"r.squaredGLMM\"\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_TI)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\nError in pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_TI)[1]), u = 7, sig.level = 0.05, : could not find function \"pwr.f2.test\"\n\n\n\n\n\n\nmix_PE <- lmer(PE ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PE)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PE ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6076.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3961 -0.6412  0.0325  0.6477  2.5583 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 113.9    10.67   \n Residual             306.0    17.49   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          66.615      2.320 435.796  28.711  < 2e-16 ***\ntaskMS               25.479      2.801 615.017   9.096  < 2e-16 ***\ntaskST               23.503      2.801 615.017   8.391 3.31e-16 ***\nlevelmedium          -8.781      2.801 615.017  -3.135   0.0018 ** \nlevelhard           -16.480      2.801 615.017  -5.884 6.60e-09 ***\ntaskMS:levelmedium  -17.419      3.961 615.017  -4.397 1.29e-05 ***\ntaskST:levelmedium  -28.291      3.961 615.017  -7.142 2.61e-12 ***\ntaskMS:levelhard    -39.938      3.961 615.017 -10.082  < 2e-16 ***\ntaskST:levelhard    -44.857      3.968 615.138 -11.304  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.604                                                             \ntaskST      -0.604  0.500                                                      \nlevelmedium -0.604  0.500  0.500                                               \nlevelhard   -0.604  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.427 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.427 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.427 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.426 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_PE)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask         7295    3647     2 615.07  11.921  8.33e-06 ***\nlevel      234141  117070     2 615.07 382.616 < 2.2e-16 ***\ntask:level  49094   12273     4 615.07  40.113 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PE)[1]\n\nError in r.squaredGLMM(mix_PE): could not find function \"r.squaredGLMM\"\n\nr2tof2(r.squaredGLMM(mix_PE)[1])\n\nError in r.squaredGLMM(mix_PE): could not find function \"r.squaredGLMM\"\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PE)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\nError in pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PE)[1]), u = 7, sig.level = 0.05, : could not find function \"pwr.f2.test\"\n\n\n\n\n\n\nmix_EF <- lmer(EF ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_EF)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: EF ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6055.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1279 -0.6094  0.0357  0.6249  3.5591 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 249.8    15.81   \n Residual             276.8    16.64   \nNumber of obs: 700, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          44.381      2.598 247.283  17.080  < 2e-16 ***\ntaskMS              -12.862      2.664 614.020  -4.828 1.74e-06 ***\ntaskST              -11.609      2.664 614.020  -4.358 1.54e-05 ***\nlevelmedium           9.006      2.664 614.020   3.381 0.000769 ***\nlevelhard            17.584      2.664 614.020   6.601 8.86e-11 ***\ntaskMS:levelmedium   17.979      3.774 614.080   4.764 2.38e-06 ***\ntaskST:levelmedium   13.621      3.774 614.080   3.609 0.000333 ***\ntaskMS:levelhard     25.250      3.767 614.020   6.702 4.65e-11 ***\ntaskST:levelhard     14.255      3.767 614.020   3.784 0.000170 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.513                                                             \ntaskST      -0.513  0.500                                                      \nlevelmedium -0.513  0.500  0.500                                               \nlevelhard   -0.513  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.362 -0.706 -0.353 -0.706 -0.353                                 \ntskST:lvlmd  0.362 -0.353 -0.706 -0.706 -0.353  0.498                          \ntskMS:lvlhr  0.362 -0.707 -0.354 -0.354 -0.707  0.499      0.250               \ntskST:lvlhr  0.362 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_EF)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(>F)    \ntask         1763     881     2 614.07   3.1842    0.0421 *  \nlevel      113335   56667     2 614.07 204.7413 < 2.2e-16 ***\ntask:level  13748    3437     4 614.07  12.4179 1.018e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_EF)[1]\n\nError in r.squaredGLMM(mix_EF): could not find function \"r.squaredGLMM\"\n\nr2tof2(r.squaredGLMM(mix_EF)[1])\n\nError in r.squaredGLMM(mix_EF): could not find function \"r.squaredGLMM\"\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_EF)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\nError in pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_EF)[1]), u = 7, sig.level = 0.05, : could not find function \"pwr.f2.test\"\n\n\n\n\n\n\nmix_FR <- lmer(FR ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_FR)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: FR ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6292.3\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.92494 -0.67440 -0.04275  0.63993  2.97611 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 343.0    18.52   \n Residual             402.2    20.05   \nNumber of obs: 698, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          35.058      3.091 256.301  11.342  < 2e-16 ***\ntaskMS              -11.619      3.235 612.136  -3.592 0.000355 ***\ntaskST              -13.828      3.211 611.853  -4.306 1.94e-05 ***\nlevelmedium           6.322      3.211 611.853   1.969 0.049432 *  \nlevelhard            12.950      3.223 611.978   4.018 6.59e-05 ***\ntaskMS:levelmedium   13.354      4.558 611.995   2.930 0.003518 ** \ntaskST:levelmedium   20.118      4.541 611.853   4.430 1.12e-05 ***\ntaskMS:levelhard     23.420      4.566 612.053   5.129 3.92e-07 ***\ntaskST:levelhard     30.659      4.558 611.996   6.727 4.00e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.516                                                             \ntaskST      -0.519  0.496                                                      \nlevelmedium -0.519  0.496  0.500                                               \nlevelhard   -0.518  0.495  0.498  0.498                                        \ntskMS:lvlmd  0.366 -0.710 -0.352 -0.705 -0.351                                 \ntskST:lvlmd  0.367 -0.351 -0.707 -0.707 -0.352  0.498                          \ntskMS:lvlhr  0.365 -0.708 -0.352 -0.352 -0.706  0.503      0.249               \ntskST:lvlhr  0.366 -0.349 -0.705 -0.352 -0.707  0.248      0.498      0.499    \n\nanova(mix_FR)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(>F)    \ntask         1246     623     2 611.95   1.5486    0.2134    \nlevel      111859   55929     2 611.94 139.0640 < 2.2e-16 ***\ntask:level  20526    5131     4 612.00  12.7589 5.569e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_FR)[1]\n\nError in r.squaredGLMM(mix_FR): could not find function \"r.squaredGLMM\"\n\nr2tof2(r.squaredGLMM(mix_FR)[1])\n\nError in r.squaredGLMM(mix_FR): could not find function \"r.squaredGLMM\"\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_FR)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\nError in pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_FR)[1]), u = 7, sig.level = 0.05, : could not find function \"pwr.f2.test\"\n\n\n\n\n\n\n\nlavmodel <- \"\nPE =~ PE_mr + PE_ms + PE_st\nME =~ ME_mr + ME_ms + ME_st\nPH =~ PH_mr + PH_ms + PH_st\nEF =~ EF_mr + EF_ms + EF_st\nTI =~ TI_mr + TI_ms + TI_st\nFR =~ FR_mr + FR_ms + FR_st\nOW =~ PE + ME + PH + EF + TI + FR\"\n\n\nsemPower.getDf(lavmodel)\n\n[1] 129\n\n\n\nap <- semPower.aPriori(effect = .05, effect.measure = 'RMSEA',\n                       alpha = .05, power = .80, df = semPower.getDf(lavmodel))\nsummary(ap)\n\n\n semPower: A-priori power analysis\n                                   \n F0                        0.322500\n RMSEA                     0.050000\n Mc                        0.851079\n                                   \n df                        129     \n Required Num Observations 142     \n                                   \n Critical Chi-Square       156.5075\n NCP                       45.47250\n Alpha                     0.050000\n Beta                      0.198348\n Power (1-beta)            0.801652\n Implied Alpha/Beta Ratio  0.252082\n\n\n\n\n\n\n\n\n\nNASATLX_data |> \n  pivot_wider(id_cols = id, \n              names_from = item, \n              values_from = score,\n              values_fn = unlist) -> NASATLX_cfa\n\n\n\n\n\nmodel1 <- \"PE =~ pe_st_E + pe_st_M + pe_st_H + pe_mr_E + pe_mr_M + pe_mr_H + pe_ms_E + pe_ms_M + pe_ms_H\nME =~ me_st_E + me_st_M + me_st_H + me_mr_E + me_mr_M + me_mr_H + me_ms_E + me_ms_M + me_ms_H\nPH =~ ph_st_E + ph_st_M + ph_st_H + ph_mr_E + ph_mr_M + ph_mr_H + ph_ms_E + ph_ms_M + ph_ms_H\nEF =~ ef_st_E + ef_st_M + ef_st_H + ef_mr_E + ef_mr_M + ef_mr_H + ef_ms_E + ef_ms_M + ef_ms_H\nTI =~ ti_st_E + ti_st_M + ti_st_H + ti_mr_E + ti_mr_M + ti_mr_H + ti_ms_E + ti_ms_M + ti_ms_H\nFR =~ fr_st_E + fr_st_M + fr_st_H + fr_mr_E + fr_mr_M + fr_mr_H + fr_ms_E + fr_ms_M + fr_ms_H\nOW =~ PE + ME + PH + EF + TI + FR\"\n\n\ncfa1 <- cfa(model1, NASATLX_cfa)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa1, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 455 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                       114\n\n                                                  Used       Total\n  Number of observations                            67          78\n\nModel Test User Model:\n                                                      \n  Test statistic                              3660.590\n  Degrees of freedom                              1371\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                              5450.455\n  Degrees of freedom                              1431\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.430\n  Tucker-Lewis Index (TLI)                       0.405\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)             -15485.621\n  Loglikelihood unrestricted model (H1)     -13655.326\n                                                      \n  Akaike (AIC)                               31199.242\n  Bayesian (BIC)                             31450.577\n  Sample-size adjusted Bayesian (SABIC)      31091.632\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.158\n  90 Percent confidence interval - lower         0.152\n  90 Percent confidence interval - upper         0.164\n  P-value H_0: RMSEA <= 0.050                    0.000\n  P-value H_0: RMSEA >= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.152\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  PE =~                                               \n    pe_st_E           1.000                           \n    pe_st_M           2.255    0.980    2.301    0.021\n    pe_st_H           0.883    0.658    1.342    0.180\n    pe_mr_E           3.979    1.469    2.709    0.007\n    pe_mr_M           4.586    1.672    2.743    0.006\n    pe_mr_H           4.053    1.464    2.769    0.006\n    pe_ms_E           1.025    0.537    1.910    0.056\n    pe_ms_M           1.643    0.922    1.781    0.075\n    pe_ms_H           1.434    0.776    1.848    0.065\n  ME =~                                               \n    me_st_E           1.000                           \n    me_st_M           1.013    0.263    3.850    0.000\n    me_st_H           0.958    0.292    3.280    0.001\n    me_mr_E           1.566    0.351    4.466    0.000\n    me_mr_M           1.330    0.303    4.391    0.000\n    me_mr_H           1.032    0.263    3.920    0.000\n    me_ms_E           0.991    0.257    3.856    0.000\n    me_ms_M           1.180    0.291    4.053    0.000\n    me_ms_H           0.877    0.218    4.023    0.000\n  PH =~                                               \n    ph_st_E           1.000                           \n    ph_st_M           1.992    0.249    8.007    0.000\n    ph_st_H           2.349    0.260    9.027    0.000\n    ph_mr_E           1.971    0.211    9.328    0.000\n    ph_mr_M           1.988    0.222    8.971    0.000\n    ph_mr_H           2.338    0.263    8.880    0.000\n    ph_ms_E           1.450    0.182    7.961    0.000\n    ph_ms_M           2.179    0.241    9.046    0.000\n    ph_ms_H           2.642    0.286    9.254    0.000\n  EF =~                                               \n    ef_st_E           1.000                           \n    ef_st_M           1.029    0.188    5.477    0.000\n    ef_st_H           0.877    0.199    4.410    0.000\n    ef_mr_E           1.178    0.216    5.445    0.000\n    ef_mr_M           1.173    0.217    5.411    0.000\n    ef_mr_H           0.841    0.180    4.660    0.000\n    ef_ms_E           1.157    0.197    5.859    0.000\n    ef_ms_M           1.158    0.194    5.975    0.000\n    ef_ms_H           0.712    0.151    4.719    0.000\n  TI =~                                               \n    ti_st_E           1.000                           \n    ti_st_M           0.882    0.419    2.105    0.035\n    ti_st_H           0.594    0.371    1.601    0.109\n    ti_mr_E           1.667    0.432    3.861    0.000\n    ti_mr_M           1.465    0.378    3.876    0.000\n    ti_mr_H           1.547    0.415    3.730    0.000\n    ti_ms_E           1.382    0.399    3.466    0.001\n    ti_ms_M           0.987    0.418    2.362    0.018\n    ti_ms_H           0.650    0.360    1.805    0.071\n  FR =~                                               \n    fr_st_E           1.000                           \n    fr_st_M           1.716    0.355    4.837    0.000\n    fr_st_H           1.463    0.343    4.265    0.000\n    fr_mr_E           1.547    0.349    4.436    0.000\n    fr_mr_M           1.840    0.393    4.685    0.000\n    fr_mr_H           1.672    0.356    4.695    0.000\n    fr_ms_E           1.234    0.307    4.026    0.000\n    fr_ms_M           1.651    0.341    4.838    0.000\n    fr_ms_H           1.556    0.338    4.606    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME              128.381  914.645    0.140    0.888\n    PH               77.803  554.331    0.140    0.888\n    EF              186.293 1327.040    0.140    0.888\n    TI               59.585  424.836    0.140    0.888\n    FR               91.614  652.834    0.140    0.888\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .pe_st_E         124.591   22.092    5.640    0.000\n   .pe_st_M         361.285   65.373    5.527    0.000\n   .pe_st_H         354.264   61.638    5.747    0.000\n   .pe_mr_E         244.581   54.022    4.527    0.000\n   .pe_mr_M         244.480   59.972    4.077    0.000\n   .pe_mr_H         133.027   39.392    3.377    0.001\n   .pe_ms_E         168.410   29.687    5.673    0.000\n   .pe_ms_M         548.307   96.241    5.697    0.000\n   .pe_ms_H         369.741   65.033    5.685    0.000\n   .me_st_E         245.268   45.144    5.433    0.000\n   .me_st_M         287.394   52.463    5.478    0.000\n   .me_st_H         442.050   78.816    5.609    0.000\n   .me_mr_E         350.656   67.808    5.171    0.000\n   .me_mr_M         277.611   53.108    5.227    0.000\n   .me_mr_H         278.281   51.010    5.455    0.000\n   .me_ms_E         273.701   49.982    5.476    0.000\n   .me_ms_M         317.793   58.786    5.406    0.000\n   .me_ms_H         180.945   33.398    5.418    0.000\n   .ph_st_E          72.731   13.064    5.567    0.000\n   .ph_st_M         187.008   34.332    5.447    0.000\n   .ph_st_H         118.723   23.571    5.037    0.000\n   .ph_mr_E          60.178   12.690    4.742    0.000\n   .ph_mr_M          89.689   17.669    5.076    0.000\n   .ph_mr_H         134.864   26.271    5.133    0.000\n   .ph_ms_E         102.020   18.696    5.457    0.000\n   .ph_ms_M         100.315   19.972    5.023    0.000\n   .ph_ms_H         118.111   24.450    4.831    0.000\n   .ef_st_E         239.012   44.587    5.361    0.000\n   .ef_st_M         235.841   44.255    5.329    0.000\n   .ef_st_H         366.863   65.803    5.575    0.000\n   .ef_mr_E         316.820   59.323    5.341    0.000\n   .ef_mr_M         322.696   60.292    5.352    0.000\n   .ef_mr_H         283.996   51.311    5.535    0.000\n   .ef_ms_E         219.092   42.458    5.160    0.000\n   .ef_ms_M         198.370   38.959    5.092    0.000\n   .ef_ms_H         195.545   35.398    5.524    0.000\n   .ti_st_E         341.022   60.770    5.612    0.000\n   .ti_st_M         729.668  127.474    5.724    0.000\n   .ti_st_H         661.912  114.995    5.756    0.000\n   .ti_mr_E          93.538   24.026    3.893    0.000\n   .ti_mr_M          64.491   17.520    3.681    0.000\n   .ti_mr_H         149.496   31.182    4.794    0.000\n   .ti_ms_E         243.719   45.882    5.312    0.000\n   .ti_ms_M         656.806  115.249    5.699    0.000\n   .ti_ms_H         590.417  102.767    5.745    0.000\n   .fr_st_E         237.844   44.183    5.383    0.000\n   .fr_st_M         339.631   68.622    4.949    0.000\n   .fr_st_H         470.206   87.896    5.350    0.000\n   .fr_mr_E         441.207   83.804    5.265    0.000\n   .fr_mr_M         472.552   92.733    5.096    0.000\n   .fr_mr_H         385.333   75.746    5.087    0.000\n   .fr_ms_E         421.392   77.461    5.440    0.000\n   .fr_ms_M         313.899   63.433    4.948    0.000\n   .fr_ms_H         369.805   71.717    5.156    0.000\n   .PE               18.314   13.071    1.401    0.161\n   .ME               20.134   13.400    1.502    0.133\n   .PH               76.958   20.526    3.749    0.000\n   .EF               -7.894   17.614   -0.448    0.654\n   .TI               70.275   36.871    1.906    0.057\n   .FR               84.756   33.213    2.552    0.011\n    OW                0.007    0.096    0.070    0.944\n\n\n\nmodel_easy <- \"PE =~ pe_mr_E + pe_ms_E + pe_st_E\nPH =~ ph_mr_E + ph_ms_E + ph_st_E\nME =~ me_mr_E + me_ms_E + me_st_E\nEF =~ ef_mr_E + ef_ms_E + ef_st_E\nTI =~ ti_mr_E + ti_ms_E + ti_st_E\nFR =~ fr_mr_E + fr_ms_E + fr_st_E\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_easy <- cfa(model_easy, NASATLX_cfa,)\n\nWarning in lavaan::lavaan(model = model_easy, data = NASATLX_cfa, model.type = \"cfa\", : lavaan WARNING:\n    the optimizer warns that a solution has NOT been found!\n\nsummary(cfa_easy, fit.measures = TRUE)\n\nWarning in lav_object_summary(object = object, header = header, fit.measures = fit.measures, : lavaan WARNING: fit measures not available if model did not converge\n\n\nlavaan 0.6.15 did NOT end normally after 2260 iterations\n** WARNING ** Estimates below are most likely unreliable\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            73          78\n\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate   Std.Err  z-value  P(>|z|)\n  PE =~                                                \n    pe_mr_E            1.000                           \n    pe_ms_E            1.310       NA                  \n    pe_st_E            1.213       NA                  \n  PH =~                                                \n    ph_mr_E            1.000                           \n    ph_ms_E            0.787       NA                  \n    ph_st_E            0.571       NA                  \n  ME =~                                                \n    me_mr_E            1.000                           \n    me_ms_E            1.094       NA                  \n    me_st_E            0.836       NA                  \n  EF =~                                                \n    ef_mr_E            1.000                           \n    ef_ms_E            1.217       NA                  \n    ef_st_E            0.984       NA                  \n  TI =~                                                \n    ti_mr_E            1.000                           \n    ti_ms_E            0.987       NA                  \n    ti_st_E            0.722       NA                  \n  FR =~                                                \n    fr_mr_E            1.000                           \n    fr_ms_E            1.461       NA                  \n    fr_st_E            0.989       NA                  \n  OW =~                                                \n    PE                 1.000                           \n    ME              2899.037       NA                  \n    PH                -0.158       NA                  \n    EF               -17.873       NA                  \n    TI                -6.829       NA                  \n    FR                 3.480       NA                  \n\nVariances:\n                   Estimate   Std.Err  z-value  P(>|z|)\n   .pe_mr_E          464.987       NA                  \n   .pe_ms_E           86.235       NA                  \n   .pe_st_E           63.481       NA                  \n   .ph_mr_E           95.968       NA                  \n   .ph_ms_E           87.338       NA                  \n   .ph_st_E           50.572       NA                  \n   .me_mr_E          449.647       NA                  \n   .me_ms_E          143.733       NA                  \n   .me_st_E          229.140       NA                  \n   .ef_mr_E          358.257       NA                  \n   .ef_ms_E          110.697       NA                  \n   .ef_st_E          195.518       NA                  \n   .ti_mr_E          148.921       NA                  \n   .ti_ms_E          216.321       NA                  \n   .ti_st_E          321.114       NA                  \n   .fr_mr_E          593.657       NA                  \n   .fr_ms_E          289.120       NA                  \n   .fr_st_E          214.943       NA                  \n   .PE                51.502       NA                  \n   .PH               400.229       NA                  \n   .ME             35192.656       NA                  \n   .EF               266.885       NA                  \n   .TI               201.642       NA                  \n   .FR               154.556       NA                  \n    OW                -0.004       NA                  \n\nfitmeasures(cfa_easy, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\nError in lav_fit_measures(object = object, fit.measures = fit.measures, : lavaan ERROR: fit measures not available if model did not converge\n\n\n\nmodel_medium <- \"PE =~ pe_mr_M + pe_ms_M + pe_st_M\nPH =~ ph_mr_M + ph_ms_M + ph_st_M\nME =~ me_mr_M + me_ms_M + me_st_M\nEF =~ ef_mr_M + ef_ms_M + ef_st_M\nTI =~ ti_mr_M + ti_ms_M + ti_st_M\nFR =~ fr_mr_M + fr_ms_M + fr_st_M\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_medium <- cfa(model_medium, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 493 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.017\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.701\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.402\n  Bayesian (BIC)                             11932.173\n  Sample-size adjusted Bayesian (SABIC)      11799.815\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA <= 0.050                    0.000\n  P-value H_0: RMSEA >= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.685    0.401    1.711    0.087\n    pe_st_M           1.061    0.741    1.432    0.152\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.174    0.114   10.327    0.000\n    ph_st_M           1.135    0.115    9.872    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.701    0.463    3.672    0.000\n    me_st_M           1.058    0.345    3.071    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.508    0.289    5.214    0.000\n    ef_st_M           1.088    0.249    4.380    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.632    2.751    2.047    0.041\n    ti_st_M           3.908    2.027    1.928    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.332    0.271    4.921    0.000\n    fr_st_M           1.095    0.245    4.474    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               73.844 1151.565    0.064    0.949\n    PH               84.873 1323.482    0.064    0.949\n    EF              109.365 1705.387    0.064    0.949\n    TI               30.009  468.136    0.064    0.949\n    FR              113.058 1763.000    0.064    0.949\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .pe_mr_M         452.474  130.577    3.465    0.001\n   .pe_ms_M         511.248   98.015    5.216    0.000\n   .pe_st_M         263.411  128.374    2.052    0.040\n   .ph_mr_M         140.173   31.023    4.518    0.000\n   .ph_ms_M         104.826   32.777    3.198    0.001\n   .ph_st_M         142.456   35.272    4.039    0.000\n   .me_mr_M         402.103   68.867    5.839    0.000\n   .me_ms_M         236.209   58.827    4.015    0.000\n   .me_st_M         331.211   57.866    5.724    0.000\n   .ef_mr_M         437.092   74.252    5.887    0.000\n   .ef_ms_M         105.505   33.491    3.150    0.002\n   .ef_st_M         302.997   52.858    5.732    0.000\n   .ti_mr_M         242.309   39.894    6.074    0.000\n   .ti_ms_M         311.098   84.946    3.662    0.000\n   .ti_st_M         637.972  109.853    5.808    0.000\n   .fr_mr_M         633.851  114.284    5.546    0.000\n   .fr_ms_M         208.689   68.761    3.035    0.002\n   .fr_st_M         405.566   80.446    5.041    0.000\n   .PE              153.647  126.134    1.218    0.223\n   .PH              266.020   61.746    4.308    0.000\n   .ME                7.055   15.442    0.457    0.648\n   .EF              -12.589   15.004   -0.839    0.401\n   .TI               -1.186    2.460   -0.482    0.630\n   .FR              100.758   47.793    2.108    0.035\n    OW                0.017    0.536    0.032    0.974\n\nfitmeasures(cfa_medium, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n414.017 129.000   0.000   0.637   0.569   0.173   0.141 \n\n\n\nmodel_hard <- \"PE =~ pe_mr_H + pe_ms_H + pe_st_H\nPH =~ ph_mr_H + ph_ms_H + ph_st_H\nME =~ me_mr_H + me_ms_H + me_st_H\nEF =~ ef_mr_H + ef_ms_H + ef_st_H\nTI =~ ti_mr_H + ti_ms_H + ti_st_H\nFR =~ fr_mr_H + fr_ms_H + fr_st_H\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_hard <- cfa(model_hard, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 493 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.017\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.701\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.402\n  Bayesian (BIC)                             11932.173\n  Sample-size adjusted Bayesian (SABIC)      11799.815\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA <= 0.050                    0.000\n  P-value H_0: RMSEA >= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.685    0.401    1.711    0.087\n    pe_st_M           1.061    0.741    1.432    0.152\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.174    0.114   10.327    0.000\n    ph_st_M           1.135    0.115    9.872    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.701    0.463    3.672    0.000\n    me_st_M           1.058    0.345    3.071    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.508    0.289    5.214    0.000\n    ef_st_M           1.088    0.249    4.380    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.632    2.751    2.047    0.041\n    ti_st_M           3.908    2.027    1.928    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.332    0.271    4.921    0.000\n    fr_st_M           1.095    0.245    4.474    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               73.844 1151.565    0.064    0.949\n    PH               84.873 1323.482    0.064    0.949\n    EF              109.365 1705.387    0.064    0.949\n    TI               30.009  468.136    0.064    0.949\n    FR              113.058 1763.000    0.064    0.949\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .pe_mr_M         452.474  130.577    3.465    0.001\n   .pe_ms_M         511.248   98.015    5.216    0.000\n   .pe_st_M         263.411  128.374    2.052    0.040\n   .ph_mr_M         140.173   31.023    4.518    0.000\n   .ph_ms_M         104.826   32.777    3.198    0.001\n   .ph_st_M         142.456   35.272    4.039    0.000\n   .me_mr_M         402.103   68.867    5.839    0.000\n   .me_ms_M         236.209   58.827    4.015    0.000\n   .me_st_M         331.211   57.866    5.724    0.000\n   .ef_mr_M         437.092   74.252    5.887    0.000\n   .ef_ms_M         105.505   33.491    3.150    0.002\n   .ef_st_M         302.997   52.858    5.732    0.000\n   .ti_mr_M         242.309   39.894    6.074    0.000\n   .ti_ms_M         311.098   84.946    3.662    0.000\n   .ti_st_M         637.972  109.853    5.808    0.000\n   .fr_mr_M         633.851  114.284    5.546    0.000\n   .fr_ms_M         208.689   68.761    3.035    0.002\n   .fr_st_M         405.566   80.446    5.041    0.000\n   .PE              153.647  126.134    1.218    0.223\n   .PH              266.020   61.746    4.308    0.000\n   .ME                7.055   15.442    0.457    0.648\n   .EF              -12.589   15.004   -0.839    0.401\n   .TI               -1.186    2.460   -0.482    0.630\n   .FR              100.758   47.793    2.108    0.035\n    OW                0.017    0.536    0.032    0.974\n\nfitmeasures(cfa_hard, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n366.216 129.000   0.000   0.663   0.601   0.159   0.115"
  },
  {
    "objectID": "analysis.html#packages",
    "href": "analysis.html#packages",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntheme_set(theme_bw()) # set black and white theme\nlibrary(lavaan)\n\nThis is lavaan 0.6-15\nlavaan is FREE software! Please report any bugs.\n\nlibrary(tidySEM)\n\nLoading required package: OpenMx\nOpenMx may run faster if it is compiled to take advantage of multiple cores.\nRegistered S3 method overwritten by 'tidySEM':\n  method          from  \n  predict.MxModel OpenMx\n\nlibrary(semPower)\n\n\n### Welcome to semPower 2.0.1 ###\n\nSee https://github.com/moshagen/semPower for quick examples.\nSee https://moshagen.github.io/semPower/ for a detailed manual.\n\nPlease cite as:\nMoshagen, M., & Erdfelder, E. (2016). A new strategy for testing structural equation models.\nStructural Equation Modeling, 23, 54-60. doi: 10.1080/10705511.2014.950896\n\nlibrary(lme4)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:OpenMx':\n\n    %&%, expm\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(lmerTest)\n\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(MuMIn)\nlibrary(pwr)\n\n\nrm(list = ls())"
  },
  {
    "objectID": "analysis.html#reading-data",
    "href": "analysis.html#reading-data",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "MR_data &lt;- read_csv(\"MR_firstbanch_data.csv\")\n\nRows: 3744 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): correctAns, base_pic, rotated_pic, key, task, level, id\ndbl (3): is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nST_data &lt;- read_csv(\"ST_firstbanch_data.csv\")\n\nRows: 3744 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): key, task, level, id\ndbl (4): target_present, is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nMS_data &lt;- read_csv(\"MS_firstbanch_data.csv\")\n\nRows: 3744 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (4): trials, n, rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nNASATLX_data &lt;- read_csv(\"NASATLX_firstbanch_data.csv\")\n\nRows: 4212 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nSEQUENCE_data &lt;- read_csv(\"SEQ_firstbanch_data.csv\")\n\nRows: 702 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): level, task, id\ndbl (1): order\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nEXPTIME &lt;- read_csv(\"EXPTIME_firstbanch_data.csv\")\n\nRows: 78 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): id\ndbl  (1): dur\ndttm (2): start, end\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "analysis.html#behavioral-data",
    "href": "analysis.html#behavioral-data",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "MR_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -&gt; MR_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMR_data_agg |&gt; write_csv(\"MR_firstbanch_data_agg.csv\")\n\n\nMR_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MR       78  7.11  4.56  1.43  25.5     6.10     8.12\n2 hard   MR       78 12.0  10.3   1.60  69.1     9.67    14.2 \n3 medium MR       78  8.79  5.88  1.10  37.1     7.49    10.1 \n\n\n\nMR_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MR       78 0.850 0.174 0.312     1    0.812    0.889\n2 hard   MR       78 0.721 0.178 0.312     1    0.682    0.761\n3 medium MR       78 0.755 0.178 0.25      1    0.715    0.794\n\n\n\nMR_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\n\n\n\nMS_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(acc)) -&gt; MS_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMS_data_agg |&gt; write_csv(\"MS_firstbanch_data_agg.csv\")\n\n\nMS_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt, na.rm = TRUE),\n            sd = sd(rt, na.rm = TRUE),\n            min = min(rt, na.rm = TRUE),\n            max = max(rt, na.rm = TRUE),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MS       78  11.7  5.72  5.47  46.8     10.4     13.0\n2 hard   MS       78  22.7 11.8  11.2   91.0     20.1     25.4\n3 medium MS       78  19.1  5.79 10.1   39.9     17.8     20.4\n\n\n\nMS_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MS       78 0.949 0.165     0 1        0.913    0.986\n2 hard   MS       78 0.635 0.168     0 0.973    0.597    0.672\n3 medium MS       78 0.878 0.172     0 1        0.839    0.916\n\n\n\nMS_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\n\n\n\n\n\n\n\nST_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -&gt; ST_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nST_data_agg |&gt; write_csv(\"ST_firstbanch_data_agg.csv\")\n\n\nST_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   ST       78  1.12 0.325 0.627  2.47     1.05     1.19\n2 hard   ST       78  1.44 0.441 0.737  3.52     1.34     1.54\n3 medium ST       78  1.39 0.470 0.692  3.45     1.28     1.49\n\n\n\nST_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean     sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   ST       78 0.979 0.0358 0.875 1        0.971    0.987\n2 hard   ST       78 0.686 0.127  0.312 0.875    0.658    0.714\n3 medium ST       78 0.836 0.114  0.562 1        0.811    0.861\n\n\n\nST_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nMR_data_agg |&gt; \n  bind_rows(MS_data_agg, ST_data_agg) |&gt;\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Reaction Time\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMR_data_agg |&gt; \n  bind_rows(MS_data_agg, ST_data_agg) |&gt;\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Accuracy\")"
  },
  {
    "objectID": "analysis.html#experimental-time",
    "href": "analysis.html#experimental-time",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "EXPTIME |&gt; ggplot(aes(dur)) +\n  geom_density()\n\nWarning: Removed 1 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\nEXPTIME |&gt; \n  filter(dur &lt; 250) |&gt; \n  ggplot(aes(dur)) +\n  # geom_density() +\n  geom_histogram() +\n  geom_vline(xintercept = 70) +\n  geom_vline(xintercept = 75) +\n  geom_vline(xintercept = 100)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nEXPTIME |&gt; \n  filter(dur &lt; 250) |&gt; \n  ggplot(aes(dur)) +\n  geom_boxplot() \n\n\n\n  #geom_vline(xintercept = 93, linetype = \"dashed\")\n\n\nEXPTIME$dur |&gt; min(na.rm = TRUE)\n\n[1] 28.23333\n\nquantile(EXPTIME$dur[EXPTIME$dur&lt;250], .75, na.rm = TRUE) + 1.5 * IQR(EXPTIME$dur[EXPTIME$dur&lt;250], na.rm = TRUE)\n\n   75% \n82.375"
  },
  {
    "objectID": "analysis.html#nasa-tlx",
    "href": "analysis.html#nasa-tlx",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "NASATLX_data |&gt; \n  # fix factor\n  mutate(\n    level = factor(\n      level,\n      levels = c(\"easy\", \"medium\", \"hard\"),\n      ordered = TRUE\n    ),\n    # modify vars to match with previously created encoding\n    scl = str_to_lower(scale),\n    tsk = str_to_lower(task),\n    lvl = str_sub(level, start = 1, end = 1) |&gt; str_to_upper(),\n    score = score * 5\n  ) |&gt;\n  # create a new var for CFA\n  unite(item, scl, tsk, lvl) -&gt; NASATLX_data\n\n\nlevel_colors &lt;- c(\"#4bd752\", \"#d7984b\", \"#d7524b\")\ntask_colors &lt;- c(\"red4\", \"green4\", \"blue4\")\nback_histogram_color &lt;- \"gray60\"\n\n\nNASATLX_data |&gt;\n  ggplot(aes(scale, score, fill = level)) +\n  geom_boxplot() +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_fill_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\npd &lt;- position_dodge(0.3)\nNASATLX_data |&gt;\n  ggplot(aes(scale, score, color = level)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\",\n               position = pd, width = .3) +\n  stat_summary(fun = mean, geom = \"point\",\n               position = pd) +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_color_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`).\nRemoved 17 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\n\n\nNASATLX_data |&gt; \n  select(-item) |&gt; \n  # mutate(row_nubmer = row_number()) |&gt; \n  pivot_wider(values_from = score, names_from = scale) -&gt; nasa_tlx_wide\n# NASA_TLX |&gt; group_by(task, level) |&gt; summarise(n=n())\n# nasa_tlx_wide |&gt; group_by(task, level) |&gt; summarise(n=n())\n\n\nr2tof2 &lt;- function(r2) r2 / (1 - r2)\n\n\n\n\nmix_ME &lt;- lmer(ME ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ME)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: ME ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6090.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1846 -0.5810  0.0514  0.6403  3.1496 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 172.8    13.14   \n Residual             300.2    17.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          46.445      2.463 335.008  18.861  &lt; 2e-16 ***\ntaskMS              -16.813      2.774 615.020  -6.060 2.37e-09 ***\ntaskST              -18.655      2.774 615.020  -6.724 4.05e-11 ***\nlevelmedium          10.951      2.774 615.020   3.947 8.82e-05 ***\nlevelhard            19.777      2.774 615.020   7.128 2.86e-12 ***\ntaskMS:levelmedium   20.000      3.924 615.020   5.097 4.59e-07 ***\ntaskST:levelmedium   14.677      3.924 615.020   3.741 0.000201 ***\ntaskMS:levelhard     27.488      3.924 615.020   7.006 6.47e-12 ***\ntaskST:levelhard     20.282      3.931 615.107   5.160 3.34e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.563                                                             \ntaskST      -0.563  0.500                                                      \nlevelmedium -0.563  0.500  0.500                                               \nlevelhard   -0.563  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.398 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.398 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.398 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.398 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_ME)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask         6703    3352     2 615.06  11.165 1.727e-05 ***\nlevel      152214   76107     2 615.06 253.516 &lt; 2.2e-16 ***\ntask:level  16928    4232     4 615.06  14.097 5.168e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ME)[1]\n\nWarning: 'r.squaredGLMM' now calculates a revised statistic. See the help page.\n\n\n[1] 0.3470414\n\nr2tof2(r.squaredGLMM(mix_ME)[1])\n\n[1] 0.5314908\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_ME)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 26.69644\n             f2 = 0.5314908\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_PH &lt;- lmer(PH ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PH)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PH ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 5661\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.5884 -0.5011 -0.0854  0.4111  5.0325 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 434.9    20.85   \n Residual             148.2    12.17   \nNumber of obs: 694, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(&gt;|t|)    \n(Intercept)         17.0474     2.7392 127.9525   6.224 6.41e-09 ***\ntaskMS              -3.0090     1.9782 608.2281  -1.521  0.12875    \ntaskST              -5.6698     1.9562 608.0818  -2.898  0.00389 ** \nlevelmedium          0.8142     1.9562 608.0818   0.416  0.67740    \nlevelhard            5.5848     1.9562 608.0818   2.855  0.00445 ** \ntaskMS:levelmedium   8.9361     2.7821 608.1575   3.212  0.00139 ** \ntaskST:levelmedium   8.8358     2.7666 608.0868   3.194  0.00148 ** \ntaskMS:levelhard     7.8940     2.7860 608.1309   2.833  0.00476 ** \ntaskST:levelhard     7.7832     2.7615 608.0620   2.818  0.00498 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.356                                                             \ntaskST      -0.360  0.498                                                      \nlevelmedium -0.360  0.498  0.504                                               \nlevelhard   -0.360  0.498  0.504  0.504                                        \ntskMS:lvlmd  0.253 -0.711 -0.354 -0.703 -0.354                                 \ntskST:lvlmd  0.254 -0.352 -0.707 -0.707 -0.356  0.497                          \ntskMS:lvlhr  0.253 -0.709 -0.354 -0.354 -0.702  0.504      0.250               \ntskST:lvlhr  0.255 -0.353 -0.708 -0.357 -0.708  0.251      0.501      0.497    \n\nanova(mix_PH)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask        1087.1   543.6     2 608.13  3.6685  0.026080 *  \nlevel      13744.9  6872.5     2 608.10 46.3819 &lt; 2.2e-16 ***\ntask:level  2422.0   605.5     4 608.12  4.0865  0.002816 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PH)[1]\n\n[1] 0.04098889\n\nr2tof2(r.squaredGLMM(mix_PH)[1])\n\n[1] 0.04274079\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PH)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 334.8529\n             f2 = 0.04274079\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_TI &lt;- lmer(TI ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_TI)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: TI ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6223.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0957 -0.5892 -0.0314  0.6288  2.8906 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 160.6    12.67   \n Residual             373.7    19.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(&gt;|t|)    \n(Intercept)         15.5984     2.6173 401.8373   5.960 5.53e-09 ***\ntaskMS               3.5592     3.0955 614.9845   1.150 0.250661    \ntaskST              11.3673     3.0955 614.9845   3.672 0.000261 ***\nlevelmedium          0.7836     3.0955 614.9845   0.253 0.800248    \nlevelhard            4.1863     3.0955 614.9845   1.352 0.176739    \ntaskMS:levelmedium  32.1104     4.3776 614.9845   7.335 7.02e-13 ***\ntaskST:levelmedium  33.6197     4.3854 615.0938   7.666 6.94e-14 ***\ntaskMS:levelhard    51.4924     4.3776 614.9845  11.763  &lt; 2e-16 ***\ntaskST:levelhard    50.8953     4.3776 614.9845  11.626  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.591                                                             \ntaskST      -0.591  0.500                                                      \nlevelmedium -0.591  0.500  0.500                                               \nlevelhard   -0.591  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.418 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.417 -0.353 -0.706 -0.706 -0.353  0.499                          \ntskMS:lvlhr  0.418 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.418 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_TI)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask       203830  101915     2 615.03 272.724 &lt; 2.2e-16 ***\nlevel      173710   86855     2 615.03 232.424 &lt; 2.2e-16 ***\ntask:level  70059   17515     4 615.03  46.869 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_TI)[1]\n\n[1] 0.5446988\n\nr2tof2(r.squaredGLMM(mix_TI)[1])\n\n[1] 1.196348\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_TI)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 12.23247\n             f2 = 1.196348\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_PE &lt;- lmer(PE ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PE)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PE ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6076.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3961 -0.6412  0.0325  0.6477  2.5583 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 113.9    10.67   \n Residual             306.0    17.49   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          66.615      2.320 435.796  28.711  &lt; 2e-16 ***\ntaskMS               25.479      2.801 615.017   9.096  &lt; 2e-16 ***\ntaskST               23.503      2.801 615.017   8.391 3.31e-16 ***\nlevelmedium          -8.781      2.801 615.017  -3.135   0.0018 ** \nlevelhard           -16.480      2.801 615.017  -5.884 6.60e-09 ***\ntaskMS:levelmedium  -17.419      3.961 615.017  -4.397 1.29e-05 ***\ntaskST:levelmedium  -28.291      3.961 615.017  -7.142 2.61e-12 ***\ntaskMS:levelhard    -39.938      3.961 615.017 -10.082  &lt; 2e-16 ***\ntaskST:levelhard    -44.857      3.968 615.138 -11.304  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.604                                                             \ntaskST      -0.604  0.500                                                      \nlevelmedium -0.604  0.500  0.500                                               \nlevelhard   -0.604  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.427 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.427 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.427 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.426 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_PE)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask         7295    3647     2 615.07  11.921  8.33e-06 ***\nlevel      234141  117070     2 615.07 382.616 &lt; 2.2e-16 ***\ntask:level  49094   12273     4 615.07  40.113 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PE)[1]\n\n[1] 0.4967487\n\nr2tof2(r.squaredGLMM(mix_PE)[1])\n\n[1] 0.9870788\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PE)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 14.63282\n             f2 = 0.9870788\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_EF &lt;- lmer(EF ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_EF)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: EF ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6055.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1279 -0.6094  0.0357  0.6249  3.5591 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 249.8    15.81   \n Residual             276.8    16.64   \nNumber of obs: 700, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          44.381      2.598 247.283  17.080  &lt; 2e-16 ***\ntaskMS              -12.862      2.664 614.020  -4.828 1.74e-06 ***\ntaskST              -11.609      2.664 614.020  -4.358 1.54e-05 ***\nlevelmedium           9.006      2.664 614.020   3.381 0.000769 ***\nlevelhard            17.584      2.664 614.020   6.601 8.86e-11 ***\ntaskMS:levelmedium   17.979      3.774 614.080   4.764 2.38e-06 ***\ntaskST:levelmedium   13.621      3.774 614.080   3.609 0.000333 ***\ntaskMS:levelhard     25.250      3.767 614.020   6.702 4.65e-11 ***\ntaskST:levelhard     14.255      3.767 614.020   3.784 0.000170 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.513                                                             \ntaskST      -0.513  0.500                                                      \nlevelmedium -0.513  0.500  0.500                                               \nlevelhard   -0.513  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.362 -0.706 -0.353 -0.706 -0.353                                 \ntskST:lvlmd  0.362 -0.353 -0.706 -0.706 -0.353  0.498                          \ntskMS:lvlhr  0.362 -0.707 -0.354 -0.354 -0.707  0.499      0.250               \ntskST:lvlhr  0.362 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_EF)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(&gt;F)    \ntask         1763     881     2 614.07   3.1842    0.0421 *  \nlevel      113335   56667     2 614.07 204.7413 &lt; 2.2e-16 ***\ntask:level  13748    3437     4 614.07  12.4179 1.018e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_EF)[1]\n\n[1] 0.2592648\n\nr2tof2(r.squaredGLMM(mix_EF)[1])\n\n[1] 0.3500102\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_EF)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 40.49648\n             f2 = 0.3500102\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_FR &lt;- lmer(FR ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_FR)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: FR ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6292.3\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.92494 -0.67440 -0.04275  0.63993  2.97611 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 343.0    18.52   \n Residual             402.2    20.05   \nNumber of obs: 698, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          35.058      3.091 256.301  11.342  &lt; 2e-16 ***\ntaskMS              -11.619      3.235 612.136  -3.592 0.000355 ***\ntaskST              -13.828      3.211 611.853  -4.306 1.94e-05 ***\nlevelmedium           6.322      3.211 611.853   1.969 0.049432 *  \nlevelhard            12.950      3.223 611.978   4.018 6.59e-05 ***\ntaskMS:levelmedium   13.354      4.558 611.995   2.930 0.003518 ** \ntaskST:levelmedium   20.118      4.541 611.853   4.430 1.12e-05 ***\ntaskMS:levelhard     23.420      4.566 612.053   5.129 3.92e-07 ***\ntaskST:levelhard     30.659      4.558 611.996   6.727 4.00e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.516                                                             \ntaskST      -0.519  0.496                                                      \nlevelmedium -0.519  0.496  0.500                                               \nlevelhard   -0.518  0.495  0.498  0.498                                        \ntskMS:lvlmd  0.366 -0.710 -0.352 -0.705 -0.351                                 \ntskST:lvlmd  0.367 -0.351 -0.707 -0.707 -0.352  0.498                          \ntskMS:lvlhr  0.365 -0.708 -0.352 -0.352 -0.706  0.503      0.249               \ntskST:lvlhr  0.366 -0.349 -0.705 -0.352 -0.707  0.248      0.498      0.499    \n\nanova(mix_FR)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(&gt;F)    \ntask         1246     623     2 611.95   1.5486    0.2134    \nlevel      111859   55929     2 611.94 139.0640 &lt; 2.2e-16 ***\ntask:level  20526    5131     4 612.00  12.7589 5.569e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_FR)[1]\n\n[1] 0.204493\n\nr2tof2(r.squaredGLMM(mix_FR)[1])\n\n[1] 0.2570599\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_FR)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 55.20916\n             f2 = 0.2570599\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\n\nlavmodel &lt;- \"\nPE =~ PE_mr + PE_ms + PE_st\nME =~ ME_mr + ME_ms + ME_st\nPH =~ PH_mr + PH_ms + PH_st\nEF =~ EF_mr + EF_ms + EF_st\nTI =~ TI_mr + TI_ms + TI_st\nFR =~ FR_mr + FR_ms + FR_st\nOW =~ PE + ME + PH + EF + TI + FR\"\n\n\nsemPower.getDf(lavmodel)\n\n[1] 129\n\n\n\nap &lt;- semPower.aPriori(effect = .05, effect.measure = 'RMSEA',\n                       alpha = .05, power = .80, df = semPower.getDf(lavmodel))\nsummary(ap)\n\n\n semPower: A priori power analysis\n                                   \n F0                        0.322500\n RMSEA                     0.050000\n Mc                        0.851079\n                                   \n df                        129     \n Required Num Observations 142     \n                                   \n Critical Chi-Square       156.5075\n NCP                       45.47250\n Alpha                     0.050000\n Beta                      0.198348\n Power (1 - Beta)          0.801652\n Implied Alpha/Beta Ratio  0.252082\n\n\n\n\n\n\n\n\n\nNASATLX_data |&gt; \n  pivot_wider(id_cols = id, \n              names_from = item, \n              values_from = score,\n              values_fn = unlist) -&gt; NASATLX_cfa\n\n\n\n\n\nmodel1 &lt;- \"PE =~ pe_st_E + pe_st_M + pe_st_H + pe_mr_E + pe_mr_M + pe_mr_H + pe_ms_E + pe_ms_M + pe_ms_H\nME =~ me_st_E + me_st_M + me_st_H + me_mr_E + me_mr_M + me_mr_H + me_ms_E + me_ms_M + me_ms_H\nPH =~ ph_st_E + ph_st_M + ph_st_H + ph_mr_E + ph_mr_M + ph_mr_H + ph_ms_E + ph_ms_M + ph_ms_H\nEF =~ ef_st_E + ef_st_M + ef_st_H + ef_mr_E + ef_mr_M + ef_mr_H + ef_ms_E + ef_ms_M + ef_ms_H\nTI =~ ti_st_E + ti_st_M + ti_st_H + ti_mr_E + ti_mr_M + ti_mr_H + ti_ms_E + ti_ms_M + ti_ms_H\nFR =~ fr_st_E + fr_st_M + fr_st_H + fr_mr_E + fr_mr_M + fr_mr_H + fr_ms_E + fr_ms_M + fr_ms_H\nOW =~ PE + ME + PH + EF + TI + FR\"\n\n\ncfa1 &lt;- cfa(model1, NASATLX_cfa)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa1, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 457 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                       114\n\n                                                  Used       Total\n  Number of observations                            67          78\n\nModel Test User Model:\n                                                      \n  Test statistic                              3660.590\n  Degrees of freedom                              1371\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                              5450.455\n  Degrees of freedom                              1431\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.430\n  Tucker-Lewis Index (TLI)                       0.405\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)             -15485.621\n  Loglikelihood unrestricted model (H1)     -13655.326\n                                                      \n  Akaike (AIC)                               31199.242\n  Bayesian (BIC)                             31450.577\n  Sample-size adjusted Bayesian (SABIC)      31091.632\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.158\n  90 Percent confidence interval - lower         0.152\n  90 Percent confidence interval - upper         0.164\n  P-value H_0: RMSEA &lt;= 0.050                    0.000\n  P-value H_0: RMSEA &gt;= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.152\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_st_E           1.000                           \n    pe_st_M           2.255    0.980    2.301    0.021\n    pe_st_H           0.883    0.658    1.342    0.180\n    pe_mr_E           3.979    1.469    2.709    0.007\n    pe_mr_M           4.586    1.672    2.743    0.006\n    pe_mr_H           4.053    1.464    2.769    0.006\n    pe_ms_E           1.025    0.537    1.910    0.056\n    pe_ms_M           1.643    0.922    1.781    0.075\n    pe_ms_H           1.434    0.776    1.848    0.065\n  ME =~                                               \n    me_st_E           1.000                           \n    me_st_M           1.013    0.263    3.850    0.000\n    me_st_H           0.958    0.292    3.280    0.001\n    me_mr_E           1.566    0.351    4.466    0.000\n    me_mr_M           1.330    0.303    4.391    0.000\n    me_mr_H           1.032    0.263    3.920    0.000\n    me_ms_E           0.991    0.257    3.856    0.000\n    me_ms_M           1.180    0.291    4.053    0.000\n    me_ms_H           0.877    0.218    4.023    0.000\n  PH =~                                               \n    ph_st_E           1.000                           \n    ph_st_M           1.992    0.249    8.007    0.000\n    ph_st_H           2.349    0.260    9.026    0.000\n    ph_mr_E           1.971    0.211    9.327    0.000\n    ph_mr_M           1.988    0.222    8.971    0.000\n    ph_mr_H           2.338    0.263    8.880    0.000\n    ph_ms_E           1.450    0.182    7.961    0.000\n    ph_ms_M           2.179    0.241    9.045    0.000\n    ph_ms_H           2.642    0.286    9.253    0.000\n  EF =~                                               \n    ef_st_E           1.000                           \n    ef_st_M           1.029    0.188    5.478    0.000\n    ef_st_H           0.877    0.199    4.410    0.000\n    ef_mr_E           1.177    0.216    5.445    0.000\n    ef_mr_M           1.173    0.217    5.411    0.000\n    ef_mr_H           0.841    0.180    4.660    0.000\n    ef_ms_E           1.157    0.197    5.859    0.000\n    ef_ms_M           1.158    0.194    5.975    0.000\n    ef_ms_H           0.712    0.151    4.719    0.000\n  TI =~                                               \n    ti_st_E           1.000                           \n    ti_st_M           0.882    0.419    2.105    0.035\n    ti_st_H           0.594    0.371    1.601    0.109\n    ti_mr_E           1.667    0.432    3.861    0.000\n    ti_mr_M           1.465    0.378    3.876    0.000\n    ti_mr_H           1.548    0.415    3.730    0.000\n    ti_ms_E           1.382    0.399    3.466    0.001\n    ti_ms_M           0.987    0.418    2.362    0.018\n    ti_ms_H           0.650    0.360    1.805    0.071\n  FR =~                                               \n    fr_st_E           1.000                           \n    fr_st_M           1.716    0.355    4.837    0.000\n    fr_st_H           1.463    0.343    4.265    0.000\n    fr_mr_E           1.547    0.349    4.436    0.000\n    fr_mr_M           1.840    0.393    4.685    0.000\n    fr_mr_H           1.672    0.356    4.695    0.000\n    fr_ms_E           1.234    0.307    4.027    0.000\n    fr_ms_M           1.651    0.341    4.838    0.000\n    fr_ms_H           1.555    0.338    4.607    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME              129.227  926.720    0.139    0.889\n    PH               78.302  561.551    0.139    0.889\n    EF              187.539 1344.685    0.139    0.889\n    TI               59.971  430.389    0.139    0.889\n    FR               92.231  661.541    0.139    0.889\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_st_E         124.592   22.092    5.640    0.000\n   .pe_st_M         361.286   65.373    5.527    0.000\n   .pe_st_H         354.263   61.638    5.747    0.000\n   .pe_mr_E         244.580   54.022    4.527    0.000\n   .pe_mr_M         244.481   59.972    4.077    0.000\n   .pe_mr_H         133.027   39.392    3.377    0.001\n   .pe_ms_E         168.410   29.687    5.673    0.000\n   .pe_ms_M         548.305   96.241    5.697    0.000\n   .pe_ms_H         369.742   65.034    5.685    0.000\n   .me_st_E         245.269   45.144    5.433    0.000\n   .me_st_M         287.396   52.463    5.478    0.000\n   .me_st_H         442.052   78.816    5.609    0.000\n   .me_mr_E         350.656   67.808    5.171    0.000\n   .me_mr_M         277.611   53.108    5.227    0.000\n   .me_mr_H         278.281   51.010    5.455    0.000\n   .me_ms_E         273.702   49.982    5.476    0.000\n   .me_ms_M         317.792   58.786    5.406    0.000\n   .me_ms_H         180.944   33.398    5.418    0.000\n   .ph_st_E          72.731   13.064    5.567    0.000\n   .ph_st_M         187.008   34.332    5.447    0.000\n   .ph_st_H         118.723   23.571    5.037    0.000\n   .ph_mr_E          60.179   12.690    4.742    0.000\n   .ph_mr_M          89.689   17.669    5.076    0.000\n   .ph_mr_H         134.863   26.271    5.133    0.000\n   .ph_ms_E         102.020   18.696    5.457    0.000\n   .ph_ms_M         100.315   19.972    5.023    0.000\n   .ph_ms_H         118.110   24.449    4.831    0.000\n   .ef_st_E         239.011   44.588    5.360    0.000\n   .ef_st_M         235.842   44.255    5.329    0.000\n   .ef_st_H         366.864   65.803    5.575    0.000\n   .ef_mr_E         316.818   59.323    5.341    0.000\n   .ef_mr_M         322.696   60.292    5.352    0.000\n   .ef_mr_H         283.996   51.311    5.535    0.000\n   .ef_ms_E         219.092   42.458    5.160    0.000\n   .ef_ms_M         198.369   38.958    5.092    0.000\n   .ef_ms_H         195.544   35.398    5.524    0.000\n   .ti_st_E         341.024   60.770    5.612    0.000\n   .ti_st_M         729.673  127.474    5.724    0.000\n   .ti_st_H         661.921  114.997    5.756    0.000\n   .ti_mr_E          93.536   24.026    3.893    0.000\n   .ti_mr_M          64.489   17.520    3.681    0.000\n   .ti_mr_H         149.496   31.182    4.794    0.000\n   .ti_ms_E         243.722   45.883    5.312    0.000\n   .ti_ms_M         656.813  115.250    5.699    0.000\n   .ti_ms_H         590.416  102.767    5.745    0.000\n   .fr_st_E         237.842   44.183    5.383    0.000\n   .fr_st_M         339.632   68.622    4.949    0.000\n   .fr_st_H         470.211   87.897    5.350    0.000\n   .fr_mr_E         441.208   83.804    5.265    0.000\n   .fr_mr_M         472.556   92.734    5.096    0.000\n   .fr_mr_H         385.335   75.746    5.087    0.000\n   .fr_ms_E         421.390   77.460    5.440    0.000\n   .fr_ms_M         313.895   63.432    4.948    0.000\n   .fr_ms_H         369.808   71.717    5.156    0.000\n   .PE               18.313   13.071    1.401    0.161\n   .ME               20.134   13.400    1.502    0.133\n   .PH               76.954   20.525    3.749    0.000\n   .EF               -7.898   17.618   -0.448    0.654\n   .TI               70.269   36.870    1.906    0.057\n   .FR               84.765   33.215    2.552    0.011\n    OW                0.007    0.095    0.070    0.944\n\n\n\nmodel_easy &lt;- \"PE =~ pe_mr_E + pe_ms_E + pe_st_E\nPH =~ ph_mr_E + ph_ms_E + ph_st_E\nME =~ me_mr_E + me_ms_E + me_st_E\nEF =~ ef_mr_E + ef_ms_E + ef_st_E\nTI =~ ti_mr_E + ti_ms_E + ti_st_E\nFR =~ fr_mr_E + fr_ms_E + fr_st_E\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_easy &lt;- cfa(model_easy, NASATLX_cfa,)\n\nWarning in lavaan::lavaan(model = model_easy, data = NASATLX_cfa, model.type = \"cfa\", : lavaan WARNING:\n    the optimizer (NLMINB) claimed the model converged, but not all\n    elements of the gradient are (near) zero; the optimizer may not\n    have found a local solution use check.gradient = FALSE to skip\n    this check.\n\nsummary(cfa_easy, fit.measures = TRUE)\n\nWarning in lav_object_summary(object = object, header = header, fit.measures = fit.measures, : lavaan WARNING: fit measures not available if model did not converge\n\n\nlavaan 0.6.15 did NOT end normally after 2116 iterations\n** WARNING ** Estimates below are most likely unreliable\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            73          78\n\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_E           1.000                           \n    pe_ms_E           1.419       NA                  \n    pe_st_E           1.209       NA                  \n  PH =~                                               \n    ph_mr_E           1.000                           \n    ph_ms_E           0.771       NA                  \n    ph_st_E           0.553       NA                  \n  ME =~                                               \n    me_mr_E           1.000                           \n    me_ms_E           1.332       NA                  \n    me_st_E           0.970       NA                  \n  EF =~                                               \n    ef_mr_E           1.000                           \n    ef_ms_E         615.563       NA                  \n    ef_st_E         450.263       NA                  \n  TI =~                                               \n    ti_mr_E           1.000                           \n    ti_ms_E           0.897       NA                  \n    ti_st_E           0.658       NA                  \n  FR =~                                               \n    fr_mr_E           1.000                           \n    fr_ms_E           1.621       NA                  \n    fr_st_E           0.981       NA                  \n  OW =~                                               \n    PE                1.000                           \n    ME               77.820       NA                  \n    PH               35.580       NA                  \n    EF              -27.319       NA                  \n    TI              -16.505       NA                  \n    FR               32.616       NA                  \n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_E         467.637       NA                  \n   .pe_ms_E          78.043       NA                  \n   .pe_st_E          69.064       NA                  \n   .ph_mr_E          81.950       NA                  \n   .ph_ms_E          90.557       NA                  \n   .ph_st_E          55.096       NA                  \n   .me_mr_E         501.362       NA                  \n   .me_ms_E         112.752       NA                  \n   .me_st_E         226.683       NA                  \n   .ef_mr_E         653.026       NA                  \n   .ef_ms_E          52.514       NA                  \n   .ef_st_E         212.342       NA                  \n   .ti_mr_E         127.553       NA                  \n   .ti_ms_E         233.108       NA                  \n   .ti_st_E         329.558       NA                  \n   .fr_mr_E         607.300       NA                  \n   .fr_ms_E         245.992       NA                  \n   .fr_st_E         229.707       NA                  \n   .PE               47.895       NA                  \n   .PH              405.813       NA                  \n   .ME              162.755       NA                  \n   .EF                0.119       NA                  \n   .TI              223.000       NA                  \n   .FR              142.155       NA                  \n    OW               -0.000       NA                  \n\nfitmeasures(cfa_easy, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\nError in lav_fit_measures(object = object, fit.measures = fit.measures, : lavaan ERROR: fit measures not available if model did not converge\n\n\n\nmodel_medium &lt;- \"PE =~ pe_mr_M + pe_ms_M + pe_st_M\nPH =~ ph_mr_M + ph_ms_M + ph_st_M\nME =~ me_mr_M + me_ms_M + me_st_M\nEF =~ ef_mr_M + ef_ms_M + ef_st_M\nTI =~ ti_mr_M + ti_ms_M + ti_st_M\nFR =~ fr_mr_M + fr_ms_M + fr_st_M\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_medium &lt;- cfa(model_medium, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 595 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.006\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.695\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.391\n  Bayesian (BIC)                             11932.162\n  Sample-size adjusted Bayesian (SABIC)      11799.804\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA &lt;= 0.050                    0.000\n  P-value H_0: RMSEA &gt;= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.692    0.404    1.713    0.087\n    pe_st_M           1.111    0.795    1.398    0.162\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.175    0.114   10.302    0.000\n    ph_st_M           1.136    0.115    9.853    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.700    0.462    3.682    0.000\n    me_st_M           1.056    0.344    3.070    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.507    0.289    5.217    0.000\n    ef_st_M           1.087    0.248    4.376    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.636    2.758    2.044    0.041\n    ti_st_M           3.908    2.030    1.925    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.321    0.267    4.951    0.000\n    fr_st_M           1.088    0.242    4.498    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               77.337 1225.523    0.063    0.950\n    PH               88.722 1405.879    0.063    0.950\n    EF              114.555 1815.199    0.063    0.950\n    TI               31.359  497.099    0.063    0.950\n    FR              119.009 1885.795    0.063    0.950\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_M         459.659  129.163    3.559    0.000\n   .pe_ms_M         515.945   98.551    5.235    0.000\n   .pe_st_M         254.842  135.912    1.875    0.061\n   .ph_mr_M         140.360   31.040    4.522    0.000\n   .ph_ms_M         105.049   32.821    3.201    0.001\n   .ph_st_M         142.392   35.293    4.035    0.000\n   .me_mr_M         400.687   68.640    5.837    0.000\n   .me_ms_M         235.436   58.752    4.007    0.000\n   .me_st_M         333.738   58.257    5.729    0.000\n   .ef_mr_M         437.248   74.274    5.887    0.000\n   .ef_ms_M         105.610   33.510    3.152    0.002\n   .ef_st_M         304.507   53.091    5.736    0.000\n   .ti_mr_M         242.729   39.965    6.073    0.000\n   .ti_ms_M         310.719   84.981    3.656    0.000\n   .ti_st_M         637.750  109.822    5.807    0.000\n   .fr_mr_M         631.586  114.143    5.533    0.000\n   .fr_ms_M         210.454   68.924    3.053    0.002\n   .fr_st_M         405.789   80.574    5.036    0.000\n   .PE              146.638  123.264    1.190    0.234\n   .PH              264.745   61.527    4.303    0.000\n   .ME                7.078   15.473    0.457    0.647\n   .EF              -12.849   15.063   -0.853    0.394\n   .TI               -1.161    2.451   -0.474    0.636\n   .FR              102.947   48.504    2.122    0.034\n    OW                0.016    0.498    0.032    0.975\n\nfitmeasures(cfa_medium, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n414.006 129.000   0.000   0.637   0.569   0.173   0.141 \n\n\n\nmodel_hard &lt;- \"PE =~ pe_mr_H + pe_ms_H + pe_st_H\nPH =~ ph_mr_H + ph_ms_H + ph_st_H\nME =~ me_mr_H + me_ms_H + me_st_H\nEF =~ ef_mr_H + ef_ms_H + ef_st_H\nTI =~ ti_mr_H + ti_ms_H + ti_st_H\nFR =~ fr_mr_H + fr_ms_H + fr_st_H\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_hard &lt;- cfa(model_hard, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 595 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.006\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.695\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.391\n  Bayesian (BIC)                             11932.162\n  Sample-size adjusted Bayesian (SABIC)      11799.804\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA &lt;= 0.050                    0.000\n  P-value H_0: RMSEA &gt;= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.692    0.404    1.713    0.087\n    pe_st_M           1.111    0.795    1.398    0.162\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.175    0.114   10.302    0.000\n    ph_st_M           1.136    0.115    9.853    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.700    0.462    3.682    0.000\n    me_st_M           1.056    0.344    3.070    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.507    0.289    5.217    0.000\n    ef_st_M           1.087    0.248    4.376    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.636    2.758    2.044    0.041\n    ti_st_M           3.908    2.030    1.925    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.321    0.267    4.951    0.000\n    fr_st_M           1.088    0.242    4.498    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               77.337 1225.523    0.063    0.950\n    PH               88.722 1405.879    0.063    0.950\n    EF              114.555 1815.199    0.063    0.950\n    TI               31.359  497.099    0.063    0.950\n    FR              119.009 1885.795    0.063    0.950\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_M         459.659  129.163    3.559    0.000\n   .pe_ms_M         515.945   98.551    5.235    0.000\n   .pe_st_M         254.842  135.912    1.875    0.061\n   .ph_mr_M         140.360   31.040    4.522    0.000\n   .ph_ms_M         105.049   32.821    3.201    0.001\n   .ph_st_M         142.392   35.293    4.035    0.000\n   .me_mr_M         400.687   68.640    5.837    0.000\n   .me_ms_M         235.436   58.752    4.007    0.000\n   .me_st_M         333.738   58.257    5.729    0.000\n   .ef_mr_M         437.248   74.274    5.887    0.000\n   .ef_ms_M         105.610   33.510    3.152    0.002\n   .ef_st_M         304.507   53.091    5.736    0.000\n   .ti_mr_M         242.729   39.965    6.073    0.000\n   .ti_ms_M         310.719   84.981    3.656    0.000\n   .ti_st_M         637.750  109.822    5.807    0.000\n   .fr_mr_M         631.586  114.143    5.533    0.000\n   .fr_ms_M         210.454   68.924    3.053    0.002\n   .fr_st_M         405.789   80.574    5.036    0.000\n   .PE              146.638  123.264    1.190    0.234\n   .PH              264.745   61.527    4.303    0.000\n   .ME                7.078   15.473    0.457    0.647\n   .EF              -12.849   15.063   -0.853    0.394\n   .TI               -1.161    2.451   -0.474    0.636\n   .FR              102.947   48.504    2.122    0.034\n    OW                0.016    0.498    0.032    0.975\n\nfitmeasures(cfa_hard, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n366.213 129.000   0.000   0.664   0.601   0.159   0.115"
  },
  {
    "objectID": "toloka-explore.html",
    "href": "toloka-explore.html",
    "title": "NASA-TLX",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\ntheme_set(theme_bw())\n\n\nrm(list=ls())\n\n\nmr_preproc <- function(d) {\n  \n  require(tidyverse)\n  \n  d |> select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -> MR_easy # ready to use\n  \n  \n  d |> select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |>  # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -> MR_medium # ready to use\n  \n  \n  \n  d |> select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -> MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -> MR\n  \n  return(MR)\n  \n}\n\nst_preproc <- function(d) {\n  \n  require(tidyverse)\n  \n  d |> select(\n    # select columns we need\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -> ST_easy # ready to use\n  \n  d |> select(\n    # select columns we need\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -> ST_medium # ready to use\n  \n  \n  d |> select(\n    # select columns we need\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -> ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -> ST\n  \n  return(ST)\n  \n}\n\nms_preproc <- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count <- function(df) {\n    df |> select(matches(\"^noun\")) |> as.matrix() -> s\n    df |> select(matches(\"^resp\")) |> as.matrix() -> r\n    a <- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] <- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |> select(\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"easy\") |>\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"rt\" = \"mouse_MSe.time\"\n      ) |>\n      select(-c(paste0(\"noun\", 4:7))) -> MS_easy\n    \n    d |> select(\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"medium\") |> \n      rename(\"rt\" = \"mouse_MSm.time\") |>\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |> \n      select(-noun6, -noun7) -> MS_medium\n    \n    \n    d |> select(\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"hard\") |>\n      rename(\"rt\" = \"mouse_MSh.time\") |> \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -> MS_hard\n    \n  } else {\n    \n    d |> select(matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |>\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text\n      ) |>\n      select(-c(paste0(\"noun\", 4:7))) -> MS_easy\n    \n    d |> select(matches(\"^noun\"),\n                matches(\"MSm.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |>\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |> \n      select(-noun6, -noun7) -> MS_medium\n    \n    \n    d |> select(matches(\"^noun\"),\n                matches(\"MSh.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |>\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -> MS_hard\n  }\n  \n  tibble(\n    #id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |>\n    pivot_longer(cols = -c(\"trials\"), values_to = \"value\") |>\n    separate(name, c(\"task\", \"level\", \"name\")) |>\n    pivot_wider(values_from = value, names_from = name) |>\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -> MS\n  \n  return(MS)\n  \n}\n\nnasatlx_preproc <- function(d) {\n  d |> select(slider.response,\n              head,\n              task_type,\n              task_level) |>\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |>\n    rename(\"score\" = slider.response) |>\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |>\n    select(scale, score, task, level) -> NASATLX\n  \n  return(NASATLX)\n}\n\n# sequence_preproc <- function(d) {\n#   \n#   d |> select(\n#     E_rotation,\n#     M_rotation,\n#     H_rotation,\n#     E_Sternberg,\n#     M_Sternberg,\n#     H_Sternberg,\n#     E_span,\n#     M_span,\n#     H_span\n#   ) |>\n#     drop_na() |>\n#     sapply(function(x) which(x == 1)) -> v \n#   \n#   tibble(name = names(v),\n#          order = v,\n#          id = d[[\"Индивидуальный_код\"]][1]) |>\n#     arrange(order) |>\n#     separate(name, c(\"level\", \"task\"), \"_\") |>\n#     mutate(\n#       task = recode(\n#         task,\n#         \"rotation\" = \"MR\",\n#         \"Sternberg\" = \"ST\",\n#         \"span\" = \"MS\"\n#       ),\n#       level = recode(\n#         level,\n#         \"E\" = \"easy\",\n#         \"M\" = \"medium\",\n#         \"H\" = \"hard\"\n#       )\n#     ) -> SEQUENCE\n#   \n#   return(SEQUENCE)\n#   \n# }\n\n\n\n\nTo compare\n\nread_csv(\"../preproc-data/MR_firstbanch_data_agg.csv\") -> MR_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/MS_firstbanch_data_agg.csv\") -> MS_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/ST_firstbanch_data_agg.csv\") -> ST_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nfiles <- paste0(\"../data-toloka/pool1/\", dir(\"../data-toloka/pool1\"))\n\n\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\n#SEQUENCE_data <- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  #SEQUENCE_data |> bind_rows(sequence_preproc(d)) -> SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/pool1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/pool1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/pool1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/pool1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n\n\n\n# MR_data |> write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |> write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |> write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |> write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |> write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 360 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |> \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nfiles <- paste0(\"../data-toloka/pool2/\", dir(\"../data-toloka/pool2\"))\n\n\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\n#SEQUENCE_data <- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  #SEQUENCE_data |> bind_rows(sequence_preproc(d)) -> SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/pool2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/pool2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/pool2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/pool2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/pool2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/pool2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/pool2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/pool2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/pool2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |> write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |> write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |> write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |> write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |> write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 720 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |> \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nfiles <- c(\n  paste0(\"../data-toloka/pool1/\", dir(\"../data-toloka/pool1\")),\n  paste0(\"../data-toloka/pool2/\", dir(\"../data-toloka/pool2\"))\n)\n\n\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\n#SEQUENCE_data <- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  #SEQUENCE_data |> bind_rows(sequence_preproc(d)) -> SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/pool1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/pool1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/pool1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/pool1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n[1] \"../data-toloka/pool2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/pool2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/pool2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/pool2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/pool2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/pool2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/pool2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/pool2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/pool2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/pool2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |> write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |> write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |> write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |> write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |> write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |> \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\npool88 <- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40236288__21-07-2023.tsv\")\n\nRows: 7 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:meds, OUTPUT:gender, OUTPUT:diseases,...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (13): GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GOLDEN:gender...\ndttm  (5): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npool87 <- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40260687__21-07-2023.tsv\")\n\nRows: 4 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (14): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (4): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npool68 <- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40272468__21-07-2023.tsv\")\n\nRows: 20 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (12): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (6): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npool16 <- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40307616__21-07-2023.tsv\")\n\nRows: 43 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (13): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (5): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:rejected, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npool88$`ASSIGNMENT:worker_id` %in% pool87$`ASSIGNMENT:worker_id` |> sum()\n\n[1] 0\n\npool88$`ASSIGNMENT:worker_id` %in% pool68$`ASSIGNMENT:worker_id` |> sum()\n\n[1] 0\n\npool88$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |> sum()\n\n[1] 0\n\npool87$`ASSIGNMENT:worker_id` %in% pool68$`ASSIGNMENT:worker_id` |> sum()\n\n[1] 0\n\npool87$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |> sum()\n\n[1] 0\n\npool68$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |> sum()\n\n[1] 2\n\n## duplicates\npool68$`ASSIGNMENT:worker_id`[pool68$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id`]\n\n[1] \"f19c1b96415fa4ebadffa0b9fdf0b666\" \"040267dc3213d9bb136605f74e9fd81f\"\n\n\n\n\n\n\n#rm(list=ls())\n\n\n## broken Column `mouse_MSh.time` doesn't exist.\nfile.remove(\"../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv\")\n\nWarning in\nfile.remove(\"../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv\"):\ncannot remove file\n'../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv', reason 'No\nsuch file or directory'\n\n\n[1] FALSE\n\n\n\nfiles <- paste0(\"../data-toloka/pool34/\", dir(\"../data-toloka/pool34\"))\n\n\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\n#SEQUENCE_data <- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  #SEQUENCE_data |> bind_rows(sequence_preproc(d)) -> SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool34/01.09.1988_toloka_2023-07-21_16h03.32.707.csv\"\n[1] \"../data-toloka/pool34/010390_toloka_2023-07-21_13h41.57.595.csv\"\n[1] \"../data-toloka/pool34/02.10.1992_toloka_2023-07-21_13h49.46.426.csv\"\n[1] \"../data-toloka/pool34/03.07.1987_toloka_2023-07-21_18h22.46.276.csv\"\n[1] \"../data-toloka/pool34/031186_toloka_2023-07-21_13h45.33.796.csv\"\n[1] \"../data-toloka/pool34/03121996_toloka_2023-07-21_19h46.15.237.csv\"\n[1] \"../data-toloka/pool34/04.11.1995_toloka_2023-07-21_18h39.24.717.csv\"\n[1] \"../data-toloka/pool34/040485_toloka_2023-07-21_17h36.41.405.csv\"\n[1] \"../data-toloka/pool34/040485_toloka_2023-07-21_17h56.38.378.csv\"\n[1] \"../data-toloka/pool34/040897_toloka_2023-07-21_15h56.53.591.csv\"\n[1] \"../data-toloka/pool34/05011994_toloka_2023-07-21_18h04.14.803.csv\"\n[1] \"../data-toloka/pool34/060302_toloka_2023-07-21_15h02.31.748.csv\"\n[1] \"../data-toloka/pool34/06051987_toloka_2023-07-21_18h25.49.317.csv\"\n[1] \"../data-toloka/pool34/09021990_toloka_2023-07-21_13h41.16.661.csv\"\n[1] \"../data-toloka/pool34/090291_toloka_2023-07-21_23h39.02.549.csv\"\n[1] \"../data-toloka/pool34/10111988_toloka_2023-07-21_13h28.34.745.csv\"\n[1] \"../data-toloka/pool34/120786_toloka_2023-07-21_15h34.34.535.csv\"\n[1] \"../data-toloka/pool34/13.01.1989_toloka_2023-07-21_18h04.48.759.csv\"\n[1] \"../data-toloka/pool34/14021986_toloka_2023-07-21_18h07.50.397.csv\"\n[1] \"../data-toloka/pool34/140800_toloka_2023-07-21_22h35.26.001.csv\"\n[1] \"../data-toloka/pool34/1511987_toloka_2023-07-21_22h11.58.878.csv\"\n[1] \"../data-toloka/pool34/151295_toloka_2023-07-21_14h20.24.718.csv\"\n[1] \"../data-toloka/pool34/16121987_toloka_2023-07-21_14h15.15.295.csv\"\n[1] \"../data-toloka/pool34/17.06.1988_toloka_2023-07-21_13h56.37.405.csv\"\n[1] \"../data-toloka/pool34/19091998_toloka_2023-07-21_13h59.25.510.csv\"\n[1] \"../data-toloka/pool34/19121989_toloka_2023-07-21_18h44.23.764.csv\"\n[1] \"../data-toloka/pool34/201085_toloka_2023-07-21_13h48.03.696.csv\"\n[1] \"../data-toloka/pool34/20121998_toloka_2023-07-21_18h21.19.291.csv\"\n[1] \"../data-toloka/pool34/210499_toloka_2023-07-21_13h37.56.499.csv\"\n[1] \"../data-toloka/pool34/210723_toloka_2023-07-21_18h40.05.195.csv\"\n[1] \"../data-toloka/pool34/211104_toloka_2023-07-21_17h06.29.907.csv\"\n[1] \"../data-toloka/pool34/230697_toloka_2023-07-21_23h40.02.926.csv\"\n[1] \"../data-toloka/pool34/230799_toloka_2023-07-21_21h03.46.166.csv\"\n[1] \"../data-toloka/pool34/24051985_toloka_2023-07-21_14h07.46.171.csv\"\n[1] \"../data-toloka/pool34/26042003_toloka_2023-07-21_20h24.07.570.csv\"\n[1] \"../data-toloka/pool34/27.11.1987_toloka_2023-07-21_18h20.10.164.csv\"\n[1] \"../data-toloka/pool34/28101993_toloka_2023-07-21_14h03.32.293.csv\"\n[1] \"../data-toloka/pool34/281184_toloka_2023-07-21_20h40.16.637.csv\"\n[1] \"../data-toloka/pool34/291295_toloka_2023-07-21_14h47.45.284.csv\"\n[1] \"../data-toloka/pool34/300305_toloka_2023-07-21_14h46.09.683.csv\"\n[1] \"../data-toloka/pool34/301099_toloka_2023-07-22_11h34.54.059.csv\"\n[1] \"../data-toloka/pool34/31081998_toloka_2023-07-21_13h39.43.342.csv\"\n\n\n\n# MR_data |> write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |> write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |> write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |> write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |> write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data$file |> unique() |> length()\n\n[1] 42\n\n\n\nMR_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 3024 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |> \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#packages",
    "href": "toloka-explore.html#packages",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntheme_set(theme_bw())\n\n\nrm(list=ls())\n\n\nmr_preproc &lt;- function(d) {\n  \n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -&gt; MR_easy # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt;  # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -&gt; MR_medium # ready to use\n  \n  \n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -&gt; MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -&gt; MR\n  \n  return(MR)\n  \n}\n\nst_preproc &lt;- function(d) {\n  \n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -&gt; ST_easy # ready to use\n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -&gt; ST_medium # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -&gt; ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -&gt; ST\n  \n  return(ST)\n  \n}\n\nms_preproc &lt;- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count &lt;- function(df) {\n    df |&gt; select(matches(\"^noun\")) |&gt; as.matrix() -&gt; s\n    df |&gt; select(matches(\"^resp\")) |&gt; as.matrix() -&gt; r\n    a &lt;- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] &lt;- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\") |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"rt\" = \"mouse_MSe.time\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\") |&gt; \n      rename(\"rt\" = \"mouse_MSm.time\") |&gt;\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\") |&gt;\n      rename(\"rt\" = \"mouse_MSh.time\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -&gt; MS_hard\n    \n  } else {\n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"MSm.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"MSh.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -&gt; MS_hard\n  }\n  \n  tibble(\n    #id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |&gt;\n    pivot_longer(cols = -c(\"trials\"), values_to = \"value\") |&gt;\n    separate(name, c(\"task\", \"level\", \"name\")) |&gt;\n    pivot_wider(values_from = value, names_from = name) |&gt;\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -&gt; MS\n  \n  return(MS)\n  \n}\n\nnasatlx_preproc &lt;- function(d) {\n  d |&gt; select(slider.response,\n              head,\n              task_type,\n              task_level) |&gt;\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |&gt;\n    rename(\"score\" = slider.response) |&gt;\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |&gt;\n    select(scale, score, task, level) -&gt; NASATLX\n  \n  return(NASATLX)\n}\n\n# sequence_preproc &lt;- function(d) {\n#   \n#   d |&gt; select(\n#     E_rotation,\n#     M_rotation,\n#     H_rotation,\n#     E_Sternberg,\n#     M_Sternberg,\n#     H_Sternberg,\n#     E_span,\n#     M_span,\n#     H_span\n#   ) |&gt;\n#     drop_na() |&gt;\n#     sapply(function(x) which(x == 1)) -&gt; v \n#   \n#   tibble(name = names(v),\n#          order = v,\n#          id = d[[\"Индивидуальный_код\"]][1]) |&gt;\n#     arrange(order) |&gt;\n#     separate(name, c(\"level\", \"task\"), \"_\") |&gt;\n#     mutate(\n#       task = recode(\n#         task,\n#         \"rotation\" = \"MR\",\n#         \"Sternberg\" = \"ST\",\n#         \"span\" = \"MS\"\n#       ),\n#       level = recode(\n#         level,\n#         \"E\" = \"easy\",\n#         \"M\" = \"medium\",\n#         \"H\" = \"hard\"\n#       )\n#     ) -&gt; SEQUENCE\n#   \n#   return(SEQUENCE)\n#   \n# }"
  },
  {
    "objectID": "toloka-explore.html#banch-2",
    "href": "toloka-explore.html#banch-2",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- paste0(\"../data-toloka/banch2/\", dir(\"../data-toloka/banch2\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/banch2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/banch2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/banch2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/banch2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/banch2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/banch2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/banch2/MA1907_toloka_2023-07-19_16h56.11.966.csv\"\n[1] \"../data-toloka/banch2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/banch2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/banch2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 792 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#load-fistbanch-data",
    "href": "toloka-explore.html#load-fistbanch-data",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "To compare\n\nread_csv(\"MR_firstbanch_data_agg.csv\") -&gt; MR_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"MS_firstbanch_data_agg.csv\") -&gt; MS_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"ST_firstbanch_data_agg.csv\") -&gt; ST_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "toloka-explore.html#banch-1",
    "href": "toloka-explore.html#banch-1",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- paste0(\"../data-toloka/banch1/\", dir(\"../data-toloka/banch1\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/banch1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/banch1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/banch1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/banch1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 360 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#banch-1-banch-2-together",
    "href": "toloka-explore.html#banch-1-banch-2-together",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- c(\n  paste0(\"../data-toloka/banch1/\", dir(\"../data-toloka/banch1\")),\n  paste0(\"../data-toloka/banch2/\", dir(\"../data-toloka/banch2\"))\n)\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/banch1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/banch1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/banch1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/banch1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n[1] \"../data-toloka/banch2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/banch2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/banch2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/banch2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/banch2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/banch2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/banch2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/banch2/MA1907_toloka_2023-07-19_16h56.11.966.csv\"\n[1] \"../data-toloka/banch2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/banch2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/banch2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#assignments-check-ids",
    "href": "toloka-explore.html#assignments-check-ids",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "pool88 &lt;- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40236288__21-07-2023.tsv\")\n\nRows: 7 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:meds, OUTPUT:gender, OUTPUT:diseases,...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (13): GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GOLDEN:gender...\ndttm  (5): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npool87 &lt;- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40260687__21-07-2023.tsv\")\n\nRows: 4 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (14): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (4): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npool68 &lt;- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40272468__21-07-2023.tsv\")\n\nRows: 20 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (12): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (6): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npool16 &lt;- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40307616__21-07-2023.tsv\")\n\nRows: 43 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (13): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (5): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:rejected, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npool88$`ASSIGNMENT:worker_id` %in% pool87$`ASSIGNMENT:worker_id` |&gt; sum()\n\n[1] 0\n\npool88$`ASSIGNMENT:worker_id` %in% pool68$`ASSIGNMENT:worker_id` |&gt; sum()\n\n[1] 0\n\npool88$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |&gt; sum()\n\n[1] 0\n\npool87$`ASSIGNMENT:worker_id` %in% pool68$`ASSIGNMENT:worker_id` |&gt; sum()\n\n[1] 0\n\npool87$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |&gt; sum()\n\n[1] 0\n\npool68$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |&gt; sum()\n\n[1] 2\n\n## duplicates\npool68$`ASSIGNMENT:worker_id`[pool68$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id`]\n\n[1] \"f19c1b96415fa4ebadffa0b9fdf0b666\" \"040267dc3213d9bb136605f74e9fd81f\""
  },
  {
    "objectID": "toloka-explore.html#load-first-data",
    "href": "toloka-explore.html#load-first-data",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "To compare\n\nread_csv(\"MR_firstbanch_data_agg.csv\") -&gt; MR_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"MS_firstbanch_data_agg.csv\") -&gt; MS_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"ST_firstbanch_data_agg.csv\") -&gt; ST_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "toloka-explore.html#pool-1",
    "href": "toloka-explore.html#pool-1",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- paste0(\"../data-toloka/pool1/\", dir(\"../data-toloka/pool1\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/pool1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/pool1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/pool1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/pool1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 360 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#pool-2",
    "href": "toloka-explore.html#pool-2",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- paste0(\"../data-toloka/pool2/\", dir(\"../data-toloka/pool2\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/pool2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/pool2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/pool2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/pool2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/pool2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/pool2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/pool2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/pool2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/pool2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 720 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#pool-1-pool-2-together",
    "href": "toloka-explore.html#pool-1-pool-2-together",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- c(\n  paste0(\"../data-toloka/pool1/\", dir(\"../data-toloka/pool1\")),\n  paste0(\"../data-toloka/pool2/\", dir(\"../data-toloka/pool2\"))\n)\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/pool1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/pool1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/pool1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/pool1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n[1] \"../data-toloka/pool2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/pool2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/pool2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/pool2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/pool2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/pool2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/pool2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/pool2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/pool2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/pool2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#pools-3-4",
    "href": "toloka-explore.html#pools-3-4",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "#rm(list=ls())\n\n\n## broken Column `mouse_MSh.time` doesn't exist.\nfile.remove(\"../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv\")\n\nWarning in\nfile.remove(\"../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv\"):\ncannot remove file\n'../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv', reason 'No\nsuch file or directory'\n\n\n[1] FALSE\n\n\n\nfiles &lt;- paste0(\"../data-toloka/pool34/\", dir(\"../data-toloka/pool34\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool34/01.09.1988_toloka_2023-07-21_16h03.32.707.csv\"\n[1] \"../data-toloka/pool34/010390_toloka_2023-07-21_13h41.57.595.csv\"\n[1] \"../data-toloka/pool34/02.10.1992_toloka_2023-07-21_13h49.46.426.csv\"\n[1] \"../data-toloka/pool34/03.07.1987_toloka_2023-07-21_18h22.46.276.csv\"\n[1] \"../data-toloka/pool34/031186_toloka_2023-07-21_13h45.33.796.csv\"\n[1] \"../data-toloka/pool34/03121996_toloka_2023-07-21_19h46.15.237.csv\"\n[1] \"../data-toloka/pool34/04.11.1995_toloka_2023-07-21_18h39.24.717.csv\"\n[1] \"../data-toloka/pool34/040485_toloka_2023-07-21_17h36.41.405.csv\"\n[1] \"../data-toloka/pool34/040485_toloka_2023-07-21_17h56.38.378.csv\"\n[1] \"../data-toloka/pool34/040897_toloka_2023-07-21_15h56.53.591.csv\"\n[1] \"../data-toloka/pool34/05011994_toloka_2023-07-21_18h04.14.803.csv\"\n[1] \"../data-toloka/pool34/060302_toloka_2023-07-21_15h02.31.748.csv\"\n[1] \"../data-toloka/pool34/06051987_toloka_2023-07-21_18h25.49.317.csv\"\n[1] \"../data-toloka/pool34/09021990_toloka_2023-07-21_13h41.16.661.csv\"\n[1] \"../data-toloka/pool34/090291_toloka_2023-07-21_23h39.02.549.csv\"\n[1] \"../data-toloka/pool34/10111988_toloka_2023-07-21_13h28.34.745.csv\"\n[1] \"../data-toloka/pool34/120786_toloka_2023-07-21_15h34.34.535.csv\"\n[1] \"../data-toloka/pool34/13.01.1989_toloka_2023-07-21_18h04.48.759.csv\"\n[1] \"../data-toloka/pool34/14021986_toloka_2023-07-21_18h07.50.397.csv\"\n[1] \"../data-toloka/pool34/140800_toloka_2023-07-21_22h35.26.001.csv\"\n[1] \"../data-toloka/pool34/1511987_toloka_2023-07-21_22h11.58.878.csv\"\n[1] \"../data-toloka/pool34/151295_toloka_2023-07-21_14h20.24.718.csv\"\n[1] \"../data-toloka/pool34/16121987_toloka_2023-07-21_14h15.15.295.csv\"\n[1] \"../data-toloka/pool34/17.06.1988_toloka_2023-07-21_13h56.37.405.csv\"\n[1] \"../data-toloka/pool34/19091998_toloka_2023-07-21_13h59.25.510.csv\"\n[1] \"../data-toloka/pool34/19121989_toloka_2023-07-21_18h44.23.764.csv\"\n[1] \"../data-toloka/pool34/201085_toloka_2023-07-21_13h48.03.696.csv\"\n[1] \"../data-toloka/pool34/20121998_toloka_2023-07-21_18h21.19.291.csv\"\n[1] \"../data-toloka/pool34/210499_toloka_2023-07-21_13h37.56.499.csv\"\n[1] \"../data-toloka/pool34/210723_toloka_2023-07-21_18h40.05.195.csv\"\n[1] \"../data-toloka/pool34/211104_toloka_2023-07-21_17h06.29.907.csv\"\n[1] \"../data-toloka/pool34/230697_toloka_2023-07-21_23h40.02.926.csv\"\n[1] \"../data-toloka/pool34/230799_toloka_2023-07-21_21h03.46.166.csv\"\n[1] \"../data-toloka/pool34/24051985_toloka_2023-07-21_14h07.46.171.csv\"\n[1] \"../data-toloka/pool34/26042003_toloka_2023-07-21_20h24.07.570.csv\"\n[1] \"../data-toloka/pool34/27.11.1987_toloka_2023-07-21_18h20.10.164.csv\"\n[1] \"../data-toloka/pool34/28101993_toloka_2023-07-21_14h03.32.293.csv\"\n[1] \"../data-toloka/pool34/281184_toloka_2023-07-21_20h40.16.637.csv\"\n[1] \"../data-toloka/pool34/291295_toloka_2023-07-21_14h47.45.284.csv\"\n[1] \"../data-toloka/pool34/300305_toloka_2023-07-21_14h46.09.683.csv\"\n[1] \"../data-toloka/pool34/301099_toloka_2023-07-22_11h34.54.059.csv\"\n[1] \"../data-toloka/pool34/31081998_toloka_2023-07-21_13h39.43.342.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data$file |&gt; unique() |&gt; length()\n\n[1] 42\n\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 3024 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#all-toloka-files",
    "href": "toloka-explore.html#all-toloka-files",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "## dropped with low accuracy\nfile.remove(\"../data-toloka/pool2/MA1907_toloka_2023-07-19_16h56.11.966.csv\")\n\nWarning in\nfile.remove(\"../data-toloka/pool2/MA1907_toloka_2023-07-19_16h56.11.966.csv\"):\ncannot remove file\n'../data-toloka/pool2/MA1907_toloka_2023-07-19_16h56.11.966.csv', reason 'No\nsuch file or directory'\n\n\n[1] FALSE\n\n\n\nfiles &lt;- c(\n  paste0(\"../data-toloka/pool1/\", dir(\"../data-toloka/pool1\")),\n  paste0(\"../data-toloka/pool2/\", dir(\"../data-toloka/pool2\")),\n  paste0(\"../data-toloka/pool34/\", dir(\"../data-toloka/pool34\"))\n)\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/pool1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/pool1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/pool1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/pool1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/pool1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n[1] \"../data-toloka/pool2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/pool2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/pool2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/pool2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/pool2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/pool2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/pool2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/pool2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/pool2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/pool2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n[1] \"../data-toloka/pool34/01.09.1988_toloka_2023-07-21_16h03.32.707.csv\"\n[1] \"../data-toloka/pool34/010390_toloka_2023-07-21_13h41.57.595.csv\"\n[1] \"../data-toloka/pool34/02.10.1992_toloka_2023-07-21_13h49.46.426.csv\"\n[1] \"../data-toloka/pool34/03.07.1987_toloka_2023-07-21_18h22.46.276.csv\"\n[1] \"../data-toloka/pool34/031186_toloka_2023-07-21_13h45.33.796.csv\"\n[1] \"../data-toloka/pool34/03121996_toloka_2023-07-21_19h46.15.237.csv\"\n[1] \"../data-toloka/pool34/04.11.1995_toloka_2023-07-21_18h39.24.717.csv\"\n[1] \"../data-toloka/pool34/040485_toloka_2023-07-21_17h36.41.405.csv\"\n[1] \"../data-toloka/pool34/040485_toloka_2023-07-21_17h56.38.378.csv\"\n[1] \"../data-toloka/pool34/040897_toloka_2023-07-21_15h56.53.591.csv\"\n[1] \"../data-toloka/pool34/05011994_toloka_2023-07-21_18h04.14.803.csv\"\n[1] \"../data-toloka/pool34/060302_toloka_2023-07-21_15h02.31.748.csv\"\n[1] \"../data-toloka/pool34/06051987_toloka_2023-07-21_18h25.49.317.csv\"\n[1] \"../data-toloka/pool34/09021990_toloka_2023-07-21_13h41.16.661.csv\"\n[1] \"../data-toloka/pool34/090291_toloka_2023-07-21_23h39.02.549.csv\"\n[1] \"../data-toloka/pool34/10111988_toloka_2023-07-21_13h28.34.745.csv\"\n[1] \"../data-toloka/pool34/120786_toloka_2023-07-21_15h34.34.535.csv\"\n[1] \"../data-toloka/pool34/13.01.1989_toloka_2023-07-21_18h04.48.759.csv\"\n[1] \"../data-toloka/pool34/14021986_toloka_2023-07-21_18h07.50.397.csv\"\n[1] \"../data-toloka/pool34/140800_toloka_2023-07-21_22h35.26.001.csv\"\n[1] \"../data-toloka/pool34/1511987_toloka_2023-07-21_22h11.58.878.csv\"\n[1] \"../data-toloka/pool34/151295_toloka_2023-07-21_14h20.24.718.csv\"\n[1] \"../data-toloka/pool34/16121987_toloka_2023-07-21_14h15.15.295.csv\"\n[1] \"../data-toloka/pool34/17.06.1988_toloka_2023-07-21_13h56.37.405.csv\"\n[1] \"../data-toloka/pool34/19091998_toloka_2023-07-21_13h59.25.510.csv\"\n[1] \"../data-toloka/pool34/19121989_toloka_2023-07-21_18h44.23.764.csv\"\n[1] \"../data-toloka/pool34/201085_toloka_2023-07-21_13h48.03.696.csv\"\n[1] \"../data-toloka/pool34/20121998_toloka_2023-07-21_18h21.19.291.csv\"\n[1] \"../data-toloka/pool34/210499_toloka_2023-07-21_13h37.56.499.csv\"\n[1] \"../data-toloka/pool34/210723_toloka_2023-07-21_18h40.05.195.csv\"\n[1] \"../data-toloka/pool34/211104_toloka_2023-07-21_17h06.29.907.csv\"\n[1] \"../data-toloka/pool34/230697_toloka_2023-07-21_23h40.02.926.csv\"\n[1] \"../data-toloka/pool34/230799_toloka_2023-07-21_21h03.46.166.csv\"\n[1] \"../data-toloka/pool34/24051985_toloka_2023-07-21_14h07.46.171.csv\"\n[1] \"../data-toloka/pool34/26042003_toloka_2023-07-21_20h24.07.570.csv\"\n[1] \"../data-toloka/pool34/27.11.1987_toloka_2023-07-21_18h20.10.164.csv\"\n[1] \"../data-toloka/pool34/28101993_toloka_2023-07-21_14h03.32.293.csv\"\n[1] \"../data-toloka/pool34/281184_toloka_2023-07-21_20h40.16.637.csv\"\n[1] \"../data-toloka/pool34/291295_toloka_2023-07-21_14h47.45.284.csv\"\n[1] \"../data-toloka/pool34/300305_toloka_2023-07-21_14h46.09.683.csv\"\n[1] \"../data-toloka/pool34/301099_toloka_2023-07-22_11h34.54.059.csv\"\n[1] \"../data-toloka/pool34/31081998_toloka_2023-07-21_13h39.43.342.csv\"\n\n\n\n\n\nset.seed(116)\ntibble(file = MR_data$file |&gt; unique(),\n       id = stringi::stri_rand_strings(MR_data$file |&gt; unique() |&gt; length(),\n                                       length = 10)) -&gt; tolokaIDS\n\n\n\n\n\nMR_data |&gt; \n  full_join(tolokaIDS) |&gt; \n  select(-file) |&gt; \n  group_by(task, level, id) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -&gt; MR_data_toloka_agg\n\nJoining with `by = join_by(file)`\n`summarise()` has grouped output by 'task', 'level'. You can override using the\n`.groups` argument.\n\nST_data |&gt; \n  full_join(tolokaIDS) |&gt; \n  select(-file) |&gt; \n  group_by(task, level, id) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -&gt; ST_data_toloka_agg\n\nJoining with `by = join_by(file)`\n`summarise()` has grouped output by 'task', 'level'. You can override using the\n`.groups` argument.\n\nMS_data |&gt; \n  full_join(tolokaIDS) |&gt; \n  select(-file) |&gt; \n  group_by(task, level, id) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(acc)) -&gt; MS_data_toloka_agg\n\nJoining with `by = join_by(file)`\n`summarise()` has grouped output by 'task', 'level'. You can override using the\n`.groups` argument.\n\nNASATLX_data |&gt; \n  full_join(tolokaIDS) |&gt; \n  select(-file) -&gt; NASATLX_data_toloka\n\nJoining with `by = join_by(file)`\n\n\n\nMR_data_toloka_agg |&gt; write_csv(\"mental_rotation_data_toloka.csv\")\nST_data_toloka_agg |&gt; write_csv(\"sternberg_data_toloka.csv\")\nMS_data_toloka_agg |&gt; write_csv(\"mental_span_data_toloka.csv\")\nNASATLX_data_toloka |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nrm(list = ls())"
  },
  {
    "objectID": "toloka-explore.html#load-first-data-toloka-aggregated-data",
    "href": "toloka-explore.html#load-first-data-toloka-aggregated-data",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "read_csv(\"MR_firstbanch_data_agg.csv\") -&gt; MR_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"MS_firstbanch_data_agg.csv\") -&gt; MS_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"ST_firstbanch_data_agg.csv\") -&gt; ST_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"NASATLX_firstbanch_data.csv\") -&gt; NASATLX_fb\n\nRows: 4212 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"mental_rotation_data_toloka.csv\") -&gt; MR_data_toloka\n\nRows: 171 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"mental_span_data_toloka.csv\") -&gt; MS_data_toloka\n\nRows: 171 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"sternberg_data_toloka.csv\") -&gt; ST_data_toloka\n\nRows: 171 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"nasa_tlx_data_toloka.csv\") -&gt; NASATLX_data_toloka\n\nRows: 3078 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nMR_fb_agg |&gt; \n  mutate(banch = \"manual\") |&gt; \n  bind_rows(\n    MR_data_toloka |&gt; \n      mutate(banch = \"toloka\")\n  ) -&gt; MR_full\n\nMS_fb_agg |&gt; \n  mutate(banch = \"manual\") |&gt; \n  bind_rows(\n    MS_data_toloka |&gt; \n      mutate(banch = \"toloka\")\n  ) -&gt; MS_full\n\nST_fb_agg |&gt; \n  mutate(banch = \"manual\") |&gt; \n  bind_rows(\n    ST_data_toloka |&gt; \n      mutate(banch = \"toloka\")\n  ) -&gt; ST_full\n\nNASATLX_fb |&gt; \n  mutate(banch = \"manual\") |&gt; \n  bind_rows(\n    NASATLX_data_toloka |&gt; \n      mutate(banch = \"toloka\")\n  ) -&gt; NASATLX_full\n\n\npd &lt;- position_dodge(.3)\n\n\nMR_full |&gt; \n  ggplot(aes(level, rt, color = banch)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\", position = pd) +\n  labs(title = \"MR rt\")\n\n\n\n\n\nMR_full |&gt; \n  ggplot(aes(level, acc, color = banch)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\", position = pd) +\n  labs(title = \"MR acc\")\n\n\n\n\n\nMS_full |&gt; \n  ggplot(aes(level, rt, color = banch)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\", position = pd) +\n  labs(title = \"MS rt\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_full |&gt; \n  ggplot(aes(level, acc, color = banch)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\", position = pd) +\n  labs(title = \"MS acc\")\n\n\n\n\n\nST_full |&gt; \n  ggplot(aes(level, rt, color = banch)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\", position = pd) +\n  labs(title = \"ST rt\")\n\n\n\n\n\nST_full |&gt; \n  ggplot(aes(level, acc, color = banch)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\", position = pd) +\n  labs(title = \"ST acc\")\n\n\n\n\n\nNASATLX_full |&gt; \n  ggplot(aes(scale, score, color = level, shape = banch)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\", position = pd) +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"NASA-TLX\")\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`)."
  },
  {
    "objectID": "analysis_toloka.html",
    "href": "analysis_toloka.html",
    "title": "NASA-TLX",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\ntheme_set(theme_bw())\nlibrary(lme4)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(lmerTest)\n\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(MuMIn)\n\n\n\n\n\nread_csv(\"../preproc-data/MR_firstbanch_data_agg.csv\") -> MR_pav_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/MS_firstbanch_data_agg.csv\") -> MS_pav_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/ST_firstbanch_data_agg.csv\") -> ST_pav_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/NASATLX_firstbanch_data.csv\") -> NASATLX_pav\n\nRows: 4212 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/SEQ_firstbanch_data.csv\") -> SEQ_data_pav\n\nRows: 702 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): level, task, id\ndbl (1): order\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/mental_rotation_data_toloka.csv\") -> MR_data_toloka\n\nRows: 171 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/mental_span_data_toloka.csv\") -> MS_data_toloka\n\nRows: 171 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/sternberg_data_toloka.csv\") -> ST_data_toloka\n\nRows: 171 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/nasa_tlx_data_toloka.csv\") -> NASATLX_data_toloka\n\nRows: 3078 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/sequence_data_toloka.csv\") -> SEQ_data_toloka\n\nRows: 513 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): level, task, id\ndbl (1): order\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"../preproc-data/weights_data_toloka.csv\") -> WEIGHTS_data_toloka\n\nRows: 882 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task_type, choice, id\ndbl (2): n, w\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nMR_data_toloka$id |> unique() |> length()\n\n[1] 57\n\nMR_pav_agg$id |> unique() |> length()\n\n[1] 78\n\nMS_data_toloka$id |> unique() |> length()\n\n[1] 57\n\nMS_pav_agg$id |> unique() |> length()\n\n[1] 78\n\nST_data_toloka$id |> unique() |> length()\n\n[1] 57\n\nST_pav_agg$id |> unique() |> length()\n\n[1] 78\n\nNASATLX_data_toloka$id |> unique() |> length()\n\n[1] 57\n\nNASATLX_pav$id |> unique() |> length()\n\n[1] 78\n\n\n\nMR_pav_agg |> \n  mutate(banch = \"manual\") |> \n  bind_rows(\n    MR_data_toloka |> \n      mutate(banch = \"toloka\")\n  ) %>% \n  mutate(level = factor(level, ordered = TRUE,\n                        levels = c(\"easy\", \"medium\", \"hard\"))) -> MR_full\n\nMS_pav_agg |> \n  mutate(banch = \"manual\") |> \n  bind_rows(\n    MS_data_toloka |> \n      mutate(banch = \"toloka\")\n  ) %>% \n  mutate(level = factor(level, ordered = TRUE,\n                        levels = c(\"easy\", \"medium\", \"hard\"))) -> MS_full\n\nST_pav_agg |> \n  mutate(banch = \"manual\") |> \n  bind_rows(\n    ST_data_toloka |> \n      mutate(banch = \"toloka\")\n  ) %>% \n  mutate(level = factor(level, ordered = TRUE,\n                        levels = c(\"easy\", \"medium\", \"hard\"))) -> ST_full\n\nNASATLX_pav |> \n  mutate(banch = \"manual\") |> \n  bind_rows(\n    NASATLX_data_toloka |> \n      mutate(banch = \"toloka\")\n  ) %>% \n  mutate(level = factor(level, ordered = TRUE,\n                        levels = c(\"easy\", \"medium\", \"hard\"))) -> NASATLX_full\n\nSEQ_data_pav %>% \n  mutate(banch = \"manual\") %>% \n  bind_rows(\n    SEQ_data_toloka %>% \n    mutate(banch = \"toloka\")\n  ) %>% \n  mutate(level = factor(level, ordered = TRUE,\n                        levels = c(\"easy\", \"medium\", \"hard\"))) -> SEQ_full\n\n\n\n\n\npd <- position_dodge(.3)\nlevel_colors <- c(\"#4bd752\", \"#d7984b\", \"#d7524b\")\ntask_colors <- c(\"red4\", \"green4\", \"blue4\")\n\n\n\n\nMR_full |> \n  ggplot() +\n  stat_summary(aes(level, rt, color = banch),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd) +\n  stat_summary(aes(level, rt),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd, color = \"gray30\") +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Mental Rotation\",\n       subtitle = \"Reaction time\",\n       x = \"Difficulty level\",\n       y = \"Reaction time (s)\")\n\n\n\n\n\nMR_full |> \n  ggplot() +\n  stat_summary(aes(level, acc, color = banch),\n               fun.data = mean_cl_boot, geom = \"pointrange\",\n               position = pd) +\n  stat_summary(aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd, color = \"gray30\") +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Mental Rotation\",\n       subtitle = \"Accuracy\",\n       x = \"Difficulty level\",\n       y = \"Accuracy\")\n\n\n\n\n\n\n\n\nMS_full |> \n  ggplot() +\n  stat_summary(aes(level, rt, color = banch),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd) +\n  stat_summary(aes(level, rt),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd, color = \"gray30\") +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Memory Span\",\n       subtitle = \"Reaction time\",\n       x = \"Difficulty level\",\n       y = \"Reaction time (s)\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\nRemoved 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_full |> \n  ggplot() +\n  stat_summary(aes(level, acc, color = banch),\n               fun.data = mean_cl_boot, geom = \"pointrange\",\n               position = pd) +\n  stat_summary(aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd, color = \"gray30\") +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Memory Span\",\n       subtitle = \"Accuracy\",\n       x = \"Difficulty level\",\n       y = \"Accuracy\")\n\n\n\n\n\n\n\n\nST_full |> \n  ggplot() +\n  stat_summary(aes(level, rt, color = banch),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd) +\n  stat_summary(aes(level, rt),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd, color = \"gray30\") +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Sternberg Task\",\n       subtitle = \"Reaction time\",\n       x = \"Difficulty level\",\n       y = \"Reaction time (s)\")\n\n\n\n\n\nST_full |> \n  ggplot() +\n  stat_summary(aes(level, acc, color = banch),\n               fun.data = mean_cl_boot, geom = \"pointrange\",\n               position = pd) +\n  stat_summary(aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd, color = \"gray30\") +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Sternberg Task\",\n       subtitle = \"Accuracy\",\n       x = \"Difficulty level\",\n       y = \"Accuracy\")\n\n\n\n\n\n\n\n\nNASATLX_full |> \n  ggplot() +\n  stat_summary(aes(scale, score, color = level, shape = banch),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd) +\n  stat_summary(aes(scale, score, color = level),\n               fun.data = mean_cl_boot, geom = \"pointrange\", \n               position = pd, shape = 15) +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  scale_color_manual(values = level_colors) +\n  labs(title = \"NASA-TLX\",\n       x = \"Subscale\",\n       y = \"Score (raw)\")\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`).\nRemoved 17 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\n\n\n\n\nMR_full %>% \n  bind_rows(MS_full, ST_full) -> behave_full\n\n\nr2tof2 <- function(r2) r2 / (1 - r2)\n\n\n\n\nmix_MR_rt <- lmer(rt ~ level + (1|id), \n               MR_full,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_MR_rt)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: rt ~ level + (1 | id)\n   Data: MR_full\n\nREML criterion at convergence: 2485.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.9059 -0.3694 -0.0741  0.2847  7.4686 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 27.61    5.255   \n Residual             14.50    3.808   \nNumber of obs: 405, groups:  id, 135\n\nFixed effects:\n            Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)   5.8323     0.5585 216.1411  10.443  < 2e-16 ***\nlevelmedium   1.7789     0.4635 268.0000   3.838 0.000155 ***\nlevelhard     4.0789     0.4635 268.0000   8.801  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) lvlmdm\nlevelmedium -0.415       \nlevelhard   -0.415  0.500\n\nanova(mix_MR_rt)\n\nType III Analysis of Variance Table with Satterthwaite's method\n      Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nlevel 1129.2  564.58     2   268  38.941 1.425e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_MR_rt)\n\nWarning: 'r.squaredGLMM' now calculates a revised statistic. See the help page.\n\n\n            R2m       R2c\n[1,] 0.06224137 0.6771338\n\nr2tof2(r.squaredGLMM(mix_MR_rt)[1])\n\n[1] 0.06637248\n\n\n\nmix_MR_acc <- lmer(acc ~ level + (1|id), \n               MR_full,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_MR_acc)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: acc ~ level + (1 | id)\n   Data: MR_full\n\nREML criterion at convergence: -288\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.5588 -0.5281  0.1090  0.5608  2.4378 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 0.02485  0.1576  \n Residual             0.01528  0.1236  \nNumber of obs: 405, groups:  id, 135\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)   0.79121    0.01724 227.49422  45.891  < 2e-16 ***\nlevelmedium  -0.08417    0.01504 268.00000  -5.595 5.45e-08 ***\nlevelhard    -0.12197    0.01504 268.00000  -8.107 1.86e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) lvlmdm\nlevelmedium -0.436       \nlevelhard   -0.436  0.500\n\nanova(mix_MR_acc)\n\nType III Analysis of Variance Table with Satterthwaite's method\n      Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nlevel 1.0525 0.52625     2   268  34.447 4.851e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_MR_acc)\n\n            R2m       R2c\n[1,] 0.06096289 0.6425134\n\nr2tof2(r.squaredGLMM(mix_MR_acc)[1])\n\n[1] 0.06492063\n\n\n\n\n\n\nmix_MS_rt <- lmer(rt ~ level + (1|id), \n               MS_full,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_MS_rt)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: rt ~ level + (1 | id)\n   Data: MS_full\n\nREML criterion at convergence: 2263.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.2010 -0.4372 -0.0651  0.3614  7.3893 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 42.57    6.525   \n Residual             31.01    5.569   \nNumber of obs: 333, groups:  id, 111\n\nFixed effects:\n            Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)  11.5608     0.8142 197.6781   14.20   <2e-16 ***\nlevelmedium   8.9879     0.7475 220.0000   12.02   <2e-16 ***\nlevelhard    12.6773     0.7475 220.0000   16.96   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) lvlmdm\nlevelmedium -0.459       \nlevelhard   -0.459  0.500\n\nanova(mix_MS_rt)\n\nType III Analysis of Variance Table with Satterthwaite's method\n      Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nlevel   9439  4719.5     2   220  152.17 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_MS_rt)\n\n           R2m       R2c\n[1,] 0.2786894 0.6959852\n\nr2tof2(r.squaredGLMM(mix_MS_rt)[1])\n\n[1] 0.3863652\n\n\n\nmix_MS_acc <- lmer(acc ~ level + (1|id), \n               MS_full,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_MS_acc)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: acc ~ level + (1 | id)\n   Data: MS_full\n\nREML criterion at convergence: -448.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-5.1847 -0.5063  0.0315  0.4828  3.3933 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 0.01493  0.1222  \n Residual             0.01067  0.1033  \nNumber of obs: 405, groups:  id, 135\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)   0.95163    0.01377 239.30532  69.107  < 2e-16 ***\nlevelmedium  -0.06638    0.01258 268.00000  -5.279 2.69e-07 ***\nlevelhard    -0.27058    0.01258 268.00000 -21.517  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) lvlmdm\nlevelmedium -0.457       \nlevelhard   -0.457  0.500\n\nanova(mix_MS_acc)\n\nType III Analysis of Variance Table with Satterthwaite's method\n      Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nlevel 5.3692  2.6846     2   268  251.51 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_MS_acc)\n\n           R2m       R2c\n[1,] 0.3417443 0.7255312\n\nr2tof2(r.squaredGLMM(mix_MS_acc)[1])\n\n[1] 0.5191665\n\n\n\n\n\n\nmix_ST_rt <- lmer(rt ~ level + (1|id), \n               ST_full,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ST_rt)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: rt ~ level + (1 | id)\n   Data: ST_full\n\nREML criterion at convergence: 628\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.5894 -0.4558 -0.0900  0.2796  5.4778 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 0.1992   0.4463  \n Residual             0.1604   0.4005  \nNumber of obs: 405, groups:  id, 135\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)   1.13580    0.05161 249.13888  22.007  < 2e-16 ***\nlevelmedium   0.26432    0.04875 268.00000   5.422 1.32e-07 ***\nlevelhard     0.41349    0.04875 268.00000   8.482 1.52e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) lvlmdm\nlevelmedium -0.472       \nlevelhard   -0.472  0.500\n\nanova(mix_ST_rt)\n\nType III Analysis of Variance Table with Satterthwaite's method\n      Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nlevel 11.839  5.9196     2   268    36.9 6.992e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ST_rt)\n\n            R2m       R2c\n[1,] 0.07535396 0.5874935\n\nr2tof2(r.squaredGLMM(mix_ST_rt)[1])\n\n[1] 0.08149492\n\n\n\nmix_ST_acc <- lmer(acc ~ level + (1|id), \n               ST_full,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ST_acc)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: acc ~ level + (1 | id)\n   Data: ST_full\n\nREML criterion at convergence: -637.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.2588 -0.4977  0.0861  0.5317  2.3553 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 0.003150 0.05612 \n Residual             0.009112 0.09545 \nNumber of obs: 405, groups:  id, 135\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)   0.97483    0.00953 355.12831  102.29   <2e-16 ***\nlevelmedium  -0.13166    0.01162 268.00000  -11.33   <2e-16 ***\nlevelhard    -0.26709    0.01162 268.00000  -22.99   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) lvlmdm\nlevelmedium -0.610       \nlevelhard   -0.610  0.500\n\nanova(mix_ST_acc)\n\nType III Analysis of Variance Table with Satterthwaite's method\n      Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nlevel 4.8154  2.4077     2   268  264.24 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ST_acc)\n\n           R2m       R2c\n[1,] 0.4929231 0.6231862\n\nr2tof2(r.squaredGLMM(mix_ST_acc)[1])\n\n[1] 0.9720873\n\n\n\n\n\n\n\nNASATLX_full |> \n  pivot_wider(values_from = score, names_from = scale) %>% \n  mutate(OW = ME + PH + TI + PE + EF + FR) -> NASATLX_wide\n\n\n\n\nmix_ME <- lmer(ME ~ task * level + (1|id), \n               NASATLX_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ME)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: ME ~ task * level + (1 | id)\n   Data: NASATLX_wide\n\nREML criterion at convergence: 6837.3\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1565 -0.5720  0.0385  0.6549  3.2133 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept)  9.831   3.135   \n Residual             13.090   3.618   \nNumber of obs: 1214, groups:  id, 135\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)           9.7599     0.4120  487.8181  23.687  < 2e-16 ***\ntaskMS               -3.0862     0.4404 1071.0113  -7.008 4.26e-12 ***\ntaskST               -3.0706     0.4404 1071.0113  -6.973 5.43e-12 ***\nlevelmedium           2.0226     0.4404 1071.0113   4.593 4.89e-06 ***\nlevelhard             3.2164     0.4404 1071.0113   7.304 5.44e-13 ***\ntaskMS:levelmedium    4.4175     0.6228 1071.0113   7.093 2.38e-12 ***\ntaskST:levelmedium    3.2393     0.6228 1071.0113   5.201 2.37e-07 ***\ntaskMS:levelhard      6.1833     0.6228 1071.0113   9.929  < 2e-16 ***\ntaskST:levelhard      4.3606     0.6234 1071.0813   6.995 4.68e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.534                                                             \ntaskST      -0.534  0.500                                                      \nlevelmedium -0.534  0.500  0.500                                               \nlevelhard   -0.534  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.378 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.378 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.378 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.377 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_ME)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF DenDF  F value    Pr(>F)    \ntask        196.6    98.3     2  1071   7.5103 0.0005767 ***\nlevel      9559.7  4779.9     2  1071 365.1631 < 2.2e-16 ***\ntask:level 1451.2   362.8     4  1071  27.7167 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ME)\n\n           R2m      R2c\n[1,] 0.2873454 0.593004\n\nr2tof2(r.squaredGLMM(mix_ME)[1])\n\n[1] 0.4032043\n\n\n\n\n\n\nmix_PH <- lmer(PH ~ task * level + (1|id), \n               NASATLX_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PH)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PH ~ task * level + (1 | id)\n   Data: NASATLX_wide\n\nREML criterion at convergence: 6509.1\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.9300 -0.5025 -0.0351  0.4121  4.6807 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 21.510   4.638   \n Residual              9.141   3.023   \nNumber of obs: 1207, groups:  id, 135\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)           4.5380     0.4771  245.1680   9.512  < 2e-16 ***\ntaskMS               -0.5795     0.3711 1064.2832  -1.562  0.11870    \ntaskST               -1.0887     0.3688 1064.1035  -2.952  0.00322 ** \nlevelmedium           0.3822     0.3688 1064.1035   1.036  0.30022    \nlevelhard             0.6823     0.3688 1064.1035   1.850  0.06455 .  \ntaskMS:levelmedium    2.3160     0.5232 1064.1951   4.427 1.06e-05 ***\ntaskST:levelmedium    1.4169     0.5215 1064.1100   2.717  0.00670 ** \ntaskMS:levelhard      3.2897     0.5236 1064.1626   6.283 4.84e-10 ***\ntaskST:levelhard      2.1466     0.5210 1064.0787   4.120 4.08e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.386                                                             \ntaskST      -0.388  0.499                                                      \nlevelmedium -0.388  0.499  0.502                                               \nlevelhard   -0.388  0.499  0.502  0.502                                        \ntskMS:lvlmd  0.274 -0.709 -0.354 -0.705 -0.354                                 \ntskST:lvlmd  0.274 -0.352 -0.707 -0.707 -0.355  0.498                          \ntskMS:lvlhr  0.273 -0.708 -0.354 -0.354 -0.704  0.503      0.250               \ntskST:lvlhr  0.275 -0.353 -0.708 -0.355 -0.708  0.251      0.501      0.499    \n\nanova(mix_PH)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask        411.68  205.84     2 1064.2  22.518 2.641e-10 ***\nlevel      1287.77  643.88     2 1064.1  70.438 < 2.2e-16 ***\ntask:level  392.43   98.11     4 1064.2  10.732 1.571e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PH)\n\n            R2m       R2c\n[1,] 0.05353917 0.7177322\n\nr2tof2(r.squaredGLMM(mix_PH)[1])\n\n[1] 0.05656777\n\n\n\n\n\n\nmix_TI <- lmer(TI ~ task * level + (1|id), \n               NASATLX_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_TI)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: TI ~ task * level + (1 | id)\n   Data: NASATLX_wide\n\nREML criterion at convergence: 7038.5\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1564 -0.6374 -0.0239  0.6524  2.9637 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept)  7.879   2.807   \n Residual             16.104   4.013   \nNumber of obs: 1214, groups:  id, 135\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)           3.8651     0.4215  646.9501   9.170  < 2e-16 ***\ntaskMS                1.3077     0.4884 1071.0195   2.677  0.00754 ** \ntaskST                2.8786     0.4884 1071.0195   5.893 5.06e-09 ***\nlevelmedium           0.2707     0.4884 1071.0195   0.554  0.57948    \nlevelhard             0.8119     0.4884 1071.0195   1.662  0.09677 .  \ntaskMS:levelmedium    6.2440     0.6908 1071.0195   9.039  < 2e-16 ***\ntaskST:levelmedium    6.7321     0.6915 1071.1187   9.736  < 2e-16 ***\ntaskMS:levelhard      9.9059     0.6908 1071.0195  14.341  < 2e-16 ***\ntaskST:levelhard      9.1214     0.6908 1071.0195  13.205  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.579                                                             \ntaskST      -0.579  0.500                                                      \nlevelmedium -0.579  0.500  0.500                                               \nlevelhard   -0.579  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.410 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.409 -0.353 -0.706 -0.706 -0.353  0.499                          \ntskMS:lvlhr  0.410 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.410 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_TI)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask       15320.7  7660.4     2 1071.1 475.692 < 2.2e-16 ***\nlevel      10644.5  5322.3     2 1071.1 330.502 < 2.2e-16 ***\ntask:level  4307.9  1077.0     4 1071.1  66.877 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_TI)\n\n           R2m      R2c\n[1,] 0.5098846 0.670906\n\nr2tof2(r.squaredGLMM(mix_TI)[1])\n\n[1] 1.040336\n\n\n\n\n\n\nmix_PE <- lmer(PE ~ task * level + (1|id), \n               NASATLX_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PE)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PE ~ task * level + (1 | id)\n   Data: NASATLX_wide\n\nREML criterion at convergence: 6802.4\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3223 -0.6027  0.0229  0.6431  2.6658 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept)  5.818   2.412   \n Residual             13.379   3.658   \nNumber of obs: 1214, groups:  id, 135\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)          13.0930     0.3771  694.8859  34.721  < 2e-16 ***\ntaskMS                5.0861     0.4452 1071.0178  11.424  < 2e-16 ***\ntaskST                4.7701     0.4452 1071.0178  10.714  < 2e-16 ***\nlevelmedium          -1.3761     0.4452 1071.0178  -3.091  0.00205 ** \nlevelhard            -2.7085     0.4452 1071.0178  -6.084 1.63e-09 ***\ntaskMS:levelmedium   -3.5954     0.6296 1071.0178  -5.711 1.46e-08 ***\ntaskST:levelmedium   -5.5225     0.6296 1071.0178  -8.771  < 2e-16 ***\ntaskMS:levelhard     -7.5232     0.6296 1071.0178 -11.949  < 2e-16 ***\ntaskST:levelhard     -8.4165     0.6302 1071.1263 -13.354  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.590                                                             \ntaskST      -0.590  0.500                                                      \nlevelmedium -0.590  0.500  0.500                                               \nlevelhard   -0.590  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.417 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.417 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.417 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.417 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_PE)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask          472   236.0     2 1071.1  17.639 2.904e-08 ***\nlevel       13058  6529.0     2 1071.1 488.020 < 2.2e-16 ***\ntask:level   3002   750.5     4 1071.1  56.096 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PE)\n\n           R2m       R2c\n[1,] 0.4150193 0.5923151\n\nr2tof2(r.squaredGLMM(mix_PE)[1])\n\n[1] 0.709458\n\n\n\n\n\n\nmix_EF <- lmer(EF ~ task * level + (1|id), \n               NASATLX_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_EF)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: EF ~ task * level + (1 | id)\n   Data: NASATLX_wide\n\nREML criterion at convergence: 6807.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.6101 -0.5801  0.0376  0.6091  3.7341 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 11.99    3.463   \n Residual             12.53    3.540   \nNumber of obs: 1213, groups:  id, 135\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)           9.3316     0.4262  413.8812  21.895  < 2e-16 ***\ntaskMS               -2.2467     0.4309 1070.0220  -5.214 2.21e-07 ***\ntaskST               -1.5653     0.4309 1070.0220  -3.633 0.000293 ***\nlevelmedium           1.5429     0.4309 1070.0220   3.581 0.000358 ***\nlevelhard             2.8825     0.4309 1070.0220   6.690 3.59e-11 ***\ntaskMS:levelmedium    4.1959     0.6100 1070.0788   6.879 1.02e-11 ***\ntaskST:levelmedium    2.8964     0.6100 1070.0788   4.748 2.33e-06 ***\ntaskMS:levelhard      5.7334     0.6093 1070.0220   9.409  < 2e-16 ***\ntaskST:levelhard      2.8002     0.6093 1070.0220   4.596 4.83e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.505                                                             \ntaskST      -0.505  0.500                                                      \nlevelmedium -0.505  0.500  0.500                                               \nlevelhard   -0.505  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.357 -0.706 -0.353 -0.706 -0.353                                 \ntskST:lvlmd  0.357 -0.353 -0.706 -0.706 -0.353  0.499                          \ntskMS:lvlhr  0.357 -0.707 -0.354 -0.354 -0.707  0.499      0.250               \ntskST:lvlhr  0.357 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_EF)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(>F)    \ntask        239.0   119.5     2 1070.1   9.5374 7.843e-05 ***\nlevel      6934.7  3467.4     2 1070.1 276.7110 < 2.2e-16 ***\ntask:level 1230.4   307.6     4 1070.1  24.5475 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_EF)\n\n        R2m       R2c\n[1,] 0.2204 0.6016405\n\nr2tof2(r.squaredGLMM(mix_EF)[1])\n\n[1] 0.2827091\n\n\n\n\n\n\nmix_FR <- lmer(FR ~ task * level + (1|id), \n               NASATLX_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_FR)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: FR ~ task * level + (1 | id)\n   Data: NASATLX_wide\n\nREML criterion at convergence: 7171\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.90404 -0.67523 -0.00326  0.63548  2.98506 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 13.87    3.725   \n Residual             17.42    4.174   \nNumber of obs: 1211, groups:  id, 135\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)           7.5426     0.4815  467.8386  15.666  < 2e-16 ***\ntaskMS               -1.8789     0.5101 1068.1329  -3.683 0.000242 ***\ntaskST               -2.2909     0.5080 1067.8327  -4.510 7.21e-06 ***\nlevelmedium           1.2162     0.5080 1067.8327   2.394 0.016834 *  \nlevelhard             2.2656     0.5090 1067.9654   4.451 9.45e-06 ***\ntaskMS:levelmedium    3.3498     0.7199 1067.9834   4.653 3.68e-06 ***\ntaskST:levelmedium    4.1315     0.7184 1067.8327   5.751 1.16e-08 ***\ntaskMS:levelhard      5.4276     0.7206 1068.0466   7.532 1.06e-13 ***\ntaskST:levelhard      6.1783     0.7199 1067.9839   8.582  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.525                                                             \ntaskST      -0.528  0.498                                                      \nlevelmedium -0.528  0.498  0.500                                               \nlevelhard   -0.526  0.497  0.499  0.499                                        \ntskMS:lvlmd  0.372 -0.709 -0.353 -0.706 -0.352                                 \ntskST:lvlmd  0.373 -0.352 -0.707 -0.707 -0.353  0.499                          \ntskMS:lvlhr  0.372 -0.708 -0.352 -0.352 -0.706  0.502      0.249               \ntskST:lvlhr  0.372 -0.351 -0.706 -0.353 -0.707  0.249      0.499      0.499    \n\nanova(mix_FR)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(>F)    \ntask        325.5   162.7     2 1067.9   9.3422 9.502e-05 ***\nlevel      7691.3  3845.6     2 1067.9 220.7778 < 2.2e-16 ***\ntask:level 1578.3   394.6     4 1068.0  22.6523 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_FR)\n\n           R2m       R2c\n[1,] 0.2021756 0.5559104\n\nr2tof2(r.squaredGLMM(mix_FR)[1])\n\n[1] 0.2534086\n\n\n\n\n\n\nmix_OW <- lmer(OW ~ task * level + (1|id), \n               NASATLX_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_OW)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: OW ~ task * level + (1 | id)\n   Data: NASATLX_wide\n\nREML criterion at convergence: 9716.1\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.2363 -0.5716  0.0339  0.5956  4.0128 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 220.6    14.85   \n Residual             148.1    12.17   \nNumber of obs: 1198, groups:  id, 135\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)          48.1245     1.6553  313.1992  29.074  < 2e-16 ***\ntaskMS               -1.3281     1.4994 1055.4079  -0.886  0.37597    \ntaskST               -0.3611     1.4842 1055.1355  -0.243  0.80780    \nlevelmedium           4.0643     1.4842 1055.1355   2.738  0.00628 ** \nlevelhard             7.1574     1.4873 1055.2118   4.812 1.71e-06 ***\ntaskMS:levelmedium   16.9585     2.1120 1055.3178   8.030 2.60e-15 ***\ntaskST:levelmedium   12.8811     2.1035 1055.2193   6.124 1.29e-09 ***\ntaskMS:levelhard     22.9287     2.1137 1055.2636  10.848  < 2e-16 ***\ntaskST:levelhard     16.0621     2.1057 1055.2596   7.628 5.31e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.445                                                             \ntaskST      -0.450  0.497                                                      \nlevelmedium -0.450  0.497  0.502                                               \nlevelhard   -0.449  0.495  0.501  0.501                                        \ntskMS:lvlmd  0.316 -0.710 -0.353 -0.702 -0.352                                 \ntskST:lvlmd  0.318 -0.350 -0.706 -0.706 -0.354  0.496                          \ntskMS:lvlhr  0.316 -0.709 -0.352 -0.352 -0.703  0.503      0.248               \ntskST:lvlhr  0.317 -0.350 -0.705 -0.354 -0.706  0.248      0.497      0.497    \n\nanova(mix_OW)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask        31550   15775     2 1055.3 106.537 < 2.2e-16 ***\nlevel       84984   42492     2 1055.5 286.966 < 2.2e-16 ***\ntask:level  20005    5001     4 1055.3  33.775 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_OW)\n\n           R2m       R2c\n[1,] 0.2362516 0.6932201\n\nr2tof2(r.squaredGLMM(mix_OW)[1])\n\n[1] 0.3093318\n\n\n\n\n\n\nNASATLX_wide |> \n  pivot_longer(cols = c(\"ME\", \"PH\", \"EF\", \"PE\", \"TI\", \"FR\", \"OW\"),\n               names_to = \"scale\", values_to = \"raw_score\") %>% \n  filter(scale != \"OW\") %>% \n  ggplot() + \n  stat_summary(aes(level, raw_score),\n               fun.data = mean_cl_boot, geom = \"errorbar\", \n               width = .5,\n               position = pd) +\n  stat_summary(aes(level, raw_score),\n               fun = mean, geom = \"point\",\n               size = 2,\n               position = pd) +\n  facet_grid(task ~ scale, scales = \"free_y\") +\n  theme(legend.position = \"bottom\") +\n  scale_color_manual(values = level_colors) +\n  labs(title = \"NASA-TLX\",\n       x = \"Difficulty Level\",\n       y = \"Score (raw)\")\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`).\nRemoved 17 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nNASATLX_wide |> \n  pivot_longer(cols = c(\"ME\", \"PH\", \"EF\", \"PE\", \"TI\", \"FR\", \"OW\"),\n               names_to = \"scale\", values_to = \"raw_score\") %>% \n  filter(scale == \"OW\") %>% \n  ggplot() + \n  stat_summary(aes(level, raw_score),\n               fun.data = mean_cl_boot, geom = \"errorbar\", \n               width = .3,\n               position = pd) +\n  stat_summary(aes(level, raw_score),\n               fun = mean, geom = \"point\",\n               size = 2,\n               position = pd) +\n  facet_grid(task ~ scale, scales = \"free_y\") +\n  theme(legend.position = \"bottom\") +\n  scale_color_manual(values = level_colors) +\n  labs(title = \"NASA-TLX\",\n       x = \"Difficulty Level\",\n       y = \"Score (raw)\")\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`).\nRemoved 17 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\n\n\n\n\nWEIGHTS_data_toloka %>% \n  rename(\"scale\" = choice,\n         \"task\" = task_type) %>% \n  mutate(task = recode(task,\n                       \"mental_rotation\" = \"MR\",\n                       \"sternberg\" = \"ST\",\n                       \"mental_span\" = \"MS\")) %>% \n  full_join(NASATLX_data_toloka,\n            by = join_by(id, task, scale)) %>% \n  mutate(score_w = w * score) %>% \n  select(-c(\"n\", \"w\", \"score\")) %>% \n  pivot_wider(values_from = score_w, names_from = scale) %>% \n  mutate(OW = ME + PH + TI + PE + EF + FR) -> NASATLX_weighted_toloka\n\n\n\n\nmix_ME_w <- lmer(ME ~ task * level + (1|id), \n               NASATLX_weighted_toloka,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ME_w)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: ME ~ task * level + (1 | id)\n   Data: NASATLX_weighted_toloka\n\nREML criterion at convergence: 1780.4\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.77675 -0.68166  0.00878  0.62037  2.69962 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 1.338    1.157   \n Residual             1.522    1.234   \nNumber of obs: 507, groups:  id, 57\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)          2.7270     0.2240 182.8255  12.175  < 2e-16 ***\ntaskMS              -0.7096     0.2322 442.3831  -3.055 0.002384 ** \ntaskST              -1.1301     0.2322 442.3831  -4.866 1.59e-06 ***\nlevelhard            0.5552     0.2311 442.1868   2.403 0.016675 *  \nlevelmedium          0.4523     0.2311 442.1868   1.958 0.050899 .  \ntaskMS:levelhard     1.6509     0.3282 442.1868   5.030 7.16e-07 ***\ntaskST:levelhard     0.9119     0.3282 442.1868   2.778 0.005698 ** \ntaskMS:levelmedium   1.2343     0.3282 442.1868   3.761 0.000192 ***\ntaskST:levelmedium   0.6034     0.3282 442.1868   1.838 0.066678 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlhrd lvlmdm tskMS:lvlh tskST:lvlh tskMS:lvlm\ntaskMS      -0.513                                                             \ntaskST      -0.513  0.495                                                      \nlevelhard   -0.516  0.497  0.497                                               \nlevelmedium -0.516  0.497  0.497  0.500                                        \ntskMS:lvlhr  0.363 -0.707 -0.350 -0.704 -0.352                                 \ntskST:lvlhr  0.363 -0.350 -0.707 -0.704 -0.352  0.496                          \ntskMS:lvlmd  0.363 -0.707 -0.350 -0.352 -0.704  0.500      0.248               \ntskST:lvlmd  0.363 -0.350 -0.707 -0.352 -0.704  0.248      0.500      0.496    \n\nanova(mix_ME_w)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask        68.074  34.037     2 442.97  22.369 5.561e-10 ***\nlevel      182.475  91.238     2 442.19  59.961 < 2.2e-16 ***\ntask:level  41.881  10.470     4 442.19   6.881 2.221e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ME_w)\n\n           R2m       R2c\n[1,] 0.1677441 0.5571581\n\nr2tof2(r.squaredGLMM(mix_ME_w)[1])\n\n[1] 0.2015536\n\n\n\n\n\n\nmix_PH_w <- lmer(PH ~ task * level + (1|id), \n               NASATLX_weighted_toloka,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PH_w)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PH ~ task * level + (1 | id)\n   Data: NASATLX_weighted_toloka\n\nREML criterion at convergence: 633.4\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.8210 -0.5039 -0.1363  0.4671  5.1536 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 0.5164   0.7186  \n Residual             0.5295   0.7277  \nNumber of obs: 249, groups:  id, 42\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)          0.81552    0.17243 133.94243   4.729 5.63e-06 ***\ntaskMS              -0.15721    0.20037 210.00872  -0.785 0.433581    \ntaskST               0.00734    0.20304 210.47932   0.036 0.971197    \nlevelhard            0.11450    0.18191 199.71989   0.629 0.529779    \nlevelmedium          0.13554    0.18191 199.71989   0.745 0.457098    \ntaskMS:levelhard     0.94006    0.27170 199.71989   3.460 0.000661 ***\ntaskST:levelhard     0.36747    0.27468 199.71989   1.338 0.182479    \ntaskMS:levelmedium   0.69190    0.27170 199.71989   2.547 0.011634 *  \ntaskST:levelmedium   0.18752    0.27468 199.71989   0.683 0.495608    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlhrd lvlmdm tskMS:lvlh tskST:lvlh tskMS:lvlm\ntaskMS      -0.513                                                             \ntaskST      -0.508  0.456                                                      \nlevelhard   -0.527  0.454  0.448                                               \nlevelmedium -0.527  0.454  0.448  0.500                                        \ntskMS:lvlhr  0.353 -0.678 -0.300 -0.670 -0.335                                 \ntskST:lvlhr  0.349 -0.301 -0.676 -0.662 -0.331  0.443                          \ntskMS:lvlmd  0.353 -0.678 -0.300 -0.335 -0.670  0.500      0.222               \ntskST:lvlmd  0.349 -0.301 -0.676 -0.331 -0.662  0.222      0.500      0.443    \n\nanova(mix_PH_w)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask        5.0983  2.5492     2 222.06  4.8145  0.008978 ** \nlevel      13.7119  6.8560     2 199.72 12.9484 5.157e-06 ***\ntask:level  6.9411  1.7353     4 199.72  3.2773  0.012510 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PH_w)\n\n           R2m      R2c\n[1,] 0.0905728 0.539597\n\nr2tof2(r.squaredGLMM(mix_PH_w)[1])\n\n[1] 0.09959324\n\n\n\n\n\n\nmix_TI_w <- lmer(TI ~ task * level + (1|id), \n               NASATLX_weighted_toloka,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_TI_w)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: TI ~ task * level + (1 | id)\n   Data: NASATLX_weighted_toloka\n\nREML criterion at convergence: 1657.7\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.71796 -0.63611 -0.03136  0.69852  2.44081 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 1.019    1.010   \n Residual             1.832    1.353   \nNumber of obs: 453, groups:  id, 57\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)          0.98344    0.25847 313.05132   3.805 0.000171 ***\ntaskMS               0.69454    0.28472 392.89211   2.439 0.015155 *  \ntaskST               1.22888    0.28685 392.81297   4.284 2.31e-05 ***\nlevelhard            0.08683    0.30650 387.35425   0.283 0.777093    \nlevelmedium         -0.02683    0.30650 387.35425  -0.088 0.930283    \ntaskMS:levelhard     2.34732    0.39777 387.35425   5.901 7.88e-09 ***\ntaskST:levelhard     2.45442    0.40070 387.35425   6.125 2.22e-09 ***\ntaskMS:levelmedium   1.51408    0.39777 387.35425   3.806 0.000164 ***\ntaskST:levelmedium   2.09822    0.40070 387.35425   5.236 2.69e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlhrd lvlmdm tskMS:lvlh tskST:lvlh tskMS:lvlm\ntaskMS      -0.665                                                             \ntaskST      -0.659  0.598                                                      \nlevelhard   -0.593  0.538  0.534                                               \nlevelmedium -0.593  0.538  0.534  0.500                                        \ntskMS:lvlhr  0.457 -0.699 -0.412 -0.771 -0.385                                 \ntskST:lvlhr  0.454 -0.412 -0.698 -0.765 -0.382  0.589                          \ntskMS:lvlmd  0.457 -0.699 -0.412 -0.385 -0.771  0.500      0.295               \ntskST:lvlmd  0.454 -0.412 -0.698 -0.382 -0.765  0.295      0.500      0.589    \n\nanova(mix_TI_w)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask       490.16 245.080     2 397.61 133.783 < 2.2e-16 ***\nlevel      219.67 109.837     2 387.35  59.958 < 2.2e-16 ***\ntask:level  95.68  23.921     4 387.35  13.058 5.506e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_TI_w)\n\n           R2m       R2c\n[1,] 0.4123637 0.6224291\n\nr2tof2(r.squaredGLMM(mix_TI_w)[1])\n\n[1] 0.7017329\n\n\n\n\n\n\nmix_PE_w <- lmer(PE ~ task * level + (1|id), \n               NASATLX_weighted_toloka,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PE_w)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PE ~ task * level + (1 | id)\n   Data: NASATLX_weighted_toloka\n\nREML criterion at convergence: 1474.3\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.7387 -0.5949 -0.0830  0.5879  3.2781 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 1.287    1.135   \n Residual             1.311    1.145   \nNumber of obs: 435, groups:  id, 55\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)          2.6137     0.2199 154.3731  11.884  < 2e-16 ***\ntaskMS               0.1598     0.2329 372.5754   0.686 0.492932    \ntaskST               0.4170     0.2329 372.5754   1.791 0.074161 .  \nlevelhard           -0.3556     0.2224 368.9577  -1.599 0.110747    \nlevelmedium         -0.1779     0.2224 368.9577  -0.800 0.424249    \ntaskMS:levelhard    -1.0889     0.3263 368.9577  -3.337 0.000934 ***\ntaskST:levelhard    -1.1775     0.3263 368.9577  -3.608 0.000351 ***\ntaskMS:levelmedium  -0.5246     0.3263 368.9577  -1.608 0.108774    \ntaskST:levelmedium  -0.7708     0.3263 368.9577  -2.362 0.018688 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlhrd lvlmdm tskMS:lvlh tskST:lvlh tskMS:lvlm\ntaskMS      -0.486                                                             \ntaskST      -0.486  0.465                                                      \nlevelhard   -0.506  0.478  0.478                                               \nlevelmedium -0.506  0.478  0.478  0.500                                        \ntskMS:lvlhr  0.345 -0.701 -0.326 -0.682 -0.341                                 \ntskST:lvlhr  0.345 -0.326 -0.701 -0.682 -0.341  0.465                          \ntskMS:lvlmd  0.345 -0.701 -0.326 -0.341 -0.682  0.500      0.232               \ntskST:lvlmd  0.345 -0.326 -0.701 -0.341 -0.682  0.232      0.500      0.465    \n\nanova(mix_PE_w)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value   Pr(>F)    \ntask       10.286   5.143     2 378.74  3.9225 0.020602 *  \nlevel      89.381  44.691     2 368.96 34.0845 2.61e-14 ***\ntask:level 22.453   5.613     4 368.96  4.2811 0.002129 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PE_w)\n\n            R2m       R2c\n[1,] 0.09420094 0.5429595\n\nr2tof2(r.squaredGLMM(mix_PE_w)[1])\n\n[1] 0.1039976\n\n\n\n\n\n\nmix_EF_w <- lmer(EF ~ task * level + (1|id), \n               NASATLX_weighted_toloka,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_EF_w)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: EF ~ task * level + (1 | id)\n   Data: NASATLX_weighted_toloka\n\nREML criterion at convergence: 1655.3\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.9840 -0.5820  0.0260  0.6556  3.1217 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 1.195    1.093   \n Residual             1.142    1.068   \nNumber of obs: 510, groups:  id, 57\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)          2.2415     0.2025 162.2377  11.071  < 2e-16 ***\ntaskMS              -0.6724     0.2001 444.8028  -3.360 0.000848 ***\ntaskST              -0.3597     0.2012 444.9752  -1.788 0.074416 .  \nlevelhard            0.4134     0.2001 444.8028   2.065 0.039459 *  \nlevelmedium          0.2350     0.2001 444.8028   1.174 0.241026    \ntaskMS:levelhard     1.2022     0.2830 444.8028   4.247 2.63e-05 ***\ntaskST:levelhard     0.5031     0.2843 444.8028   1.770 0.077495 .  \ntaskMS:levelmedium   0.9746     0.2830 444.8028   3.443 0.000629 ***\ntaskST:levelmedium   0.5134     0.2843 444.8028   1.806 0.071596 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlhrd lvlmdm tskMS:lvlh tskST:lvlh tskMS:lvlm\ntaskMS      -0.494                                                             \ntaskST      -0.492  0.497                                                      \nlevelhard   -0.494  0.500  0.497                                               \nlevelmedium -0.494  0.500  0.497  0.500                                        \ntskMS:lvlhr  0.349 -0.707 -0.352 -0.707 -0.354                                 \ntskST:lvlhr  0.348 -0.352 -0.707 -0.704 -0.352  0.498                          \ntskMS:lvlmd  0.349 -0.707 -0.352 -0.354 -0.707  0.500      0.249               \ntskST:lvlmd  0.348 -0.352 -0.707 -0.352 -0.704  0.249      0.500      0.498    \n\nanova(mix_EF_w)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask        0.494   0.247     2 445.15  0.2166 0.8053627    \nlevel      88.456  44.228     2 444.80 38.7441 3.081e-16 ***\ntask:level 23.566   5.892     4 444.80  5.1610 0.0004509 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_EF_w)\n\n            R2m       R2c\n[1,] 0.08646941 0.5536852\n\nr2tof2(r.squaredGLMM(mix_EF_w)[1])\n\n[1] 0.0946541\n\n\n\n\n\n\nmix_FR_w <- lmer(FR ~ task * level + (1|id), \n               NASATLX_weighted_toloka,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_FR_w)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: FR ~ task * level + (1 | id)\n   Data: NASATLX_weighted_toloka\n\nREML criterion at convergence: 1687.3\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.6176 -0.6424 -0.1401  0.5591  3.2240 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 0.5742   0.7578  \n Residual             1.5118   1.2295  \nNumber of obs: 492, groups:  id, 57\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)          1.6241     0.1927 309.4945   8.429 1.34e-15 ***\ntaskMS              -0.4288     0.2363 429.6592  -1.815 0.070281 .  \ntaskST              -0.4184     0.2338 428.9219  -1.789 0.074262 .  \nlevelhard            0.3735     0.2324 427.3663   1.608 0.108676    \nlevelmedium          0.1693     0.2324 427.3663   0.728 0.466731    \ntaskMS:levelhard     1.2864     0.3332 427.3663   3.860 0.000131 ***\ntaskST:levelhard     1.1427     0.3301 427.3663   3.462 0.000591 ***\ntaskMS:levelmedium   0.8334     0.3332 427.3663   2.501 0.012755 *  \ntaskST:levelmedium   0.7944     0.3301 427.3663   2.407 0.016522 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlhrd lvlmdm tskMS:lvlh tskST:lvlh tskMS:lvlm\ntaskMS      -0.594                                                             \ntaskST      -0.600  0.491                                                      \nlevelhard   -0.603  0.492  0.497                                               \nlevelmedium -0.603  0.492  0.497  0.500                                        \ntskMS:lvlhr  0.420 -0.705 -0.346 -0.697 -0.349                                 \ntskST:lvlhr  0.424 -0.346 -0.706 -0.704 -0.352  0.491                          \ntskMS:lvlmd  0.420 -0.705 -0.346 -0.349 -0.697  0.500      0.245               \ntskST:lvlmd  0.424 -0.346 -0.706 -0.352 -0.704  0.245      0.500      0.491    \n\nanova(mix_FR_w)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask         7.121   3.560     2 432.58  2.3551 0.0960959 .  \nlevel      116.327  58.163     2 427.37 38.4734 4.327e-16 ***\ntask:level  28.493   7.123     4 427.37  4.7118 0.0009913 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_FR_w)\n\n          R2m       R2c\n[1,] 0.127743 0.3678584\n\nr2tof2(r.squaredGLMM(mix_FR_w)[1])\n\n[1] 0.1464511\n\n\n\n\n\n\nmix_OW_w <- lmer(OW ~ task * level + (1|id), \n               NASATLX_weighted_toloka,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_OW_w)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: OW ~ task * level + (1 | id)\n   Data: NASATLX_weighted_toloka\n\nREML criterion at convergence: 393.2\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.70887 -0.48176 -0.01353  0.53401  2.24589 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 6.653    2.579   \n Residual             7.246    2.692   \nNumber of obs: 81, groups:  id, 19\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          9.3094     1.1290 64.4668   8.245 1.13e-11 ***\ntaskMS              -1.3690     1.3665 65.4243  -1.002  0.32013    \ntaskST               1.7931     1.4254 63.7375   1.258  0.21300    \nlevelhard            0.7428     1.2690 55.0783   0.585  0.56072    \nlevelmedium          1.2201     1.2690 55.0783   0.962  0.34049    \ntaskMS:levelhard     5.5492     1.7491 55.0783   3.173  0.00247 ** \ntaskST:levelhard     2.8935     1.8498 55.0783   1.564  0.12349    \ntaskMS:levelmedium   2.5910     1.7491 55.0783   1.481  0.14422    \ntaskST:levelmedium   1.6454     1.8498 55.0783   0.889  0.37760    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlhrd lvlmdm tskMS:lvlh tskST:lvlh tskMS:lvlm\ntaskMS      -0.623                                                             \ntaskST      -0.570  0.414                                                      \nlevelhard   -0.562  0.464  0.445                                               \nlevelmedium -0.562  0.464  0.445  0.500                                        \ntskMS:lvlhr  0.408 -0.640 -0.323 -0.725 -0.363                                 \ntskST:lvlhr  0.386 -0.319 -0.649 -0.686 -0.343  0.498                          \ntskMS:lvlmd  0.408 -0.640 -0.323 -0.363 -0.725  0.500      0.249               \ntskST:lvlmd  0.386 -0.319 -0.649 -0.343 -0.686  0.249      0.500      0.498    \n\nanova(mix_OW_w)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask        89.965  44.983     2 66.984  6.2078  0.003363 ** \nlevel      182.406  91.203     2 55.078 12.5865 3.149e-05 ***\ntask:level  73.368  18.342     4 55.078  2.5313  0.050582 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_OW_w)\n\n           R2m       R2c\n[1,] 0.2675487 0.6181446\n\nr2tof2(r.squaredGLMM(mix_OW_w)[1])\n\n[1] 0.3652784\n\n\n\n\n\n\nNASATLX_weighted_toloka |> \n  mutate(level = factor(level, ordered = TRUE,\n                        levels = c(\"easy\", \"medium\", \"hard\"))) %>% \n  pivot_longer(cols = c(\"ME\", \"PH\", \"EF\", \"PE\", \"TI\", \"FR\", \"OW\"),\n               names_to = \"scale\", values_to = \"weighted_score\") %>% \n  filter(scale != \"OW\") %>% \n  ggplot() + \n  stat_summary(aes(level, weighted_score),\n               fun.data = mean_cl_boot, geom = \"errorbar\", \n               width = .5,\n               position = pd) +\n  stat_summary(aes(level, weighted_score),\n               fun = mean, geom = \"point\",\n               size = 2,\n               position = pd) +\n  facet_grid(task ~ scale, scales = \"free_y\") +\n  theme(legend.position = \"bottom\") +\n  scale_color_manual(values = level_colors) +\n  labs(title = \"NASA-TLX\",\n       x = \"Difficulty Level\",\n       y = \"Score (weighted)\")\n\nWarning: Removed 432 rows containing non-finite values (`stat_summary()`).\nRemoved 432 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nNASATLX_weighted_toloka |> \n  mutate(level = factor(level, ordered = TRUE,\n                        levels = c(\"easy\", \"medium\", \"hard\"))) %>% \n  pivot_longer(cols = c(\"ME\", \"PH\", \"EF\", \"PE\", \"TI\", \"FR\", \"OW\"),\n               names_to = \"scale\", values_to = \"weighted_score\") %>% \n  filter(scale == \"OW\") %>% \n  ggplot() + \n  stat_summary(aes(level, weighted_score),\n               fun.data = mean_cl_boot, geom = \"errorbar\", \n               width = .3,\n               position = pd) +\n  stat_summary(aes(level, weighted_score),\n               fun = mean, geom = \"point\",\n               size = 2,\n               position = pd) +\n  facet_grid(task ~ scale, scales = \"free_y\") +\n  theme(legend.position = \"bottom\") +\n  scale_color_manual(values = level_colors) +\n  labs(title = \"NASA-TLX\",\n       x = \"Difficulty Level\",\n       y = \"Score (weighted)\")\n\nWarning: Removed 432 rows containing non-finite values (`stat_summary()`).\nRemoved 432 rows containing non-finite values (`stat_summary()`)."
  },
  {
    "objectID": "analysis_pavlovia.html",
    "href": "analysis_pavlovia.html",
    "title": "NASA-TLX",
    "section": "",
    "text": "knitr::opts_chunk$set(error = TRUE)\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\ntheme_set(theme_bw()) # set black and white theme\nlibrary(lavaan)\n\nThis is lavaan 0.6-15\nlavaan is FREE software! Please report any bugs.\n\nlibrary(tidySEM)\n\nLoading required package: OpenMx\nOpenMx may run faster if it is compiled to take advantage of multiple cores.\nRegistered S3 method overwritten by 'tidySEM':\n  method          from  \n  predict.MxModel OpenMx\n\nlibrary(semPower)\n\n\n### Welcome to semPower 1.2.0 ###\n\nSee https://github.com/moshagen/semPower for quick examples and a detailed manual.\n\nPlease cite as:\nMoshagen, M., & Erdfelder, E. (2016). A new strategy for testing structural equation models.\nStructural Equation Modeling, 23, 54-60. doi: 10.1080/10705511.2014.950896\n\nlibrary(lme4)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:OpenMx':\n\n    %&%, expm\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(lmerTest)\n\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(MuMIn)\nlibrary(pwr)\n\n\nrm(list = ls())\n\n\n\n\n\nMR_data <- read_csv(\"../preproc-data/MR_firstbanch_data.csv\")\n\nRows: 3744 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): correctAns, base_pic, rotated_pic, key, task, level, id\ndbl (3): is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nST_data <- read_csv(\"../preproc-data/ST_firstbanch_data.csv\")\n\nRows: 3744 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): key, task, level, id\ndbl (4): target_present, is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nMS_data <- read_csv(\"../preproc-data/MS_firstbanch_data.csv\")\n\nRows: 3744 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (4): trials, n, rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nNASATLX_data <- read_csv(\"../preproc-data/NASATLX_firstbanch_data.csv\")\n\nRows: 4212 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nSEQUENCE_data <- read_csv(\"../preproc-data/SEQ_firstbanch_data.csv\")\n\nRows: 702 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): level, task, id\ndbl (1): order\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nEXPTIME <- read_csv(\"../preproc-data/EXPTIME_firstbanch_data.csv\")\n\nRows: 78 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): id\ndbl  (1): dur\ndttm (2): start, end\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nEXPTIME |> ggplot(aes(dur)) +\n  geom_density()\n\nWarning: Removed 1 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\nEXPTIME |> \n  filter(dur < 250) |> \n  ggplot(aes(dur)) +\n  # geom_density() +\n  geom_histogram() +\n  geom_vline(xintercept = 70) +\n  geom_vline(xintercept = 75) +\n  geom_vline(xintercept = 100)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nEXPTIME |> \n  filter(dur < 250) |> \n  ggplot(aes(dur)) +\n  geom_boxplot() \n\n\n\n  #geom_vline(xintercept = 93, linetype = \"dashed\")\n\n\nEXPTIME$dur |> min(na.rm = TRUE)\n\n[1] 77.99356\n\nquantile(EXPTIME$dur[EXPTIME$dur<250], .75, na.rm = TRUE) + 1.5 * IQR(EXPTIME$dur[EXPTIME$dur<250], na.rm = TRUE)\n\n     75% \n94.32646 \n\n\n\n\n\n\n\n\nMR_data |> \n  group_by(id, level, task) |> \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -> MR_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMR_data_agg |> write_csv(\"../preproc-data/MR_firstbanch_data_agg.csv\")\n\n\nMR_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   MR       78  7.11  4.56  1.43  25.5     6.10     8.12\n2 hard   MR       78 12.0  10.3   1.60  69.1     9.67    14.2 \n3 medium MR       78  8.79  5.88  1.10  37.1     7.49    10.1 \n\n\n\nMR_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   MR       78 0.850 0.174 0.312     1    0.812    0.889\n2 hard   MR       78 0.721 0.178 0.312     1    0.682    0.761\n3 medium MR       78 0.755 0.178 0.25      1    0.715    0.794\n\n\n\nMR_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\n\n\n\nMS_data |> \n  group_by(id, level, task) |> \n  summarise(rt = mean(rt),\n            acc = mean(acc)) -> MS_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMS_data_agg |> write_csv(\"../preproc-data/MS_firstbanch_data_agg.csv\")\n\n\nMS_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(rt, na.rm = TRUE),\n            sd = sd(rt, na.rm = TRUE),\n            min = min(rt, na.rm = TRUE),\n            max = max(rt, na.rm = TRUE),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   MS       78  11.7  5.72  5.47  46.8     10.4     13.0\n2 hard   MS       78  22.7 11.8  11.2   91.0     20.1     25.4\n3 medium MS       78  19.1  5.79 10.1   39.9     17.8     20.4\n\n\n\nMS_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   MS       78 0.949 0.165     0 1        0.913    0.986\n2 hard   MS       78 0.635 0.168     0 0.973    0.597    0.672\n3 medium MS       78 0.878 0.172     0 1        0.839    0.916\n\n\n\nMS_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\n\n\n\n\n\n\n\nST_data |> \n  group_by(id, level, task) |> \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -> ST_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nST_data_agg |> write_csv(\"../preproc-data/ST_firstbanch_data_agg.csv\")\n\n\nST_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   ST       78  1.12 0.325 0.627  2.47     1.05     1.19\n2 hard   ST       78  1.44 0.441 0.737  3.52     1.34     1.54\n3 medium ST       78  1.39 0.470 0.692  3.45     1.28     1.49\n\n\n\nST_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data_agg |> \n  group_by(level, task) |> \n  summarise(n = unique(id) |> length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean     sd   min   max CI_lower CI_upper\n  <chr>  <chr> <int> <dbl>  <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 easy   ST       78 0.979 0.0358 0.875 1        0.971    0.987\n2 hard   ST       78 0.686 0.127  0.312 0.875    0.658    0.714\n3 medium ST       78 0.836 0.114  0.562 1        0.811    0.861\n\n\n\nST_data_agg |> \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nMR_data_agg |> \n  bind_rows(MS_data_agg, ST_data_agg) |>\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, rt)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Reaction Time\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMR_data_agg |> \n  bind_rows(MS_data_agg, ST_data_agg) |>\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |> \n  ggplot(aes(level, acc)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Accuracy\")\n\n\n\n\n\n\n\n\n\nNASATLX_data |> \n  # fix factor\n  mutate(\n    level = factor(\n      level,\n      levels = c(\"easy\", \"medium\", \"hard\"),\n      ordered = TRUE\n    ),\n    # modify vars to match with previously created encoding\n    scl = str_to_lower(scale),\n    tsk = str_to_lower(task),\n    lvl = str_sub(level, start = 1, end = 1) |> str_to_upper(),\n    score = score * 5\n  ) |>\n  # create a new var for CFA\n  unite(item, scl, tsk, lvl) -> NASATLX_data\n\n\nlevel_colors <- c(\"#4bd752\", \"#d7984b\", \"#d7524b\")\ntask_colors <- c(\"red4\", \"green4\", \"blue4\")\nback_histogram_color <- \"gray60\"\n\n\nNASATLX_data |>\n  ggplot(aes(scale, score, fill = level)) +\n  geom_boxplot() +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_fill_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\npd <- position_dodge(0.3)\nNASATLX_data |>\n  ggplot(aes(scale, score, color = level)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\",\n               position = pd, width = .3) +\n  stat_summary(fun = mean, geom = \"point\",\n               position = pd) +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_color_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`).\nRemoved 17 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\n\n\nNASATLX_data |> \n  select(-item) |> \n  # mutate(row_nubmer = row_number()) |> \n  pivot_wider(values_from = score, names_from = scale) -> nasa_tlx_wide\n# NASA_TLX |> group_by(task, level) |> summarise(n=n())\n# nasa_tlx_wide |> group_by(task, level) |> summarise(n=n())\n\n\nr2tof2 <- function(r2) r2 / (1 - r2)\n\n\n\n\nmix_ME <- lmer(ME ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ME)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: ME ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6090.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1846 -0.5810  0.0514  0.6403  3.1496 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 172.8    13.14   \n Residual             300.2    17.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          46.445      2.463 335.008  18.861  < 2e-16 ***\ntaskMS              -16.813      2.774 615.020  -6.060 2.37e-09 ***\ntaskST              -18.655      2.774 615.020  -6.724 4.05e-11 ***\nlevelmedium          10.951      2.774 615.020   3.947 8.82e-05 ***\nlevelhard            19.777      2.774 615.020   7.128 2.86e-12 ***\ntaskMS:levelmedium   20.000      3.924 615.020   5.097 4.59e-07 ***\ntaskST:levelmedium   14.677      3.924 615.020   3.741 0.000201 ***\ntaskMS:levelhard     27.488      3.924 615.020   7.006 6.47e-12 ***\ntaskST:levelhard     20.282      3.931 615.107   5.160 3.34e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.563                                                             \ntaskST      -0.563  0.500                                                      \nlevelmedium -0.563  0.500  0.500                                               \nlevelhard   -0.563  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.398 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.398 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.398 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.398 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_ME)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask         6703    3352     2 615.06  11.165 1.727e-05 ***\nlevel      152214   76107     2 615.06 253.516 < 2.2e-16 ***\ntask:level  16928    4232     4 615.06  14.097 5.168e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ME)[1]\n\nWarning: 'r.squaredGLMM' now calculates a revised statistic. See the help page.\n\n\n[1] 0.3470414\n\nr2tof2(r.squaredGLMM(mix_ME)[1])\n\n[1] 0.5314908\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_ME)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 26.69644\n             f2 = 0.5314908\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_PH <- lmer(PH ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PH)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PH ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 5661\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.5884 -0.5011 -0.0854  0.4111  5.0325 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 434.9    20.85   \n Residual             148.2    12.17   \nNumber of obs: 694, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)         17.0474     2.7392 127.9525   6.224 6.41e-09 ***\ntaskMS              -3.0090     1.9782 608.2281  -1.521  0.12875    \ntaskST              -5.6698     1.9562 608.0818  -2.898  0.00389 ** \nlevelmedium          0.8142     1.9562 608.0818   0.416  0.67740    \nlevelhard            5.5848     1.9562 608.0818   2.855  0.00445 ** \ntaskMS:levelmedium   8.9361     2.7821 608.1575   3.212  0.00139 ** \ntaskST:levelmedium   8.8358     2.7666 608.0868   3.194  0.00148 ** \ntaskMS:levelhard     7.8940     2.7860 608.1309   2.833  0.00476 ** \ntaskST:levelhard     7.7832     2.7615 608.0620   2.818  0.00498 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.356                                                             \ntaskST      -0.360  0.498                                                      \nlevelmedium -0.360  0.498  0.504                                               \nlevelhard   -0.360  0.498  0.504  0.504                                        \ntskMS:lvlmd  0.253 -0.711 -0.354 -0.703 -0.354                                 \ntskST:lvlmd  0.254 -0.352 -0.707 -0.707 -0.356  0.497                          \ntskMS:lvlhr  0.253 -0.709 -0.354 -0.354 -0.702  0.504      0.250               \ntskST:lvlhr  0.255 -0.353 -0.708 -0.357 -0.708  0.251      0.501      0.497    \n\nanova(mix_PH)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask        1087.1   543.6     2 608.13  3.6685  0.026080 *  \nlevel      13744.9  6872.5     2 608.10 46.3819 < 2.2e-16 ***\ntask:level  2422.0   605.5     4 608.12  4.0865  0.002816 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PH)[1]\n\n[1] 0.04098889\n\nr2tof2(r.squaredGLMM(mix_PH)[1])\n\n[1] 0.04274079\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PH)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 334.8529\n             f2 = 0.04274079\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_TI <- lmer(TI ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_TI)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: TI ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6223.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0957 -0.5892 -0.0314  0.6288  2.8906 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 160.6    12.67   \n Residual             373.7    19.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)         15.5984     2.6173 401.8373   5.960 5.53e-09 ***\ntaskMS               3.5592     3.0955 614.9845   1.150 0.250661    \ntaskST              11.3673     3.0955 614.9845   3.672 0.000261 ***\nlevelmedium          0.7836     3.0955 614.9845   0.253 0.800248    \nlevelhard            4.1863     3.0955 614.9845   1.352 0.176739    \ntaskMS:levelmedium  32.1104     4.3776 614.9845   7.335 7.02e-13 ***\ntaskST:levelmedium  33.6197     4.3854 615.0938   7.666 6.94e-14 ***\ntaskMS:levelhard    51.4924     4.3776 614.9845  11.763  < 2e-16 ***\ntaskST:levelhard    50.8953     4.3776 614.9845  11.626  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.591                                                             \ntaskST      -0.591  0.500                                                      \nlevelmedium -0.591  0.500  0.500                                               \nlevelhard   -0.591  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.418 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.417 -0.353 -0.706 -0.706 -0.353  0.499                          \ntskMS:lvlhr  0.418 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.418 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_TI)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask       203830  101915     2 615.03 272.724 < 2.2e-16 ***\nlevel      173710   86855     2 615.03 232.424 < 2.2e-16 ***\ntask:level  70059   17515     4 615.03  46.869 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_TI)[1]\n\n[1] 0.5446988\n\nr2tof2(r.squaredGLMM(mix_TI)[1])\n\n[1] 1.196348\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_TI)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 12.23247\n             f2 = 1.196348\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_PE <- lmer(PE ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PE)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PE ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6076.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3961 -0.6412  0.0325  0.6477  2.5583 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 113.9    10.67   \n Residual             306.0    17.49   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          66.615      2.320 435.796  28.711  < 2e-16 ***\ntaskMS               25.479      2.801 615.017   9.096  < 2e-16 ***\ntaskST               23.503      2.801 615.017   8.391 3.31e-16 ***\nlevelmedium          -8.781      2.801 615.017  -3.135   0.0018 ** \nlevelhard           -16.480      2.801 615.017  -5.884 6.60e-09 ***\ntaskMS:levelmedium  -17.419      3.961 615.017  -4.397 1.29e-05 ***\ntaskST:levelmedium  -28.291      3.961 615.017  -7.142 2.61e-12 ***\ntaskMS:levelhard    -39.938      3.961 615.017 -10.082  < 2e-16 ***\ntaskST:levelhard    -44.857      3.968 615.138 -11.304  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.604                                                             \ntaskST      -0.604  0.500                                                      \nlevelmedium -0.604  0.500  0.500                                               \nlevelhard   -0.604  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.427 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.427 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.427 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.426 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_PE)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \ntask         7295    3647     2 615.07  11.921  8.33e-06 ***\nlevel      234141  117070     2 615.07 382.616 < 2.2e-16 ***\ntask:level  49094   12273     4 615.07  40.113 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PE)[1]\n\n[1] 0.4967487\n\nr2tof2(r.squaredGLMM(mix_PE)[1])\n\n[1] 0.9870788\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PE)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 14.63282\n             f2 = 0.9870788\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_EF <- lmer(EF ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_EF)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: EF ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6055.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1279 -0.6094  0.0357  0.6249  3.5591 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 249.8    15.81   \n Residual             276.8    16.64   \nNumber of obs: 700, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          44.381      2.598 247.283  17.080  < 2e-16 ***\ntaskMS              -12.862      2.664 614.020  -4.828 1.74e-06 ***\ntaskST              -11.609      2.664 614.020  -4.358 1.54e-05 ***\nlevelmedium           9.006      2.664 614.020   3.381 0.000769 ***\nlevelhard            17.584      2.664 614.020   6.601 8.86e-11 ***\ntaskMS:levelmedium   17.979      3.774 614.080   4.764 2.38e-06 ***\ntaskST:levelmedium   13.621      3.774 614.080   3.609 0.000333 ***\ntaskMS:levelhard     25.250      3.767 614.020   6.702 4.65e-11 ***\ntaskST:levelhard     14.255      3.767 614.020   3.784 0.000170 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.513                                                             \ntaskST      -0.513  0.500                                                      \nlevelmedium -0.513  0.500  0.500                                               \nlevelhard   -0.513  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.362 -0.706 -0.353 -0.706 -0.353                                 \ntskST:lvlmd  0.362 -0.353 -0.706 -0.706 -0.353  0.498                          \ntskMS:lvlhr  0.362 -0.707 -0.354 -0.354 -0.707  0.499      0.250               \ntskST:lvlhr  0.362 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_EF)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(>F)    \ntask         1763     881     2 614.07   3.1842    0.0421 *  \nlevel      113335   56667     2 614.07 204.7413 < 2.2e-16 ***\ntask:level  13748    3437     4 614.07  12.4179 1.018e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_EF)[1]\n\n[1] 0.2592648\n\nr2tof2(r.squaredGLMM(mix_EF)[1])\n\n[1] 0.3500102\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_EF)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 40.49648\n             f2 = 0.3500102\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_FR <- lmer(FR ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_FR)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: FR ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6292.3\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.92494 -0.67440 -0.04275  0.63993  2.97611 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 343.0    18.52   \n Residual             402.2    20.05   \nNumber of obs: 698, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(>|t|)    \n(Intercept)          35.058      3.091 256.301  11.342  < 2e-16 ***\ntaskMS              -11.619      3.235 612.136  -3.592 0.000355 ***\ntaskST              -13.828      3.211 611.853  -4.306 1.94e-05 ***\nlevelmedium           6.322      3.211 611.853   1.969 0.049432 *  \nlevelhard            12.950      3.223 611.978   4.018 6.59e-05 ***\ntaskMS:levelmedium   13.354      4.558 611.995   2.930 0.003518 ** \ntaskST:levelmedium   20.118      4.541 611.853   4.430 1.12e-05 ***\ntaskMS:levelhard     23.420      4.566 612.053   5.129 3.92e-07 ***\ntaskST:levelhard     30.659      4.558 611.996   6.727 4.00e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.516                                                             \ntaskST      -0.519  0.496                                                      \nlevelmedium -0.519  0.496  0.500                                               \nlevelhard   -0.518  0.495  0.498  0.498                                        \ntskMS:lvlmd  0.366 -0.710 -0.352 -0.705 -0.351                                 \ntskST:lvlmd  0.367 -0.351 -0.707 -0.707 -0.352  0.498                          \ntskMS:lvlhr  0.365 -0.708 -0.352 -0.352 -0.706  0.503      0.249               \ntskST:lvlhr  0.366 -0.349 -0.705 -0.352 -0.707  0.248      0.498      0.499    \n\nanova(mix_FR)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(>F)    \ntask         1246     623     2 611.95   1.5486    0.2134    \nlevel      111859   55929     2 611.94 139.0640 < 2.2e-16 ***\ntask:level  20526    5131     4 612.00  12.7589 5.569e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_FR)[1]\n\n[1] 0.204493\n\nr2tof2(r.squaredGLMM(mix_FR)[1])\n\n[1] 0.2570599\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_FR)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 55.20916\n             f2 = 0.2570599\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\n\nlavmodel <- \"\nPE =~ PE_mr + PE_ms + PE_st\nME =~ ME_mr + ME_ms + ME_st\nPH =~ PH_mr + PH_ms + PH_st\nEF =~ EF_mr + EF_ms + EF_st\nTI =~ TI_mr + TI_ms + TI_st\nFR =~ FR_mr + FR_ms + FR_st\nOW =~ PE + ME + PH + EF + TI + FR\"\n\n\nsemPower.getDf(lavmodel)\n\n[1] 129\n\n\n\nap <- semPower.aPriori(effect = .05, effect.measure = 'RMSEA',\n                       alpha = .05, power = .80, df = semPower.getDf(lavmodel))\nsummary(ap)\n\n\n semPower: A-priori power analysis\n                                   \n F0                        0.322500\n RMSEA                     0.050000\n Mc                        0.851079\n                                   \n df                        129     \n Required Num Observations 142     \n                                   \n Critical Chi-Square       156.5075\n NCP                       45.47250\n Alpha                     0.050000\n Beta                      0.198348\n Power (1-beta)            0.801652\n Implied Alpha/Beta Ratio  0.252082\n\n\n\n\n\n\n\n\n\nNASATLX_data |> \n  pivot_wider(id_cols = id, \n              names_from = item, \n              values_from = score,\n              values_fn = unlist) -> NASATLX_cfa\n\n\n\n\n\nmodel1 <- \"PE =~ pe_st_E + pe_st_M + pe_st_H + pe_mr_E + pe_mr_M + pe_mr_H + pe_ms_E + pe_ms_M + pe_ms_H\nME =~ me_st_E + me_st_M + me_st_H + me_mr_E + me_mr_M + me_mr_H + me_ms_E + me_ms_M + me_ms_H\nPH =~ ph_st_E + ph_st_M + ph_st_H + ph_mr_E + ph_mr_M + ph_mr_H + ph_ms_E + ph_ms_M + ph_ms_H\nEF =~ ef_st_E + ef_st_M + ef_st_H + ef_mr_E + ef_mr_M + ef_mr_H + ef_ms_E + ef_ms_M + ef_ms_H\nTI =~ ti_st_E + ti_st_M + ti_st_H + ti_mr_E + ti_mr_M + ti_mr_H + ti_ms_E + ti_ms_M + ti_ms_H\nFR =~ fr_st_E + fr_st_M + fr_st_H + fr_mr_E + fr_mr_M + fr_mr_H + fr_ms_E + fr_ms_M + fr_ms_H\nOW =~ PE + ME + PH + EF + TI + FR\"\n\n\ncfa1 <- cfa(model1, NASATLX_cfa)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa1, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 455 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                       114\n\n                                                  Used       Total\n  Number of observations                            67          78\n\nModel Test User Model:\n                                                      \n  Test statistic                              3660.590\n  Degrees of freedom                              1371\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                              5450.455\n  Degrees of freedom                              1431\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.430\n  Tucker-Lewis Index (TLI)                       0.405\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)             -15485.621\n  Loglikelihood unrestricted model (H1)     -13655.326\n                                                      \n  Akaike (AIC)                               31199.242\n  Bayesian (BIC)                             31450.577\n  Sample-size adjusted Bayesian (SABIC)      31091.632\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.158\n  90 Percent confidence interval - lower         0.152\n  90 Percent confidence interval - upper         0.164\n  P-value H_0: RMSEA <= 0.050                    0.000\n  P-value H_0: RMSEA >= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.152\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  PE =~                                               \n    pe_st_E           1.000                           \n    pe_st_M           2.255    0.980    2.301    0.021\n    pe_st_H           0.883    0.658    1.342    0.180\n    pe_mr_E           3.979    1.469    2.709    0.007\n    pe_mr_M           4.586    1.672    2.743    0.006\n    pe_mr_H           4.053    1.464    2.769    0.006\n    pe_ms_E           1.025    0.537    1.910    0.056\n    pe_ms_M           1.643    0.922    1.781    0.075\n    pe_ms_H           1.434    0.776    1.848    0.065\n  ME =~                                               \n    me_st_E           1.000                           \n    me_st_M           1.013    0.263    3.850    0.000\n    me_st_H           0.958    0.292    3.280    0.001\n    me_mr_E           1.566    0.351    4.466    0.000\n    me_mr_M           1.330    0.303    4.391    0.000\n    me_mr_H           1.032    0.263    3.920    0.000\n    me_ms_E           0.991    0.257    3.856    0.000\n    me_ms_M           1.180    0.291    4.053    0.000\n    me_ms_H           0.877    0.218    4.023    0.000\n  PH =~                                               \n    ph_st_E           1.000                           \n    ph_st_M           1.992    0.249    8.007    0.000\n    ph_st_H           2.349    0.260    9.027    0.000\n    ph_mr_E           1.971    0.211    9.328    0.000\n    ph_mr_M           1.988    0.222    8.971    0.000\n    ph_mr_H           2.338    0.263    8.880    0.000\n    ph_ms_E           1.450    0.182    7.961    0.000\n    ph_ms_M           2.179    0.241    9.046    0.000\n    ph_ms_H           2.642    0.286    9.254    0.000\n  EF =~                                               \n    ef_st_E           1.000                           \n    ef_st_M           1.029    0.188    5.477    0.000\n    ef_st_H           0.877    0.199    4.410    0.000\n    ef_mr_E           1.178    0.216    5.445    0.000\n    ef_mr_M           1.173    0.217    5.411    0.000\n    ef_mr_H           0.841    0.180    4.660    0.000\n    ef_ms_E           1.157    0.197    5.859    0.000\n    ef_ms_M           1.158    0.194    5.975    0.000\n    ef_ms_H           0.712    0.151    4.719    0.000\n  TI =~                                               \n    ti_st_E           1.000                           \n    ti_st_M           0.882    0.419    2.105    0.035\n    ti_st_H           0.594    0.371    1.601    0.109\n    ti_mr_E           1.667    0.432    3.861    0.000\n    ti_mr_M           1.465    0.378    3.876    0.000\n    ti_mr_H           1.547    0.415    3.730    0.000\n    ti_ms_E           1.382    0.399    3.466    0.001\n    ti_ms_M           0.987    0.418    2.362    0.018\n    ti_ms_H           0.650    0.360    1.805    0.071\n  FR =~                                               \n    fr_st_E           1.000                           \n    fr_st_M           1.716    0.355    4.837    0.000\n    fr_st_H           1.463    0.343    4.265    0.000\n    fr_mr_E           1.547    0.349    4.436    0.000\n    fr_mr_M           1.840    0.393    4.685    0.000\n    fr_mr_H           1.672    0.356    4.695    0.000\n    fr_ms_E           1.234    0.307    4.026    0.000\n    fr_ms_M           1.651    0.341    4.838    0.000\n    fr_ms_H           1.556    0.338    4.606    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME              128.381  914.645    0.140    0.888\n    PH               77.803  554.331    0.140    0.888\n    EF              186.293 1327.040    0.140    0.888\n    TI               59.585  424.836    0.140    0.888\n    FR               91.614  652.834    0.140    0.888\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .pe_st_E         124.591   22.092    5.640    0.000\n   .pe_st_M         361.285   65.373    5.527    0.000\n   .pe_st_H         354.264   61.638    5.747    0.000\n   .pe_mr_E         244.581   54.022    4.527    0.000\n   .pe_mr_M         244.480   59.972    4.077    0.000\n   .pe_mr_H         133.027   39.392    3.377    0.001\n   .pe_ms_E         168.410   29.687    5.673    0.000\n   .pe_ms_M         548.307   96.241    5.697    0.000\n   .pe_ms_H         369.741   65.033    5.685    0.000\n   .me_st_E         245.268   45.144    5.433    0.000\n   .me_st_M         287.394   52.463    5.478    0.000\n   .me_st_H         442.050   78.816    5.609    0.000\n   .me_mr_E         350.656   67.808    5.171    0.000\n   .me_mr_M         277.611   53.108    5.227    0.000\n   .me_mr_H         278.281   51.010    5.455    0.000\n   .me_ms_E         273.701   49.982    5.476    0.000\n   .me_ms_M         317.793   58.786    5.406    0.000\n   .me_ms_H         180.945   33.398    5.418    0.000\n   .ph_st_E          72.731   13.064    5.567    0.000\n   .ph_st_M         187.008   34.332    5.447    0.000\n   .ph_st_H         118.723   23.571    5.037    0.000\n   .ph_mr_E          60.178   12.690    4.742    0.000\n   .ph_mr_M          89.689   17.669    5.076    0.000\n   .ph_mr_H         134.864   26.271    5.133    0.000\n   .ph_ms_E         102.020   18.696    5.457    0.000\n   .ph_ms_M         100.315   19.972    5.023    0.000\n   .ph_ms_H         118.111   24.450    4.831    0.000\n   .ef_st_E         239.012   44.587    5.361    0.000\n   .ef_st_M         235.841   44.255    5.329    0.000\n   .ef_st_H         366.863   65.803    5.575    0.000\n   .ef_mr_E         316.820   59.323    5.341    0.000\n   .ef_mr_M         322.696   60.292    5.352    0.000\n   .ef_mr_H         283.996   51.311    5.535    0.000\n   .ef_ms_E         219.092   42.458    5.160    0.000\n   .ef_ms_M         198.370   38.959    5.092    0.000\n   .ef_ms_H         195.545   35.398    5.524    0.000\n   .ti_st_E         341.022   60.770    5.612    0.000\n   .ti_st_M         729.668  127.474    5.724    0.000\n   .ti_st_H         661.912  114.995    5.756    0.000\n   .ti_mr_E          93.538   24.026    3.893    0.000\n   .ti_mr_M          64.491   17.520    3.681    0.000\n   .ti_mr_H         149.496   31.182    4.794    0.000\n   .ti_ms_E         243.719   45.882    5.312    0.000\n   .ti_ms_M         656.806  115.249    5.699    0.000\n   .ti_ms_H         590.417  102.767    5.745    0.000\n   .fr_st_E         237.844   44.183    5.383    0.000\n   .fr_st_M         339.631   68.622    4.949    0.000\n   .fr_st_H         470.206   87.896    5.350    0.000\n   .fr_mr_E         441.207   83.804    5.265    0.000\n   .fr_mr_M         472.552   92.733    5.096    0.000\n   .fr_mr_H         385.333   75.746    5.087    0.000\n   .fr_ms_E         421.392   77.461    5.440    0.000\n   .fr_ms_M         313.899   63.433    4.948    0.000\n   .fr_ms_H         369.805   71.717    5.156    0.000\n   .PE               18.314   13.071    1.401    0.161\n   .ME               20.134   13.400    1.502    0.133\n   .PH               76.958   20.526    3.749    0.000\n   .EF               -7.894   17.614   -0.448    0.654\n   .TI               70.275   36.871    1.906    0.057\n   .FR               84.756   33.213    2.552    0.011\n    OW                0.007    0.096    0.070    0.944\n\n\n\nmodel_easy <- \"PE =~ pe_mr_E + pe_ms_E + pe_st_E\nPH =~ ph_mr_E + ph_ms_E + ph_st_E\nME =~ me_mr_E + me_ms_E + me_st_E\nEF =~ ef_mr_E + ef_ms_E + ef_st_E\nTI =~ ti_mr_E + ti_ms_E + ti_st_E\nFR =~ fr_mr_E + fr_ms_E + fr_st_E\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_easy <- cfa(model_easy, NASATLX_cfa,)\n\nWarning in lavaan::lavaan(model = model_easy, data = NASATLX_cfa, model.type = \"cfa\", : lavaan WARNING:\n    the optimizer warns that a solution has NOT been found!\n\nsummary(cfa_easy, fit.measures = TRUE)\n\nWarning in lav_object_summary(object = object, header = header, fit.measures = fit.measures, : lavaan WARNING: fit measures not available if model did not converge\n\n\nlavaan 0.6.15 did NOT end normally after 2260 iterations\n** WARNING ** Estimates below are most likely unreliable\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            73          78\n\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate   Std.Err  z-value  P(>|z|)\n  PE =~                                                \n    pe_mr_E            1.000                           \n    pe_ms_E            1.310       NA                  \n    pe_st_E            1.213       NA                  \n  PH =~                                                \n    ph_mr_E            1.000                           \n    ph_ms_E            0.787       NA                  \n    ph_st_E            0.571       NA                  \n  ME =~                                                \n    me_mr_E            1.000                           \n    me_ms_E            1.094       NA                  \n    me_st_E            0.836       NA                  \n  EF =~                                                \n    ef_mr_E            1.000                           \n    ef_ms_E            1.217       NA                  \n    ef_st_E            0.984       NA                  \n  TI =~                                                \n    ti_mr_E            1.000                           \n    ti_ms_E            0.987       NA                  \n    ti_st_E            0.722       NA                  \n  FR =~                                                \n    fr_mr_E            1.000                           \n    fr_ms_E            1.461       NA                  \n    fr_st_E            0.989       NA                  \n  OW =~                                                \n    PE                 1.000                           \n    ME              2899.037       NA                  \n    PH                -0.158       NA                  \n    EF               -17.873       NA                  \n    TI                -6.829       NA                  \n    FR                 3.480       NA                  \n\nVariances:\n                   Estimate   Std.Err  z-value  P(>|z|)\n   .pe_mr_E          464.987       NA                  \n   .pe_ms_E           86.235       NA                  \n   .pe_st_E           63.481       NA                  \n   .ph_mr_E           95.968       NA                  \n   .ph_ms_E           87.338       NA                  \n   .ph_st_E           50.572       NA                  \n   .me_mr_E          449.647       NA                  \n   .me_ms_E          143.733       NA                  \n   .me_st_E          229.140       NA                  \n   .ef_mr_E          358.257       NA                  \n   .ef_ms_E          110.697       NA                  \n   .ef_st_E          195.518       NA                  \n   .ti_mr_E          148.921       NA                  \n   .ti_ms_E          216.321       NA                  \n   .ti_st_E          321.114       NA                  \n   .fr_mr_E          593.657       NA                  \n   .fr_ms_E          289.120       NA                  \n   .fr_st_E          214.943       NA                  \n   .PE                51.502       NA                  \n   .PH               400.229       NA                  \n   .ME             35192.656       NA                  \n   .EF               266.885       NA                  \n   .TI               201.642       NA                  \n   .FR               154.556       NA                  \n    OW                -0.004       NA                  \n\nfitmeasures(cfa_easy, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\nError in lav_fit_measures(object = object, fit.measures = fit.measures, : lavaan ERROR: fit measures not available if model did not converge\n\n\n\nmodel_medium <- \"PE =~ pe_mr_M + pe_ms_M + pe_st_M\nPH =~ ph_mr_M + ph_ms_M + ph_st_M\nME =~ me_mr_M + me_ms_M + me_st_M\nEF =~ ef_mr_M + ef_ms_M + ef_st_M\nTI =~ ti_mr_M + ti_ms_M + ti_st_M\nFR =~ fr_mr_M + fr_ms_M + fr_st_M\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_medium <- cfa(model_medium, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 493 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.017\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.701\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.402\n  Bayesian (BIC)                             11932.173\n  Sample-size adjusted Bayesian (SABIC)      11799.815\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA <= 0.050                    0.000\n  P-value H_0: RMSEA >= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.685    0.401    1.711    0.087\n    pe_st_M           1.061    0.741    1.432    0.152\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.174    0.114   10.327    0.000\n    ph_st_M           1.135    0.115    9.872    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.701    0.463    3.672    0.000\n    me_st_M           1.058    0.345    3.071    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.508    0.289    5.214    0.000\n    ef_st_M           1.088    0.249    4.380    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.632    2.751    2.047    0.041\n    ti_st_M           3.908    2.027    1.928    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.332    0.271    4.921    0.000\n    fr_st_M           1.095    0.245    4.474    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               73.844 1151.565    0.064    0.949\n    PH               84.873 1323.482    0.064    0.949\n    EF              109.365 1705.387    0.064    0.949\n    TI               30.009  468.136    0.064    0.949\n    FR              113.058 1763.000    0.064    0.949\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .pe_mr_M         452.474  130.577    3.465    0.001\n   .pe_ms_M         511.248   98.015    5.216    0.000\n   .pe_st_M         263.411  128.374    2.052    0.040\n   .ph_mr_M         140.173   31.023    4.518    0.000\n   .ph_ms_M         104.826   32.777    3.198    0.001\n   .ph_st_M         142.456   35.272    4.039    0.000\n   .me_mr_M         402.103   68.867    5.839    0.000\n   .me_ms_M         236.209   58.827    4.015    0.000\n   .me_st_M         331.211   57.866    5.724    0.000\n   .ef_mr_M         437.092   74.252    5.887    0.000\n   .ef_ms_M         105.505   33.491    3.150    0.002\n   .ef_st_M         302.997   52.858    5.732    0.000\n   .ti_mr_M         242.309   39.894    6.074    0.000\n   .ti_ms_M         311.098   84.946    3.662    0.000\n   .ti_st_M         637.972  109.853    5.808    0.000\n   .fr_mr_M         633.851  114.284    5.546    0.000\n   .fr_ms_M         208.689   68.761    3.035    0.002\n   .fr_st_M         405.566   80.446    5.041    0.000\n   .PE              153.647  126.134    1.218    0.223\n   .PH              266.020   61.746    4.308    0.000\n   .ME                7.055   15.442    0.457    0.648\n   .EF              -12.589   15.004   -0.839    0.401\n   .TI               -1.186    2.460   -0.482    0.630\n   .FR              100.758   47.793    2.108    0.035\n    OW                0.017    0.536    0.032    0.974\n\nfitmeasures(cfa_medium, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n414.017 129.000   0.000   0.637   0.569   0.173   0.141 \n\n\n\nmodel_hard <- \"PE =~ pe_mr_H + pe_ms_H + pe_st_H\nPH =~ ph_mr_H + ph_ms_H + ph_st_H\nME =~ me_mr_H + me_ms_H + me_st_H\nEF =~ ef_mr_H + ef_ms_H + ef_st_H\nTI =~ ti_mr_H + ti_ms_H + ti_st_H\nFR =~ fr_mr_H + fr_ms_H + fr_st_H\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_hard <- cfa(model_hard, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 493 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.017\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.701\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.402\n  Bayesian (BIC)                             11932.173\n  Sample-size adjusted Bayesian (SABIC)      11799.815\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA <= 0.050                    0.000\n  P-value H_0: RMSEA >= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.685    0.401    1.711    0.087\n    pe_st_M           1.061    0.741    1.432    0.152\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.174    0.114   10.327    0.000\n    ph_st_M           1.135    0.115    9.872    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.701    0.463    3.672    0.000\n    me_st_M           1.058    0.345    3.071    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.508    0.289    5.214    0.000\n    ef_st_M           1.088    0.249    4.380    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.632    2.751    2.047    0.041\n    ti_st_M           3.908    2.027    1.928    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.332    0.271    4.921    0.000\n    fr_st_M           1.095    0.245    4.474    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               73.844 1151.565    0.064    0.949\n    PH               84.873 1323.482    0.064    0.949\n    EF              109.365 1705.387    0.064    0.949\n    TI               30.009  468.136    0.064    0.949\n    FR              113.058 1763.000    0.064    0.949\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .pe_mr_M         452.474  130.577    3.465    0.001\n   .pe_ms_M         511.248   98.015    5.216    0.000\n   .pe_st_M         263.411  128.374    2.052    0.040\n   .ph_mr_M         140.173   31.023    4.518    0.000\n   .ph_ms_M         104.826   32.777    3.198    0.001\n   .ph_st_M         142.456   35.272    4.039    0.000\n   .me_mr_M         402.103   68.867    5.839    0.000\n   .me_ms_M         236.209   58.827    4.015    0.000\n   .me_st_M         331.211   57.866    5.724    0.000\n   .ef_mr_M         437.092   74.252    5.887    0.000\n   .ef_ms_M         105.505   33.491    3.150    0.002\n   .ef_st_M         302.997   52.858    5.732    0.000\n   .ti_mr_M         242.309   39.894    6.074    0.000\n   .ti_ms_M         311.098   84.946    3.662    0.000\n   .ti_st_M         637.972  109.853    5.808    0.000\n   .fr_mr_M         633.851  114.284    5.546    0.000\n   .fr_ms_M         208.689   68.761    3.035    0.002\n   .fr_st_M         405.566   80.446    5.041    0.000\n   .PE              153.647  126.134    1.218    0.223\n   .PH              266.020   61.746    4.308    0.000\n   .ME                7.055   15.442    0.457    0.648\n   .EF              -12.589   15.004   -0.839    0.401\n   .TI               -1.186    2.460   -0.482    0.630\n   .FR              100.758   47.793    2.108    0.035\n    OW                0.017    0.536    0.032    0.974\n\nfitmeasures(cfa_hard, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n366.216 129.000   0.000   0.663   0.601   0.159   0.115"
  }
]