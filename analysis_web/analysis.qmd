# First banch. Analysis workflow

```{r}
knitr::opts_chunk$set(error = TRUE)
```

## Packages

```{r pkgs-analysis}
library(tidyverse)
theme_set(theme_bw()) # set black and white theme
library(lavaan)
library(tidySEM)
library(semPower)
library(lme4)
library(lmerTest)
library(MuMIn)
library(pwr)
```

```{r}
rm(list = ls())
```

## Reading data

```{r reading-data}
MR_data <- read_csv("MR_firstbanch_data.csv")
ST_data <- read_csv("ST_firstbanch_data.csv")
MS_data <- read_csv("MS_firstbanch_data.csv")
NASATLX_data <- read_csv("NASATLX_firstbanch_data.csv")
SEQUENCE_data <- read_csv("SEQ_firstbanch_data.csv")
EXPTIME <- read_csv("EXPTIME_firstbanch_data.csv")
```



## Experimental time

```{r exp-time-raw-density}
EXPTIME |> ggplot(aes(dur)) +
  geom_density()
```

```{r exp-time-desc}
EXPTIME |> 
  filter(dur < 250) |> 
  ggplot(aes(dur)) +
  # geom_density() +
  geom_histogram() +
  geom_vline(xintercept = 70) +
  geom_vline(xintercept = 75) +
  geom_vline(xintercept = 100)

EXPTIME |> 
  filter(dur < 250) |> 
  ggplot(aes(dur)) +
  geom_boxplot() 
  #geom_vline(xintercept = 93, linetype = "dashed")
```

```{r}
EXPTIME$dur |> min(na.rm = TRUE)
quantile(EXPTIME$dur[EXPTIME$dur<250], .75, na.rm = TRUE) + 1.5 * IQR(EXPTIME$dur[EXPTIME$dur<250], na.rm = TRUE)
```



## Behavioral data

### Mental Rotation

```{r mr-agg}
MR_data |> 
  group_by(id, level, task) |> 
  summarise(rt = mean(rt),
            acc = mean(is_correct)) -> MR_data_agg
```

```{r}
MR_data_agg |> write_csv("MR_firstbanch_data_agg.csv")
```

```{r mr_rt_desc}
MR_data_agg |> 
  group_by(level, task) |> 
  summarise(n = unique(id) |> length(),
            mean = mean(rt),
            sd = sd(rt),
            min = min(rt),
            max = max(rt),
            CI_lower = mean - 1.96 * sd / sqrt(n),
            CI_upper = mean + 1.96 * sd / sqrt(n))
```

```{r mr_rt_plot}
MR_data_agg |> 
  mutate(level = factor(level, 
                        ordered = TRUE, 
                        levels = c("easy", "medium", "hard"))) |> 
  ggplot(aes(level, rt)) +
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange") +
  labs(title = "MR")
```

```{r mr_acc_desc}
MR_data_agg |> 
  group_by(level, task) |> 
  summarise(n = unique(id) |> length(),
            mean = mean(acc),
            sd = sd(acc),
            min = min(acc),
            max = max(acc),
            CI_lower = mean - 1.96 * sd / sqrt(n),
            CI_upper = mean + 1.96 * sd / sqrt(n))
```

```{r mr_acc_plot}
MR_data_agg |> 
  mutate(level = factor(level, 
                        ordered = TRUE, 
                        levels = c("easy", "medium", "hard"))) |> 
  ggplot(aes(level, acc)) +
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange") +
  labs(title = "MR")
```


### Mental Span

```{r ms-agg}
MS_data |> 
  group_by(id, level, task) |> 
  summarise(rt = mean(rt),
            acc = mean(acc)) -> MS_data_agg
```

```{r}
MS_data_agg |> write_csv("MS_firstbanch_data_agg.csv")
```

```{r ms_rt_desc}
MS_data_agg |> 
  group_by(level, task) |> 
  summarise(n = unique(id) |> length(),
            mean = mean(rt, na.rm = TRUE),
            sd = sd(rt, na.rm = TRUE),
            min = min(rt, na.rm = TRUE),
            max = max(rt, na.rm = TRUE),
            CI_lower = mean - 1.96 * sd / sqrt(n),
            CI_upper = mean + 1.96 * sd / sqrt(n))
```

```{r ms_rt_plot}
MS_data_agg |> 
  mutate(level = factor(level, 
                        ordered = TRUE, 
                        levels = c("easy", "medium", "hard"))) |> 
  ggplot(aes(level, rt)) +
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange") +
  labs(title = "MS")
```

```{r ms_acc_desc}
MS_data_agg |> 
  group_by(level, task) |> 
  summarise(n = unique(id) |> length(),
            mean = mean(acc),
            sd = sd(acc),
            min = min(acc),
            max = max(acc),
            CI_lower = mean - 1.96 * sd / sqrt(n),
            CI_upper = mean + 1.96 * sd / sqrt(n))
```

```{r ms_acc_plot}
MS_data_agg |> 
  mutate(level = factor(level, 
                        ordered = TRUE, 
                        levels = c("easy", "medium", "hard"))) |> 
  ggplot(aes(level, acc)) +
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange") +
  labs(title = "MS")
```


### Sternberg

```{r st-agg}
ST_data |> 
  group_by(id, level, task) |> 
  summarise(rt = mean(rt),
            acc = mean(is_correct)) -> ST_data_agg
```

```{r}
ST_data_agg |> write_csv("ST_firstbanch_data_agg.csv")
```

```{r st_rt_desc}
ST_data_agg |> 
  group_by(level, task) |> 
  summarise(n = unique(id) |> length(),
            mean = mean(rt),
            sd = sd(rt),
            min = min(rt),
            max = max(rt),
            CI_lower = mean - 1.96 * sd / sqrt(n),
            CI_upper = mean + 1.96 * sd / sqrt(n))
```

```{r st_rt_plot}
ST_data_agg |> 
  mutate(level = factor(level, 
                        ordered = TRUE, 
                        levels = c("easy", "medium", "hard"))) |> 
  ggplot(aes(level, rt)) +
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange") +
  labs(title = "ST")
```

```{r st_acc_desc}
ST_data_agg |> 
  group_by(level, task) |> 
  summarise(n = unique(id) |> length(),
            mean = mean(acc),
            sd = sd(acc),
            min = min(acc),
            max = max(acc),
            CI_lower = mean - 1.96 * sd / sqrt(n),
            CI_upper = mean + 1.96 * sd / sqrt(n))
```


```{r st_acc_plot}
ST_data_agg |> 
  mutate(level = factor(level, 
                        ordered = TRUE, 
                        levels = c("easy", "medium", "hard"))) |> 
  ggplot(aes(level, acc)) +
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange") +
  labs(title = "ST")
```


### Plot all paradigms

```{r rt_plot}
MR_data_agg |> 
  bind_rows(MS_data_agg, ST_data_agg) |>
  mutate(level = factor(level, 
                        ordered = TRUE, 
                        levels = c("easy", "medium", "hard"))) |> 
  ggplot(aes(level, rt)) +
  facet_wrap(~ task, scales = "free_y") +
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange") +
  labs(title = "Reaction Time")
```

```{r acc_plot}
MR_data_agg |> 
  bind_rows(MS_data_agg, ST_data_agg) |>
  mutate(level = factor(level, 
                        ordered = TRUE, 
                        levels = c("easy", "medium", "hard"))) |> 
  ggplot(aes(level, acc)) +
  facet_wrap(~ task, scales = "free_y") +
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange") +
  labs(title = "Accuracy")
```



## NASA-TLX

```{r}
NASATLX_data |> 
  # fix factor
  mutate(
    level = factor(
      level,
      levels = c("easy", "medium", "hard"),
      ordered = TRUE
    ),
    # modify vars to match with previously created encoding
    scl = str_to_lower(scale),
    tsk = str_to_lower(task),
    lvl = str_sub(level, start = 1, end = 1) |> str_to_upper(),
    score = score * 5
  ) |>
  # create a new var for CFA
  unite(item, scl, tsk, lvl) -> NASATLX_data
```

```{r}
level_colors <- c("#4bd752", "#d7984b", "#d7524b")
task_colors <- c("red4", "green4", "blue4")
back_histogram_color <- "gray60"
```

```{r}
NASATLX_data |>
  ggplot(aes(scale, score, fill = level)) +
  geom_boxplot() +
  facet_grid(task ~ .) +
  theme(legend.position = "bottom") +
  labs(x = "NASA-TLX Scale",
       y = "NASA-TLX Score (raw)",
       fill = "Difficulty Level") +
  scale_fill_manual(values = level_colors)
```

```{r}
pd <- position_dodge(0.3)
NASATLX_data |>
  ggplot(aes(scale, score, color = level)) +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
               position = pd, width = .3) +
  stat_summary(fun = mean, geom = "point",
               position = pd) +
  facet_grid(task ~ .) +
  theme(legend.position = "bottom") +
  labs(x = "NASA-TLX Scale",
       y = "NASA-TLX Score (raw)",
       fill = "Difficulty Level") +
  scale_color_manual(values = level_colors)
```

```{r, include=FALSE}
pd <- position_dodge(0.3)
NASATLX_data |>
  ggplot(aes(scale, score, color = level)) +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
               position = pd, width = .3) +
  stat_summary(fun = mean, geom = "point",
               position = pd) +
  facet_grid(task ~ .) +
  theme(legend.position = "bottom") +
  labs(x = "Шкалы NASA-TLX",
       y = "NASA-TLX (сырой балл)",
       color = "Уровень сложности") +
  scale_color_manual(values = level_colors, 
                     labels = c(easy = "легкий", 
                                medium = "средний", 
                                hard = "сложный"))
ggsave("anova_errorbars_color.png", dpi = 300)
```

```{r, include=FALSE}
pd <- position_dodge(0.3)
NASATLX_data |>
  ggplot(aes(scale, score, color = level)) +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
               position = pd, width = .3) +
  stat_summary(fun = mean, geom = "point",
               position = pd) +
  facet_grid(task ~ .) +
  theme(legend.position = "bottom") +
  labs(x = "Шкалы NASA-TLX",
       y = "NASA-TLX (сырой балл)",
       color = "Уровень сложности") +
  scale_color_manual(values = c(easy = "black",
                                medium = "gray40",
                                hard = "gray60"))
ggsave("anova_errorbars.png", dpi = 300)
```

### GLMM scales

```{r nasatlx-wide}
NASATLX_data |> 
  select(-item) |> 
  # mutate(row_nubmer = row_number()) |> 
  pivot_wider(values_from = score, names_from = scale) -> nasa_tlx_wide
# NASA_TLX |> group_by(task, level) |> summarise(n=n())
# nasa_tlx_wide |> group_by(task, level) |> summarise(n=n())
```

```{r r2-to-f2}
r2tof2 <- function(r2) r2 / (1 - r2)
```

#### ME
```{r}
mix_ME <- lmer(ME ~ task * level + (1|id), 
               nasa_tlx_wide,
               contrasts = list(level="contr.treatment"))
summary(mix_ME)
anova(mix_ME)
r.squaredGLMM(mix_ME)[1]
r2tof2(r.squaredGLMM(mix_ME)[1])
pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_ME)[1]),
            u = 7,
            sig.level = .05,
            power = .8)
```

#### PH
```{r}
mix_PH <- lmer(PH ~ task * level + (1|id), 
               nasa_tlx_wide,
               contrasts = list(level="contr.treatment"))
summary(mix_PH)
anova(mix_PH)
r.squaredGLMM(mix_PH)[1]
r2tof2(r.squaredGLMM(mix_PH)[1])
pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PH)[1]),
            u = 7,
            sig.level = .05,
            power = .8)
```

#### TI
```{r}
mix_TI <- lmer(TI ~ task * level + (1|id), 
               nasa_tlx_wide,
               contrasts = list(level="contr.treatment"))
summary(mix_TI)
anova(mix_TI)
r.squaredGLMM(mix_TI)[1]
r2tof2(r.squaredGLMM(mix_TI)[1])
pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_TI)[1]),
            u = 7,
            sig.level = .05,
            power = .8)
```

#### PE
```{r}
mix_PE <- lmer(PE ~ task * level + (1|id), 
               nasa_tlx_wide,
               contrasts = list(level="contr.treatment"))
summary(mix_PE)
anova(mix_PE)
r.squaredGLMM(mix_PE)[1]
r2tof2(r.squaredGLMM(mix_PE)[1])
pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PE)[1]),
            u = 7,
            sig.level = .05,
            power = .8)
```

#### EF
```{r}
mix_EF <- lmer(EF ~ task * level + (1|id), 
               nasa_tlx_wide,
               contrasts = list(level="contr.treatment"))
summary(mix_EF)
anova(mix_EF)
r.squaredGLMM(mix_EF)[1]
r2tof2(r.squaredGLMM(mix_EF)[1])
pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_EF)[1]),
            u = 7,
            sig.level = .05,
            power = .8)
```

#### FR
```{r}
mix_FR <- lmer(FR ~ task * level + (1|id), 
               nasa_tlx_wide,
               contrasts = list(level="contr.treatment"))
summary(mix_FR)
anova(mix_FR)
r.squaredGLMM(mix_FR)[1]
r2tof2(r.squaredGLMM(mix_FR)[1])
pwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_FR)[1]),
            u = 7,
            sig.level = .05,
            power = .8)
```

### CFA apriopri power analysis

```{r lavmodel}
lavmodel <- "
PE =~ PE_mr + PE_ms + PE_st
ME =~ ME_mr + ME_ms + ME_st
PH =~ PH_mr + PH_ms + PH_st
EF =~ EF_mr + EF_ms + EF_st
TI =~ TI_mr + TI_ms + TI_st
FR =~ FR_mr + FR_ms + FR_st
OW =~ PE + ME + PH + EF + TI + FR"
```

```{r lavmodel-df}
semPower.getDf(lavmodel)
```

```{r}
ap <- semPower.aPriori(effect = .05, effect.measure = 'RMSEA',
                       alpha = .05, power = .80, df = semPower.getDf(lavmodel))
summary(ap)
```

### CFA analysis

```{r nasatlx-data-cfa}
NASATLX_data |> 
  pivot_wider(id_cols = id, 
              names_from = item, 
              values_from = score,
              values_fn = unlist) -> NASATLX_cfa
```

```{r nasatlx-cfa-easy}
model_easy <- "PE =~ pe_mr_E + pe_ms_E + pe_st_E
PH =~ ph_mr_E + ph_ms_E + ph_st_E
ME =~ me_mr_E + me_ms_E + me_st_E
EF =~ ef_mr_E + ef_ms_E + ef_st_E
TI =~ ti_mr_E + ti_ms_E + ti_st_E
FR =~ fr_mr_E + fr_ms_E + fr_st_E
OW =~ PE + ME + PH + EF + TI + FR"

cfa_easy <- cfa(model_easy, NASATLX_cfa,)
summary(cfa_easy, fit.measures = TRUE)

fitmeasures(cfa_easy, fit.measures = c("chisq", "df", "pvalue", "cfi", "tli", "rmsea", "srmr"))
```

```{r nasatlx-cfa-medium}
model_medium <- "PE =~ pe_mr_M + pe_ms_M + pe_st_M
PH =~ ph_mr_M + ph_ms_M + ph_st_M
ME =~ me_mr_M + me_ms_M + me_st_M
EF =~ ef_mr_M + ef_ms_M + ef_st_M
TI =~ ti_mr_M + ti_ms_M + ti_st_M
FR =~ fr_mr_M + fr_ms_M + fr_st_M
OW =~ PE + ME + PH + EF + TI + FR"

cfa_medium <- cfa(model_medium, NASATLX_cfa,)
summary(cfa_medium, fit.measures = TRUE)

fitmeasures(cfa_medium, fit.measures = c("chisq", "df", "pvalue", "cfi", "tli", "rmsea", "srmr"))
```

```{r nasatlx-cfa-hard}
model_hard <- "PE =~ pe_mr_H + pe_ms_H + pe_st_H
PH =~ ph_mr_H + ph_ms_H + ph_st_H
ME =~ me_mr_H + me_ms_H + me_st_H
EF =~ ef_mr_H + ef_ms_H + ef_st_H
TI =~ ti_mr_H + ti_ms_H + ti_st_H
FR =~ fr_mr_H + fr_ms_H + fr_st_H
OW =~ PE + ME + PH + EF + TI + FR"

cfa_hard <- cfa(model_hard, NASATLX_cfa,)
summary(cfa_medium, fit.measures = TRUE)

fitmeasures(cfa_hard, fit.measures = c("chisq", "df", "pvalue", "cfi", "tli", "rmsea", "srmr"))
```

