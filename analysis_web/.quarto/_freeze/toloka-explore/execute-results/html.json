{
  "hash": "6ee9224bbd74bbac8fe690ce0d161327",
  "result": {
    "markdown": "# Yandex.Toloka Data Exploration\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmr_preproc <- function(d) {\n  \n  require(tidyverse)\n  \n  d |> select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -> MR_easy # ready to use\n  \n  \n  d |> select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |>  # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -> MR_medium # ready to use\n  \n  \n  \n  d |> select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -> MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -> MR\n  \n  return(MR)\n  \n}\n\nst_preproc <- function(d) {\n  \n  require(tidyverse)\n  \n  d |> select(\n    # select columns we need\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -> ST_easy # ready to use\n  \n  d |> select(\n    # select columns we need\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -> ST_medium # ready to use\n  \n  \n  d |> select(\n    # select columns we need\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |>\n    drop_na() |> # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |> # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -> ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -> ST\n  \n  return(ST)\n  \n}\n\nms_preproc <- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count <- function(df) {\n    df |> select(matches(\"^noun\")) |> as.matrix() -> s\n    df |> select(matches(\"^resp\")) |> as.matrix() -> r\n    a <- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] <- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |> select(\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"easy\") |>\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"rt\" = \"mouse_MSe.time\"\n      ) |>\n      select(-c(paste0(\"noun\", 4:7))) -> MS_easy\n    \n    d |> select(\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"medium\") |> \n      rename(\"rt\" = \"mouse_MSm.time\") |>\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |> \n      select(-noun6, -noun7) -> MS_medium\n    \n    \n    d |> select(\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |>\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"hard\") |>\n      rename(\"rt\" = \"mouse_MSh.time\") |> \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -> MS_hard\n    \n  } else {\n    \n    d |> select(matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |>\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text\n      ) |>\n      select(-c(paste0(\"noun\", 4:7))) -> MS_easy\n    \n    d |> select(matches(\"^noun\"),\n                matches(\"MSm.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |>\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |>\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |> \n      select(-noun6, -noun7) -> MS_medium\n    \n    \n    d |> select(matches(\"^noun\"),\n                matches(\"MSh.text$\")) |>\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |>\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |>\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -> MS_hard\n  }\n  \n  tibble(\n    #id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |>\n    pivot_longer(cols = -c(\"trials\"), values_to = \"value\") |>\n    separate(name, c(\"task\", \"level\", \"name\")) |>\n    pivot_wider(values_from = value, names_from = name) |>\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -> MS\n  \n  return(MS)\n  \n}\n\nnasatlx_preproc <- function(d) {\n  d |> select(slider.response,\n              head,\n              task_type,\n              task_level) |>\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |>\n    rename(\"score\" = slider.response) |>\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |>\n    select(scale, score, task, level) -> NASATLX\n  \n  return(NASATLX)\n}\n\n# sequence_preproc <- function(d) {\n#   \n#   d |> select(\n#     E_rotation,\n#     M_rotation,\n#     H_rotation,\n#     E_Sternberg,\n#     M_Sternberg,\n#     H_Sternberg,\n#     E_span,\n#     M_span,\n#     H_span\n#   ) |>\n#     drop_na() |>\n#     sapply(function(x) which(x == 1)) -> v \n#   \n#   tibble(name = names(v),\n#          order = v,\n#          id = d[[\"Индивидуальный_код\"]][1]) |>\n#     arrange(order) |>\n#     separate(name, c(\"level\", \"task\"), \"_\") |>\n#     mutate(\n#       task = recode(\n#         task,\n#         \"rotation\" = \"MR\",\n#         \"Sternberg\" = \"ST\",\n#         \"span\" = \"MS\"\n#       ),\n#       level = recode(\n#         level,\n#         \"E\" = \"easy\",\n#         \"M\" = \"medium\",\n#         \"H\" = \"hard\"\n#       )\n#     ) -> SEQUENCE\n#   \n#   return(SEQUENCE)\n#   \n# }\n```\n:::\n\n\n\n\n## Load first data\n\nTo compare\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"../preproc-data/MR_firstbanch_data_agg.csv\") -> MR_fb_agg\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nread_csv(\"../preproc-data/MS_firstbanch_data_agg.csv\") -> MS_fb_agg\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nread_csv(\"../preproc-data/ST_firstbanch_data_agg.csv\") -> ST_fb_agg\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## Pool 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- paste0(\"../data-toloka/pool1/\", dir(\"../data-toloka/pool1\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\n#SEQUENCE_data <- tibble()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  #SEQUENCE_data |> bind_rows(sequence_preproc(d)) -> SEQUENCE_data\n  \n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"../data-toloka/pool1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/pool1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/pool1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/pool1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/pool1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# MR_data |> write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |> write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |> write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |> write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |> write_csv(\"sequence_data_toloka.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMS_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 360 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMS_data |> \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nST_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nST_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n## Pool 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- paste0(\"../data-toloka/pool2/\", dir(\"../data-toloka/pool2\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\n#SEQUENCE_data <- tibble()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  #SEQUENCE_data |> bind_rows(sequence_preproc(d)) -> SEQUENCE_data\n  \n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"../data-toloka/pool2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/pool2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/pool2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/pool2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/pool2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/pool2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/pool2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/pool2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/pool2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/pool2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# MR_data |> write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |> write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |> write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |> write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |> write_csv(\"sequence_data_toloka.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMS_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 720 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMS_data |> \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nST_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nST_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Pool 1 & Pool 2 together\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- c(\n  paste0(\"../data-toloka/pool1/\", dir(\"../data-toloka/pool1\")),\n  paste0(\"../data-toloka/pool2/\", dir(\"../data-toloka/pool2\"))\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\n#SEQUENCE_data <- tibble()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  #SEQUENCE_data |> bind_rows(sequence_preproc(d)) -> SEQUENCE_data\n  \n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"../data-toloka/pool1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/pool1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/pool1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/pool1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/pool1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n[1] \"../data-toloka/pool2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/pool2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/pool2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/pool2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/pool2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/pool2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/pool2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/pool2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/pool2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/pool2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# MR_data |> write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |> write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |> write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |> write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |> write_csv(\"sequence_data_toloka.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  labs(title = \"MR\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMS_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMS_data |> \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  labs(title = \"MS\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nST_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nST_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  labs(title = \"ST\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n## Assignments Check IDs\n\n\n::: {.cell}\n\n```{.r .cell-code}\npool88 <- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40236288__21-07-2023.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 7 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:meds, OUTPUT:gender, OUTPUT:diseases,...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (13): GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GOLDEN:gender...\ndttm  (5): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\npool87 <- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40260687__21-07-2023.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 4 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (14): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (4): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\npool68 <- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40272468__21-07-2023.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 20 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (12): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (6): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:accepted, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\npool16 <- read_tsv(\"../data-toloka/assignments/assignments_from_pool_40307616__21-07-2023.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 43 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (15): INPUT:pavlovia_link, OUTPUT:id, OUTPUT:meds, OUTPUT:gender, OUTPU...\ndbl   (5): OUTPUT:age, OUTPUT:code, OUTPUT:sleep, OUTPUT:feeling, ASSIGNMENT...\nlgl  (13): GOLDEN:id, GOLDEN:age, GOLDEN:code, GOLDEN:meds, GOLDEN:sleep, GO...\ndttm  (5): ASSIGNMENT:started, ASSIGNMENT:submitted, ASSIGNMENT:rejected, AS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npool88$`ASSIGNMENT:worker_id` %in% pool87$`ASSIGNMENT:worker_id` |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\npool88$`ASSIGNMENT:worker_id` %in% pool68$`ASSIGNMENT:worker_id` |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\npool88$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\npool87$`ASSIGNMENT:worker_id` %in% pool68$`ASSIGNMENT:worker_id` |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\npool87$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\npool68$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id` |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n\n```{.r .cell-code}\n## duplicates\npool68$`ASSIGNMENT:worker_id`[pool68$`ASSIGNMENT:worker_id` %in% pool16$`ASSIGNMENT:worker_id`]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"f19c1b96415fa4ebadffa0b9fdf0b666\" \"040267dc3213d9bb136605f74e9fd81f\"\n```\n:::\n:::\n\n\n## Pools 3 & 4\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#rm(list=ls())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## broken Column `mouse_MSh.time` doesn't exist.\nfile.remove(\"../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in\nfile.remove(\"../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv\"):\ncannot remove file\n'../data-toloka/pool34/21111984_toloka_2023-07-21_17h42.24.114.csv', reason 'No\nsuch file or directory'\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- paste0(\"../data-toloka/pool34/\", dir(\"../data-toloka/pool34\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data <- tibble()\nST_data <- tibble()\nMS_data <- tibble()\nNASATLX_data <- tibble()\n#SEQUENCE_data <- tibble()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d <- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |> bind_rows(mr_preproc(d) |> mutate(file = files[i])) -> MR_data\n  ST_data |> bind_rows(st_preproc(d) |> mutate(file = files[i])) -> ST_data\n  MS_data |> bind_rows(ms_preproc(d) |> mutate(file = files[i])) -> MS_data\n  NASATLX_data |> bind_rows(nasatlx_preproc(d) |> mutate(file = files[i])) -> NASATLX_data\n  #SEQUENCE_data |> bind_rows(sequence_preproc(d)) -> SEQUENCE_data\n  \n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"../data-toloka/pool34/01.09.1988_toloka_2023-07-21_16h03.32.707.csv\"\n[1] \"../data-toloka/pool34/010390_toloka_2023-07-21_13h41.57.595.csv\"\n[1] \"../data-toloka/pool34/02.10.1992_toloka_2023-07-21_13h49.46.426.csv\"\n[1] \"../data-toloka/pool34/03.07.1987_toloka_2023-07-21_18h22.46.276.csv\"\n[1] \"../data-toloka/pool34/031186_toloka_2023-07-21_13h45.33.796.csv\"\n[1] \"../data-toloka/pool34/03121996_toloka_2023-07-21_19h46.15.237.csv\"\n[1] \"../data-toloka/pool34/04.11.1995_toloka_2023-07-21_18h39.24.717.csv\"\n[1] \"../data-toloka/pool34/040485_toloka_2023-07-21_17h36.41.405.csv\"\n[1] \"../data-toloka/pool34/040485_toloka_2023-07-21_17h56.38.378.csv\"\n[1] \"../data-toloka/pool34/040897_toloka_2023-07-21_15h56.53.591.csv\"\n[1] \"../data-toloka/pool34/05011994_toloka_2023-07-21_18h04.14.803.csv\"\n[1] \"../data-toloka/pool34/060302_toloka_2023-07-21_15h02.31.748.csv\"\n[1] \"../data-toloka/pool34/06051987_toloka_2023-07-21_18h25.49.317.csv\"\n[1] \"../data-toloka/pool34/09021990_toloka_2023-07-21_13h41.16.661.csv\"\n[1] \"../data-toloka/pool34/090291_toloka_2023-07-21_23h39.02.549.csv\"\n[1] \"../data-toloka/pool34/10111988_toloka_2023-07-21_13h28.34.745.csv\"\n[1] \"../data-toloka/pool34/120786_toloka_2023-07-21_15h34.34.535.csv\"\n[1] \"../data-toloka/pool34/13.01.1989_toloka_2023-07-21_18h04.48.759.csv\"\n[1] \"../data-toloka/pool34/14021986_toloka_2023-07-21_18h07.50.397.csv\"\n[1] \"../data-toloka/pool34/140800_toloka_2023-07-21_22h35.26.001.csv\"\n[1] \"../data-toloka/pool34/1511987_toloka_2023-07-21_22h11.58.878.csv\"\n[1] \"../data-toloka/pool34/151295_toloka_2023-07-21_14h20.24.718.csv\"\n[1] \"../data-toloka/pool34/16121987_toloka_2023-07-21_14h15.15.295.csv\"\n[1] \"../data-toloka/pool34/17.06.1988_toloka_2023-07-21_13h56.37.405.csv\"\n[1] \"../data-toloka/pool34/19091998_toloka_2023-07-21_13h59.25.510.csv\"\n[1] \"../data-toloka/pool34/19121989_toloka_2023-07-21_18h44.23.764.csv\"\n[1] \"../data-toloka/pool34/201085_toloka_2023-07-21_13h48.03.696.csv\"\n[1] \"../data-toloka/pool34/20121998_toloka_2023-07-21_18h21.19.291.csv\"\n[1] \"../data-toloka/pool34/210499_toloka_2023-07-21_13h37.56.499.csv\"\n[1] \"../data-toloka/pool34/210723_toloka_2023-07-21_18h40.05.195.csv\"\n[1] \"../data-toloka/pool34/211104_toloka_2023-07-21_17h06.29.907.csv\"\n[1] \"../data-toloka/pool34/230697_toloka_2023-07-21_23h40.02.926.csv\"\n[1] \"../data-toloka/pool34/230799_toloka_2023-07-21_21h03.46.166.csv\"\n[1] \"../data-toloka/pool34/24051985_toloka_2023-07-21_14h07.46.171.csv\"\n[1] \"../data-toloka/pool34/26042003_toloka_2023-07-21_20h24.07.570.csv\"\n[1] \"../data-toloka/pool34/27.11.1987_toloka_2023-07-21_18h20.10.164.csv\"\n[1] \"../data-toloka/pool34/28101993_toloka_2023-07-21_14h03.32.293.csv\"\n[1] \"../data-toloka/pool34/281184_toloka_2023-07-21_20h40.16.637.csv\"\n[1] \"../data-toloka/pool34/291295_toloka_2023-07-21_14h47.45.284.csv\"\n[1] \"../data-toloka/pool34/300305_toloka_2023-07-21_14h46.09.683.csv\"\n[1] \"../data-toloka/pool34/301099_toloka_2023-07-22_11h34.54.059.csv\"\n[1] \"../data-toloka/pool34/31081998_toloka_2023-07-21_13h39.43.342.csv\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# MR_data |> write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |> write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |> write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |> write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |> write_csv(\"sequence_data_toloka.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data$file |> unique() |> length()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 42\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMR_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMS_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3024 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMS_data |> \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nST_data |> \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nST_data |> \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n```\n\n::: {.cell-output-display}\n![](toloka-explore_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "toloka-explore_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}